
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:49 p.m.
' This is a partial class file. The other one is IngresosEntity.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports abacusRules.Objects


Imports Cooperator.Framework.Core
Imports Cooperator.Framework.Core.LazyLoad
Imports System

Namespace Entities

    Public Partial Class Ingresos
        Inherits Objects.IngresosObject
        Implements IMappeableIngresos
        Implements IEquatable(Of Ingresos)
        Implements ICloneable

        #Region "Ctor"

        Public Sub New()
            MyBase.New()
            
        End Sub

        
        Public Sub New (ByVal IdIngresos As System.Int32)
            MyBase.New()

			_IdIngresos = IdIngresos

            
            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdIngresos As System.Int32, _
			ByVal IdAlmacen As System.Nullable(Of System.Int32), _
			ByVal IdTrabjador As System.Nullable(Of System.Int32), _
			ByVal Fecha As System.Nullable(Of System.DateTime), _
			ByVal Clasificacion As System.Nullable(Of System.Int32), _
			ByVal TipDoc As System.Nullable(Of System.Int32), _
			ByVal Serie As System.String, _
			ByVal Numero As System.String, _
			ByVal IdProveedor As System.Nullable(Of System.Int32), _
			ByVal Moneda As System.Nullable(Of System.Int32), _
			ByVal ModoPago As System.Nullable(Of System.Int32), _
			ByVal estado As System.String, _
			ByVal valortotal As System.Nullable(Of System.Decimal), _
			ByVal lote As System.String, _
			ByVal AlmacenesString As System.String, _
			ByVal ProveedoresString As System.String, _
			ByVal TrabajadoresString As System.String)
            MyBase.New()

			_IdIngresos = IdIngresos
			_IdAlmacen = IdAlmacen
			_IdTrabjador = IdTrabjador
			_Fecha = Fecha
			_Clasificacion = Clasificacion
			_TipDoc = TipDoc
			_Serie = Serie
			_Numero = Numero
			_IdProveedor = IdProveedor
			_Moneda = Moneda
			_ModoPago = ModoPago
			_estado = estado
			_valortotal = valortotal
			_lote = lote
			_AlmacenesString = AlmacenesString
			_ProveedoresString = ProveedoresString
			_TrabajadoresString = TrabajadoresString

            
            Call Initialized()
        End Sub
        
        #End Region

        #Region "Fields"

        Protected  _AlmacenesEntity As Objects.AlmacenesObject
Protected  _ProveedoresEntity As Objects.ProveedoresObject
Protected  _TrabajadoresEntity As Objects.TrabajadoresObject

        #End Region

        #Region "Properties"
        
Dim _AlmacenesEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property AlmacenesEntity As Objects.AlmacenesObject
            Get
                If _AlmacenesEntity Is Nothing  AndAlso Me.IdAlmacen.HasValue AndAlso Not _AlmacenesEntityFetched  Then
_AlmacenesEntityFetched = True
Dim _AlmacenesEntityTemp As Objects.AlmacenesObject = New Objects.AlmacenesObject(Me.IdAlmacen.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.AlmacenesObject))
 _AlmacenesEntity = CType(lazyProvider.GetEntity(GetType(Objects.AlmacenesObject), _AlmacenesEntityTemp), Objects.AlmacenesObject)
End If

                Return _AlmacenesEntity
            End Get
            Set (value As Objects.AlmacenesObject)
                MyBase.PropertyModified()
                _AlmacenesEntity = value
                If value IsNot Nothing Then
   _IdAlmacen = value.IdAlmacen
If value.Almacen IsNot Nothing Then 
_AlmacenesString = value.Almacen.ToString() 
Else
    _AlmacenesString = "" 
End If

Else 
   _IdAlmacen = Nothing
_AlmacenesString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
Dim _ProveedoresEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property ProveedoresEntity As Objects.ProveedoresObject
            Get
                If _ProveedoresEntity Is Nothing  AndAlso Me.IdProveedor.HasValue AndAlso Not _ProveedoresEntityFetched  Then
_ProveedoresEntityFetched = True
Dim _ProveedoresEntityTemp As Objects.ProveedoresObject = New Objects.ProveedoresObject(Me.IdProveedor.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.ProveedoresObject))
 _ProveedoresEntity = CType(lazyProvider.GetEntity(GetType(Objects.ProveedoresObject), _ProveedoresEntityTemp), Objects.ProveedoresObject)
End If

                Return _ProveedoresEntity
            End Get
            Set (value As Objects.ProveedoresObject)
                MyBase.PropertyModified()
                _ProveedoresEntity = value
                If value IsNot Nothing Then
   _IdProveedor = value.IdProveedor
If value.Nombre IsNot Nothing Then 
_ProveedoresString = value.Nombre.ToString() 
Else
    _ProveedoresString = "" 
End If

Else 
   _IdProveedor = Nothing
_ProveedoresString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
Dim _TrabajadoresEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property TrabajadoresEntity As Objects.TrabajadoresObject
            Get
                If _TrabajadoresEntity Is Nothing  AndAlso Me.IdTrabjador.HasValue AndAlso Not _TrabajadoresEntityFetched  Then
_TrabajadoresEntityFetched = True
Dim _TrabajadoresEntityTemp As Objects.TrabajadoresObject = New Objects.TrabajadoresObject(Me.IdTrabjador.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.TrabajadoresObject))
 _TrabajadoresEntity = CType(lazyProvider.GetEntity(GetType(Objects.TrabajadoresObject), _TrabajadoresEntityTemp), Objects.TrabajadoresObject)
End If

                Return _TrabajadoresEntity
            End Get
            Set (value As Objects.TrabajadoresObject)
                MyBase.PropertyModified()
                _TrabajadoresEntity = value
                If value IsNot Nothing Then
   _IdTrabjador = value.IdTrabjador
If value.Nombres IsNot Nothing Then 
_TrabajadoresString = value.Nombres.ToString() 
Else
    _TrabajadoresString = "" 
End If

Else 
   _IdTrabjador = Nothing
_TrabajadoresString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
        #End Region

        ''' <summary>
        ''' Returns de original value of entity since was created or restored. 
        ''' </summary>
        Public Shadows Function OriginalValue() As Ingresos 
                Return CType(MyBase.OriginalValue, Ingresos)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Protected Overrides Function Clone() As Object 
            Dim newObject As Ingresos 
            

            newObject = CType(Me.MemberwiseClone(), Ingresos)
            ' Entities
                         
            If Me._AlmacenesEntity IsNot Nothing Then
                newObject._AlmacenesEntity = CType(CType(Me._AlmacenesEntity, ICloneable).Clone(),Objects.AlmacenesObject)
            End If
                         
            If Me._ProveedoresEntity IsNot Nothing Then
                newObject._ProveedoresEntity = CType(CType(Me._ProveedoresEntity, ICloneable).Clone(),Objects.ProveedoresObject)
            End If
                         
            If Me._TrabajadoresEntity IsNot Nothing Then
                newObject._TrabajadoresEntity = CType(CType(Me._TrabajadoresEntity, ICloneable).Clone(),Objects.TrabajadoresObject)
            End If
            
            ' Colections
            
            ' OriginalValue
            Dim newOriginalValue As Ingresos
            If MyBase.InternalOriginalValue IsNot Nothing Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), Ingresos)
                ' Entities
                             
                If Me.OriginalValue()._AlmacenesEntity IsNot Nothing Then
                    newOriginalValue._AlmacenesEntity = CType(CType(Me.OriginalValue()._AlmacenesEntity, ICloneable).Clone(), Objects.AlmacenesObject)
                End If
                             
                If Me.OriginalValue()._ProveedoresEntity IsNot Nothing Then
                    newOriginalValue._ProveedoresEntity = CType(CType(Me.OriginalValue()._ProveedoresEntity, ICloneable).Clone(), Objects.ProveedoresObject)
                End If
                             
                If Me.OriginalValue()._TrabajadoresEntity IsNot Nothing Then
                    newOriginalValue._TrabajadoresEntity = CType(CType(Me.OriginalValue()._TrabajadoresEntity, ICloneable).Clone(), Objects.TrabajadoresObject)
                End If
                
                ' Colections
                            
                newObject.InternalOriginalValue = newOriginalValue

            End If
            Return newObject
        End Function



        Private Sub CompleteEntity(AlmacenesEntity As Objects.AlmacenesObject, ProveedoresEntity As Objects.ProveedoresObject, TrabajadoresEntity As Objects.TrabajadoresObject) Implements IMappeableIngresos.CompleteEntity
        _AlmacenesEntity = AlmacenesEntity
_ProveedoresEntity = ProveedoresEntity
_TrabajadoresEntity = TrabajadoresEntity
        End Sub

        
        Private Function IsAlmacenesEntityNull() As Boolean Implements IMappeableIngresos.IsAlmacenesEntityNull
            Return IsNothing(_AlmacenesEntity)
        End Function
        
        Private Function IsProveedoresEntityNull() As Boolean Implements IMappeableIngresos.IsProveedoresEntityNull
            Return IsNothing(_ProveedoresEntity)
        End Function
        
        Private Function IsTrabajadoresEntityNull() As Boolean Implements IMappeableIngresos.IsTrabajadoresEntityNull
            Return IsNothing(_TrabajadoresEntity)
        End Function
        

        Private Sub SetFKValuesForChilds(entity As Ingresos) Implements IMappeableIngresos.SetFKValuesForChilds
                
        End Sub

        Public Overloads Function Equals(other As Ingresos) As Boolean Implements IEquatable(Of Ingresos).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function

    End Class

    Public Interface IMappeableIngresos
        Sub CompleteEntity(AlmacenesEntity As Objects.AlmacenesObject, ProveedoresEntity As Objects.ProveedoresObject, TrabajadoresEntity As Objects.TrabajadoresObject)
        
        Function IsAlmacenesEntityNull() As Boolean
        
        Function IsProveedoresEntityNull() As Boolean
        
        Function IsTrabajadoresEntityNull() As Boolean
        
        Sub SetFKValuesForChilds(entity As Ingresos )
    End Interface

    Public Partial Class IngresosList
        Inherits ObjectList(Of Ingresos)    
    End Class
End Namespace

Namespace Views
    Partial Public Class IngresosListView
        Inherits ObjectListView(Of Entities.Ingresos)

        Sub New(ByVal list As Entities.IngresosList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


