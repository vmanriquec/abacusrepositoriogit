
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:49 p.m.
' This is a partial class file. The other one is ClieAlmacenEntity.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports abacusRules.Objects


Imports Cooperator.Framework.Core
Imports Cooperator.Framework.Core.LazyLoad
Imports System

Namespace Entities

    Public Partial Class ClieAlmacen
        Inherits Objects.ClieAlmacenObject
        Implements IMappeableClieAlmacen
        Implements IEquatable(Of ClieAlmacen)
        Implements ICloneable

        #Region "Ctor"

        Public Sub New()
            MyBase.New()
            
        End Sub

        
        Public Sub New (ByVal IdClialmacen As System.Int32)
            MyBase.New()

			_IdClialmacen = IdClialmacen

            
            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdClialmacen As System.Int32, _
			ByVal IdClialmacen_2 As System.Nullable(Of System.Int32), _
			ByVal Direccion As System.String, _
			ByVal Provincia As System.Nullable(Of System.Int32), _
			ByVal Distrito As System.Nullable(Of System.Int32), _
			ByVal Pais As System.String, _
			ByVal Referencia As System.String, _
			ByVal IdCliente As System.Nullable(Of System.Int32), _
			ByVal IdVendedor As System.Nullable(Of System.Int32), _
			ByVal IdRuta As System.Nullable(Of System.Int32), _
			ByVal Observacion As System.String, _
			ByVal upsize_ts As System.Nullable(Of System.DateTime), _
			ByVal ClientesString As System.String)
            MyBase.New()

			_IdClialmacen = IdClialmacen
			_IdClialmacen_2 = IdClialmacen_2
			_Direccion = Direccion
			_Provincia = Provincia
			_Distrito = Distrito
			_Pais = Pais
			_Referencia = Referencia
			_IdCliente = IdCliente
			_IdVendedor = IdVendedor
			_IdRuta = IdRuta
			_Observacion = Observacion
			_upsize_ts = upsize_ts
			_ClientesString = ClientesString

            
            Call Initialized()
        End Sub
        
        #End Region

        #Region "Fields"

        Protected  _ClientesEntity As Objects.ClientesObject
Protected  _rutaEntity As Objects.rutaObject

        #End Region

        #Region "Properties"
        
Dim _ClientesEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property ClientesEntity As Objects.ClientesObject
            Get
                If _ClientesEntity Is Nothing  AndAlso Me.IdCliente.HasValue AndAlso Not _ClientesEntityFetched  Then
_ClientesEntityFetched = True
Dim _ClientesEntityTemp As Objects.ClientesObject = New Objects.ClientesObject(Me.IdCliente.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.ClientesObject))
 _ClientesEntity = CType(lazyProvider.GetEntity(GetType(Objects.ClientesObject), _ClientesEntityTemp), Objects.ClientesObject)
End If

                Return _ClientesEntity
            End Get
            Set (value As Objects.ClientesObject)
                MyBase.PropertyModified()
                _ClientesEntity = value
                If value IsNot Nothing Then
   _IdCliente = value.IdCliente
If value.Nombre IsNot Nothing Then 
_ClientesString = value.Nombre.ToString() 
Else
    _ClientesString = "" 
End If

Else 
   _IdCliente = Nothing
_ClientesString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
Dim _rutaEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property rutaEntity As Objects.rutaObject
            Get
                If _rutaEntity Is Nothing  AndAlso Me.IdRuta.HasValue AndAlso Not _rutaEntityFetched  Then
_rutaEntityFetched = True
Dim _rutaEntityTemp As Objects.rutaObject = New Objects.rutaObject(Me.IdRuta.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.rutaObject))
 _rutaEntity = CType(lazyProvider.GetEntity(GetType(Objects.rutaObject), _rutaEntityTemp), Objects.rutaObject)
End If

                Return _rutaEntity
            End Get
            Set (value As Objects.rutaObject)
                MyBase.PropertyModified()
                _rutaEntity = value
                If value IsNot Nothing Then
   _IdRuta = value.Idruta

Else 
   _IdRuta = Nothing

End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
        #End Region

        ''' <summary>
        ''' Returns de original value of entity since was created or restored. 
        ''' </summary>
        Public Shadows Function OriginalValue() As ClieAlmacen 
                Return CType(MyBase.OriginalValue, ClieAlmacen)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Protected Overrides Function Clone() As Object 
            Dim newObject As ClieAlmacen 
            

            newObject = CType(Me.MemberwiseClone(), ClieAlmacen)
            ' Entities
                         
            If Me._ClientesEntity IsNot Nothing Then
                newObject._ClientesEntity = CType(CType(Me._ClientesEntity, ICloneable).Clone(),Objects.ClientesObject)
            End If
                         
            If Me._rutaEntity IsNot Nothing Then
                newObject._rutaEntity = CType(CType(Me._rutaEntity, ICloneable).Clone(),Objects.rutaObject)
            End If
            
            ' Colections
            
            ' OriginalValue
            Dim newOriginalValue As ClieAlmacen
            If MyBase.InternalOriginalValue IsNot Nothing Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), ClieAlmacen)
                ' Entities
                             
                If Me.OriginalValue()._ClientesEntity IsNot Nothing Then
                    newOriginalValue._ClientesEntity = CType(CType(Me.OriginalValue()._ClientesEntity, ICloneable).Clone(), Objects.ClientesObject)
                End If
                             
                If Me.OriginalValue()._rutaEntity IsNot Nothing Then
                    newOriginalValue._rutaEntity = CType(CType(Me.OriginalValue()._rutaEntity, ICloneable).Clone(), Objects.rutaObject)
                End If
                
                ' Colections
                            
                newObject.InternalOriginalValue = newOriginalValue

            End If
            Return newObject
        End Function



        Private Sub CompleteEntity(ClientesEntity As Objects.ClientesObject, rutaEntity As Objects.rutaObject) Implements IMappeableClieAlmacen.CompleteEntity
        _ClientesEntity = ClientesEntity
_rutaEntity = rutaEntity
        End Sub

        
        Private Function IsClientesEntityNull() As Boolean Implements IMappeableClieAlmacen.IsClientesEntityNull
            Return IsNothing(_ClientesEntity)
        End Function
        
        Private Function IsrutaEntityNull() As Boolean Implements IMappeableClieAlmacen.IsrutaEntityNull
            Return IsNothing(_rutaEntity)
        End Function
        

        Private Sub SetFKValuesForChilds(entity As ClieAlmacen) Implements IMappeableClieAlmacen.SetFKValuesForChilds
                
        End Sub

        Public Overloads Function Equals(other As ClieAlmacen) As Boolean Implements IEquatable(Of ClieAlmacen).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function

    End Class

    Public Interface IMappeableClieAlmacen
        Sub CompleteEntity(ClientesEntity As Objects.ClientesObject, rutaEntity As Objects.rutaObject)
        
        Function IsClientesEntityNull() As Boolean
        
        Function IsrutaEntityNull() As Boolean
        
        Sub SetFKValuesForChilds(entity As ClieAlmacen )
    End Interface

    Public Partial Class ClieAlmacenList
        Inherits ObjectList(Of ClieAlmacen)    
    End Class
End Namespace

Namespace Views
    Partial Public Class ClieAlmacenListView
        Inherits ObjectListView(Of Entities.ClieAlmacen)

        Sub New(ByVal list As Entities.ClieAlmacenList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


