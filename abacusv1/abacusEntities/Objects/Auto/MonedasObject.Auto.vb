
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:48 p.m.
' This is a Partial class file. The other one is MonedasObject.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports Cooperator.Framework.Core
Imports System

Namespace Objects

    Public Partial Class MonedasObject
        Inherits BaseObject
        Implements IMappeableMonedasObject
        Implements IUniqueIdentifiable
        Implements IEquatable(Of MonedasObject)
        Implements ICloneable

#Region "Ctor"

        Public Sub New()
            MyBase.New()

			_IdMoneda =  ValuesGenerator.GetInt32

        End Sub

        
        Public Sub New(ByVal IdMoneda As System.Int32)
            MyBase.New()

			_IdMoneda = IdMoneda

            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdMoneda As System.Int32, _
			ByVal Moneda As System.String, _
			ByVal Simbolo As System.String)
            MyBase.New()

			_IdMoneda = IdMoneda
			_Moneda = Moneda
			_Simbolo = Simbolo

            Call Initialized()
        End Sub
        

#End Region

#Region "Events"

        
#End Region

#Region "Fields"

        Protected _IdMoneda As System.Int32
Protected _Moneda As System.String
Protected _Simbolo As System.String

#End Region

#Region "Properties"
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable ReadOnly Property IdMoneda As System.Int32
            Get
                Return _IdMoneda
            End Get
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property Moneda As System.String
            Get
                Return _Moneda
            End Get
            
            Set
                MyBase.PropertyModified()
                _Moneda = value
                
            End Set
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property Simbolo As System.String
            Get
                Return _Simbolo
            End Get
            
            Set
                MyBase.PropertyModified()
                _Simbolo = value
                
            End Set
            
        End Property
        
        #End Region

        

        Protected Overrides Sub SetOriginalValue()
            MyBase.InternalOriginalValue = CType(Me.MemberwiseClone(), IObject)
        End Sub

        Protected Overridable Function Clone() As Object Implements ICloneable.Clone
            Dim newObject As MonedasObject 
            Dim newOriginalValue As MonedasObject 

            newObject = CType(Me.MemberwiseClone(), MonedasObject) 
            If (MyBase.InternalOriginalValue IsNot Nothing) Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), MonedasObject)
                newObject.InternalOriginalValue = newOriginalValue
            End If
            Return newObject
        End Function


        ''' <summary>
        ''' Returns de original value of object since was created or restored.
        ''' </summary>
        Public Shadows Function OriginalValue() As MonedasObject 
           Return CType(MyBase.OriginalValue, MonedasObject)
        End Function


        Private Sub HydrateFields(ByVal IdMoneda As System.Int32, _
			ByVal Moneda As System.String, _
			ByVal Simbolo As System.String) Implements IMappeableMonedasObject.HydrateFields        
        	_IdMoneda = IdMoneda
			_Moneda = Moneda
			_Simbolo = Simbolo
        End Sub

        Private Function GetFieldsForInsert() As Object() Implements IMappeableMonedasObject.GetFieldsForInsert
        
        
            Dim _myArray(2) As Object
            _myArray(0) = _IdMoneda
			If (Not System.String.IsNullOrEmpty(_Moneda)) Then _myArray(1) = _Moneda
			If (Not System.String.IsNullOrEmpty(_Simbolo)) Then _myArray(2) = _Simbolo
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForUpdate() As Object() Implements IMappeableMonedasObject.GetFieldsForUpdate
        
        
            
            Dim _myArray(2) As Object
            _myArray(0) = _IdMoneda
			If (Not System.String.IsNullOrEmpty(_Moneda)) Then _myArray(1) = _Moneda
			If (Not System.String.IsNullOrEmpty(_Simbolo)) Then _myArray(2) = _Simbolo
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForDelete() As Object() Implements IMappeableMonedasObject.GetFieldsForDelete
        
            Dim _myArray(0) As Object
            _myArray(0) = _IdMoneda
			
            Return _myArray
        
        End Function


        Private Sub UpdateObjectFromOutputParams(parameters As Object()) Implements IMappeableMonedasObject.UpdateObjectFromOutputParams
            ' Update properties from Output parameters
            _IdMoneda = CType(parameters(0), System.Int32)

        End Sub

        Private Function Identifier() As Object() Implements IUniqueIdentifiable.Identifier
            Dim o As MonedasObject = Nothing
            If ObjectStateHelper.IsModified(Me) Then
                o = Me.OriginalValue()
            Else
                o = Me
            End If

            Return New Object() {o.IdMoneda}
        End Function


        Public Overloads Function Equals(other As MonedasObject) As Boolean Implements IEquatable(Of MonedasObject).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function


    End Class

    Public Interface IMappeableMonedasObject
        Sub HydrateFields( ByVal IdMoneda As System.Int32, _
				 ByVal Moneda As System.String, _
				 ByVal Simbolo As System.String)

        Function GetFieldsForInsert() As Object() 

        Function GetFieldsForUpdate() As Object() 

        Function GetFieldsForDelete() As Object()

        Sub UpdateObjectFromOutputParams(ByVal parameters As Object() )
    End Interface

    Public Partial Class MonedasObjectList
        Inherits ObjectList(Of MonedasObject)
    End Class
End Namespace

Namespace Views
    Partial Public Class MonedasObjectListView
        Inherits ObjectListView(Of Objects.MonedasObject)

        Sub New(ByVal list As Objects.MonedasObjectList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


