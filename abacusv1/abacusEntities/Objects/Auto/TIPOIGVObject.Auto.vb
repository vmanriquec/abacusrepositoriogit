
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:48 p.m.
' This is a Partial class file. The other one is TIPOIGVObject.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports Cooperator.Framework.Core
Imports System

Namespace Objects

    Public Partial Class TIPOIGVObject
        Inherits BaseObject
        Implements IMappeableTIPOIGVObject
        Implements IUniqueIdentifiable
        Implements IEquatable(Of TIPOIGVObject)
        Implements ICloneable

#Region "Ctor"

        Public Sub New()
            MyBase.New()

			_TIPOIGV =  ValuesGenerator.GetInt32

        End Sub

        
        Public Sub New(ByVal TIPOIGV As System.Int32)
            MyBase.New()

			_TIPOIGV = TIPOIGV

            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal TIPOIGV As System.Int32, _
			ByVal DESCRIP As System.String, _
			ByVal TASA As System.Nullable(Of System.Double), _
			ByVal upsize_ts As System.Nullable(Of System.DateTime))
            MyBase.New()

			_TIPOIGV = TIPOIGV
			_DESCRIP = DESCRIP
			_TASA = TASA
			_upsize_ts = upsize_ts

            Call Initialized()
        End Sub
        

#End Region

#Region "Events"

        
#End Region

#Region "Fields"

        Protected _TIPOIGV As System.Int32
Protected _DESCRIP As System.String
Protected _TASA As System.Nullable(Of System.Double) 
Protected _upsize_ts As System.Nullable(Of System.DateTime) 

#End Region

#Region "Properties"
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable ReadOnly Property TIPOIGV As System.Int32
            Get
                Return _TIPOIGV
            End Get
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property DESCRIP As System.String
            Get
                Return _DESCRIP
            End Get
            
            Set
                MyBase.PropertyModified()
                _DESCRIP = value
                
            End Set
            
        End Property
        
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property TASA As System.Nullable(Of System.Double) 
            Get        
                Return _TASA
            End Get
            
            Set
                MyBase.PropertyModified()
                _TASA = value
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property upsize_ts As System.Nullable(Of System.DateTime) 
            Get        
                Return _upsize_ts
            End Get
            
            Set
                MyBase.PropertyModified()
                _upsize_ts = value
                
            End Set
            
        End Property
                
        #End Region

        

        Protected Overrides Sub SetOriginalValue()
            MyBase.InternalOriginalValue = CType(Me.MemberwiseClone(), IObject)
        End Sub

        Protected Overridable Function Clone() As Object Implements ICloneable.Clone
            Dim newObject As TIPOIGVObject 
            Dim newOriginalValue As TIPOIGVObject 

            newObject = CType(Me.MemberwiseClone(), TIPOIGVObject) 
            If (MyBase.InternalOriginalValue IsNot Nothing) Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), TIPOIGVObject)
                newObject.InternalOriginalValue = newOriginalValue
            End If
            Return newObject
        End Function


        ''' <summary>
        ''' Returns de original value of object since was created or restored.
        ''' </summary>
        Public Shadows Function OriginalValue() As TIPOIGVObject 
           Return CType(MyBase.OriginalValue, TIPOIGVObject)
        End Function


        Private Sub HydrateFields(ByVal TIPOIGV As System.Int32, _
			ByVal DESCRIP As System.String, _
			ByVal TASA As System.Nullable(Of System.Double) , _
			ByVal upsize_ts As System.Nullable(Of System.DateTime) ) Implements IMappeableTIPOIGVObject.HydrateFields        
        	_TIPOIGV = TIPOIGV
			_DESCRIP = DESCRIP
			_TASA = TASA
			_upsize_ts = upsize_ts
        End Sub

        Private Function GetFieldsForInsert() As Object() Implements IMappeableTIPOIGVObject.GetFieldsForInsert
        
        
            Dim _myArray(3) As Object
            _myArray(0) = _TIPOIGV
			If (Not System.String.IsNullOrEmpty(_DESCRIP)) Then _myArray(1) = _DESCRIP
			If (_TASA.HasValue) Then _myArray(2) = _TASA.Value
			If (_upsize_ts.HasValue) Then _myArray(3) = _upsize_ts.Value
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForUpdate() As Object() Implements IMappeableTIPOIGVObject.GetFieldsForUpdate
        
        
            
            Dim _myArray(3) As Object
            _myArray(0) = _TIPOIGV
			If (Not System.String.IsNullOrEmpty(_DESCRIP)) Then _myArray(1) = _DESCRIP
			If (_TASA.HasValue) Then _myArray(2) = _TASA.Value
			If (_upsize_ts.HasValue) Then _myArray(3) = _upsize_ts.Value
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForDelete() As Object() Implements IMappeableTIPOIGVObject.GetFieldsForDelete
        
            Dim _myArray(0) As Object
            _myArray(0) = _TIPOIGV
			
            Return _myArray
        
        End Function


        Private Sub UpdateObjectFromOutputParams(parameters As Object()) Implements IMappeableTIPOIGVObject.UpdateObjectFromOutputParams
            ' Update properties from Output parameters
            _TIPOIGV = CType(parameters(0), System.Int32)

        End Sub

        Private Function Identifier() As Object() Implements IUniqueIdentifiable.Identifier
            Dim o As TIPOIGVObject = Nothing
            If ObjectStateHelper.IsModified(Me) Then
                o = Me.OriginalValue()
            Else
                o = Me
            End If

            Return New Object() {o.TIPOIGV}
        End Function


        Public Overloads Function Equals(other As TIPOIGVObject) As Boolean Implements IEquatable(Of TIPOIGVObject).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function


    End Class

    Public Interface IMappeableTIPOIGVObject
        Sub HydrateFields( ByVal TIPOIGV As System.Int32, _
				 ByVal DESCRIP As System.String, _
				 ByVal TASA As System.Nullable(Of System.Double) , _
				 ByVal upsize_ts As System.Nullable(Of System.DateTime) )

        Function GetFieldsForInsert() As Object() 

        Function GetFieldsForUpdate() As Object() 

        Function GetFieldsForDelete() As Object()

        Sub UpdateObjectFromOutputParams(ByVal parameters As Object() )
    End Interface

    Public Partial Class TIPOIGVObjectList
        Inherits ObjectList(Of TIPOIGVObject)
    End Class
End Namespace

Namespace Views
    Partial Public Class TIPOIGVObjectListView
        Inherits ObjectListView(Of Objects.TIPOIGVObject)

        Sub New(ByVal list As Objects.TIPOIGVObjectList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


