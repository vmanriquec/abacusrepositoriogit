
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:48 p.m.
' This is a Partial class file. The other one is TCObject.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports Cooperator.Framework.Core
Imports System

Namespace Objects

    Public Partial Class TCObject
        Inherits BaseObject
        Implements IMappeableTCObject
        Implements IUniqueIdentifiable
        Implements IEquatable(Of TCObject)
        Implements ICloneable

#Region "Ctor"

        Public Sub New()
            MyBase.New()

			_IdTC =  ValuesGenerator.GetInt32

        End Sub

        
        Public Sub New(ByVal IdTC As System.Int32)
            MyBase.New()

			_IdTC = IdTC

            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdTC As System.Int32, _
			ByVal Compra As System.Nullable(Of System.Decimal), _
			ByVal Venta As System.Nullable(Of System.Decimal), _
			ByVal Fecha As System.Nullable(Of System.DateTime), _
			ByVal upsize_ts As System.Nullable(Of System.DateTime))
            MyBase.New()

			_IdTC = IdTC
			_Compra = Compra
			_Venta = Venta
			_Fecha = Fecha
			_upsize_ts = upsize_ts

            Call Initialized()
        End Sub
        

#End Region

#Region "Events"

        
#End Region

#Region "Fields"

        Protected _IdTC As System.Int32
Protected _Compra As System.Nullable(Of System.Decimal) 
Protected _Venta As System.Nullable(Of System.Decimal) 
Protected _Fecha As System.Nullable(Of System.DateTime) 
Protected _upsize_ts As System.Nullable(Of System.DateTime) 

#End Region

#Region "Properties"
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable ReadOnly Property IdTC As System.Int32
            Get
                Return _IdTC
            End Get
            
        End Property
        
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property Compra As System.Nullable(Of System.Decimal) 
            Get        
                Return _Compra
            End Get
            
            Set
                MyBase.PropertyModified()
                _Compra = value
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property Venta As System.Nullable(Of System.Decimal) 
            Get        
                Return _Venta
            End Get
            
            Set
                MyBase.PropertyModified()
                _Venta = value
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property Fecha As System.Nullable(Of System.DateTime) 
            Get        
                Return _Fecha
            End Get
            
            Set
                MyBase.PropertyModified()
                _Fecha = value
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property upsize_ts As System.Nullable(Of System.DateTime) 
            Get        
                Return _upsize_ts
            End Get
            
            Set
                MyBase.PropertyModified()
                _upsize_ts = value
                
            End Set
            
        End Property
                
        #End Region

        

        Protected Overrides Sub SetOriginalValue()
            MyBase.InternalOriginalValue = CType(Me.MemberwiseClone(), IObject)
        End Sub

        Protected Overridable Function Clone() As Object Implements ICloneable.Clone
            Dim newObject As TCObject 
            Dim newOriginalValue As TCObject 

            newObject = CType(Me.MemberwiseClone(), TCObject) 
            If (MyBase.InternalOriginalValue IsNot Nothing) Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), TCObject)
                newObject.InternalOriginalValue = newOriginalValue
            End If
            Return newObject
        End Function


        ''' <summary>
        ''' Returns de original value of object since was created or restored.
        ''' </summary>
        Public Shadows Function OriginalValue() As TCObject 
           Return CType(MyBase.OriginalValue, TCObject)
        End Function


        Private Sub HydrateFields(ByVal IdTC As System.Int32, _
			ByVal Compra As System.Nullable(Of System.Decimal) , _
			ByVal Venta As System.Nullable(Of System.Decimal) , _
			ByVal Fecha As System.Nullable(Of System.DateTime) , _
			ByVal upsize_ts As System.Nullable(Of System.DateTime) ) Implements IMappeableTCObject.HydrateFields        
        	_IdTC = IdTC
			_Compra = Compra
			_Venta = Venta
			_Fecha = Fecha
			_upsize_ts = upsize_ts
        End Sub

        Private Function GetFieldsForInsert() As Object() Implements IMappeableTCObject.GetFieldsForInsert
        
        
            Dim _myArray(4) As Object
            _myArray(0) = _IdTC
			If (_Compra.HasValue) Then _myArray(1) = _Compra.Value
			If (_Venta.HasValue) Then _myArray(2) = _Venta.Value
			If (_Fecha.HasValue) Then _myArray(3) = _Fecha.Value
			If (_upsize_ts.HasValue) Then _myArray(4) = _upsize_ts.Value
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForUpdate() As Object() Implements IMappeableTCObject.GetFieldsForUpdate
        
        
            
            Dim _myArray(4) As Object
            _myArray(0) = _IdTC
			If (_Compra.HasValue) Then _myArray(1) = _Compra.Value
			If (_Venta.HasValue) Then _myArray(2) = _Venta.Value
			If (_Fecha.HasValue) Then _myArray(3) = _Fecha.Value
			If (_upsize_ts.HasValue) Then _myArray(4) = _upsize_ts.Value
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForDelete() As Object() Implements IMappeableTCObject.GetFieldsForDelete
        
            Dim _myArray(0) As Object
            _myArray(0) = _IdTC
			
            Return _myArray
        
        End Function


        Private Sub UpdateObjectFromOutputParams(parameters As Object()) Implements IMappeableTCObject.UpdateObjectFromOutputParams
            ' Update properties from Output parameters
            _IdTC = CType(parameters(0), System.Int32)

        End Sub

        Private Function Identifier() As Object() Implements IUniqueIdentifiable.Identifier
            Dim o As TCObject = Nothing
            If ObjectStateHelper.IsModified(Me) Then
                o = Me.OriginalValue()
            Else
                o = Me
            End If

            Return New Object() {o.IdTC}
        End Function


        Public Overloads Function Equals(other As TCObject) As Boolean Implements IEquatable(Of TCObject).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function


    End Class

    Public Interface IMappeableTCObject
        Sub HydrateFields( ByVal IdTC As System.Int32, _
				 ByVal Compra As System.Nullable(Of System.Decimal) , _
				 ByVal Venta As System.Nullable(Of System.Decimal) , _
				 ByVal Fecha As System.Nullable(Of System.DateTime) , _
				 ByVal upsize_ts As System.Nullable(Of System.DateTime) )

        Function GetFieldsForInsert() As Object() 

        Function GetFieldsForUpdate() As Object() 

        Function GetFieldsForDelete() As Object()

        Sub UpdateObjectFromOutputParams(ByVal parameters As Object() )
    End Interface

    Public Partial Class TCObjectList
        Inherits ObjectList(Of TCObject)
    End Class
End Namespace

Namespace Views
    Partial Public Class TCObjectListView
        Inherits ObjectListView(Of Objects.TCObject)

        Sub New(ByVal list As Objects.TCObjectList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


