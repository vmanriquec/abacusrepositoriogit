
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:48 p.m.
' This is a partial class file. The other one is TrabajadoresGateway.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web

Namespace Gateways
        
    Public Partial Class TrabajadoresGateway 
        Inherits BaseGateway(Of TrabajadoresObject, TrabajadoresObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As TrabajadoresGateway

        Private Sub New()
        End Sub

        Public Shared Function Instance() As TrabajadoresGateway
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New TrabajadoresGateway()
                Else
                    Dim inst As TrabajadoresGateway = TryCast(HttpContext.Current.Items("abacusRules.TrabajadoresGatewaySingleton"), TrabajadoresGateway)
                    If inst Is Nothing Then
                        inst = New TrabajadoresGateway()
                        HttpContext.Current.Items.Add("abacusRules.TrabajadoresGatewaySingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region

        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String
            Get
                Return "Trabajadores"
            End Get
        End Property

        ''' <summary>
        ''' Return the TrabajadoresGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(TrabajadoresGateway ).FullName
            End Get
        End Property


        

        


        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As TrabajadoresObject )
            Dim _idcargopersonal As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _idcargopersonal = New System.Nullable(Of System.Int32)
Else
	 _idcargopersonal = reader.GetInt32(1)
End If
Dim _Nombres As String
If reader.IsDBNull(2) Then 
	 _Nombres = ""
Else
	 _Nombres = reader.GetString(2)
End If
Dim _Apellidos As String
If reader.IsDBNull(3) Then 
	 _Apellidos = ""
Else
	 _Apellidos = reader.GetString(3)
End If
Dim _DNI As String
If reader.IsDBNull(4) Then 
	 _DNI = ""
Else
	 _DNI = reader.GetString(4)
End If
Dim _Cargo As String
If reader.IsDBNull(5) Then 
	 _Cargo = ""
Else
	 _Cargo = reader.GetString(5)
End If
Dim _FecNacimiento As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(6) Then 
	 _FecNacimiento = New System.Nullable(Of System.DateTime)
Else
	 _FecNacimiento = reader.GetDateTime(6)
End If
Dim _FecRegistro As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(7) Then 
	 _FecRegistro = New System.Nullable(Of System.DateTime)
Else
	 _FecRegistro = reader.GetDateTime(7)
End If
Dim _fecRetiro As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(8) Then 
	 _fecRetiro = New System.Nullable(Of System.DateTime)
Else
	 _fecRetiro = reader.GetDateTime(8)
End If
Dim _estado As String
If reader.IsDBNull(9) Then 
	 _estado = ""
Else
	 _estado = reader.GetString(9)
End If
Dim _cargopersonalString As String
If reader.IsDBNull(10) Then 
	 _cargopersonalString = ""
Else
	 _cargopersonalString = reader.GetString(10)
End If

            Dim Trabajadores As IMappeableTrabajadoresObject  = CType(entity, IMappeableTrabajadoresObject)
            Trabajadores.HydrateFields(reader.GetInt32(0), _
_idcargopersonal, _
_Nombres, _
_Apellidos, _
_DNI, _
_Cargo, _
_FecNacimiento, _
_FecRegistro, _
_fecRetiro, _
_estado, _
_cargopersonalString)
            CType(entity, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As TrabajadoresObject) As Object()
            Dim Trabajadores As IMappeableTrabajadoresObject = CType(entity, IMappeableTrabajadoresObject)
            Return Trabajadores.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As TrabajadoresObject) As Object()
            Dim Trabajadores As IMappeableTrabajadoresObject = CType(entity, IMappeableTrabajadoresObject)
            Return Trabajadores.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As TrabajadoresObject) As Object()
            Dim Trabajadores As IMappeableTrabajadoresObject = CType(entity, IMappeableTrabajadoresObject)
            Return Trabajadores.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal row As TrabajadoresObject, parameters As Object())
            ' Update properties from Output parameters
            CType(row, IMappeableTrabajadoresObject).UpdateObjectFromOutputParams(parameters)
            CType(row, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String
            Return "coop_"
        End Function


        ''' <summary>
        ''' Get a TrabajadoresObject by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As TrabajadoresObject 
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a TrabajadoresObjectList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As TrabajadoresObjectList 
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function



        ''' <summary>
        ''' Get a TrabajadoresObject by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdTrabjador As System.Int32) As TrabajadoresObject         
            Return MyBase.GetOne(New TrabajadoresObject(IdTrabjador))
        End Function

            


        
        ''' <summary>
        ''' Get a TrabajadoresObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBycargopersonal(ByVal transaction As DbTransaction, ByVal idcargopersonal As System.Int32) As TrabajadoresObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Trabajadores_GetBycargopersonal", idcargopersonal)
        End Function

        ''' <summary>
        ''' Get a TrabajadoresObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBycargopersonal(ByVal transaction As DbTransaction, cargopersonal As IUniqueIdentifiable) As TrabajadoresObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Trabajadores_GetBycargopersonal", cargopersonal.Identifier())
        End Function
    


        
        ''' <summary>
        ''' Get a TrabajadoresObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBycargopersonal(ByVal idcargopersonal As System.Int32) As TrabajadoresObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Trabajadores_GetBycargopersonal", idcargopersonal)
        End Function

        ''' <summary>
        ''' Get a TrabajadoresObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBycargopersonal(cargopersonal As IUniqueIdentifiable) As TrabajadoresObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Trabajadores_GetBycargopersonal", cargopersonal.Identifier())
        End Function
    

        
        ''' <summary>
        ''' Delete Trabajadores 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Trabajadores_Delete", IdTrabjador)
        End Sub

        ''' <summary>
        ''' Delete Trabajadores
        ''' </summary>
        Public Overloads Sub Delete(transaction As DbTransaction , ByVal IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Trabajadores_Delete", IdTrabjador)
        End Sub

            



        

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' Delete Trabajadores By cargopersonal
        ''' </summary>
        Public Overloads Sub DeleteBycargopersonal(ByVal idcargopersonal As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Trabajadores_DeleteBycargopersonal", idcargopersonal)
        End Sub

        ''' <summary>
        ''' Delete Trabajadores By cargopersonal
        ''' </summary>
        Public Overloads Sub DeleteBycargopersonal(ByVal transaction As DbTransaction , ByVal idcargopersonal As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Trabajadores_DeleteBycargopersonal", idcargopersonal)
        End Sub

        ''' <summary>
        ''' Delete Trabajadores By cargopersonal
        ''' </summary>
        Public Overloads Sub DeleteBycargopersonal(ByVal cargopersonal As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Trabajadores_DeleteBycargopersonal", cargopersonal.Identifier())
        End Sub

        ''' <summary>
        ''' Delete Trabajadores By cargopersonal
        ''' </summary>
        Public Overloads Sub DeleteBycargopersonal(ByVal transaction As DbTransaction , ByVal cargopersonal As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Trabajadores_DeleteBycargopersonal", cargopersonal.Identifier())
        End Sub

        

    


        'Database Queries 
        



        #Region "IGenericGateway"

        Private Function GetOne2(identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GeyByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class
End Namespace




