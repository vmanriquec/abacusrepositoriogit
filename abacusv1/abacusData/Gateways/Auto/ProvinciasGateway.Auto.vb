
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:48 p.m.
' This is a partial class file. The other one is ProvinciasGateway.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web

Namespace Gateways
        
    Public Partial Class ProvinciasGateway 
        Inherits BaseGateway(Of ProvinciasObject, ProvinciasObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As ProvinciasGateway

        Private Sub New()
        End Sub

        Public Shared Function Instance() As ProvinciasGateway
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New ProvinciasGateway()
                Else
                    Dim inst As ProvinciasGateway = TryCast(HttpContext.Current.Items("abacusRules.ProvinciasGatewaySingleton"), ProvinciasGateway)
                    If inst Is Nothing Then
                        inst = New ProvinciasGateway()
                        HttpContext.Current.Items.Add("abacusRules.ProvinciasGatewaySingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region

        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String
            Get
                Return "Provincias"
            End Get
        End Property

        ''' <summary>
        ''' Return the ProvinciasGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(ProvinciasGateway ).FullName
            End Get
        End Property


        

        


        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As ProvinciasObject )
            Dim _Provincia As String
If reader.IsDBNull(1) Then 
	 _Provincia = ""
Else
	 _Provincia = reader.GetString(1)
End If

            Dim Provincias As IMappeableProvinciasObject  = CType(entity, IMappeableProvinciasObject)
            Provincias.HydrateFields(reader.GetInt32(0), _
_Provincia)
            CType(entity, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As ProvinciasObject) As Object()
            Dim Provincias As IMappeableProvinciasObject = CType(entity, IMappeableProvinciasObject)
            Return Provincias.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As ProvinciasObject) As Object()
            Dim Provincias As IMappeableProvinciasObject = CType(entity, IMappeableProvinciasObject)
            Return Provincias.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As ProvinciasObject) As Object()
            Dim Provincias As IMappeableProvinciasObject = CType(entity, IMappeableProvinciasObject)
            Return Provincias.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal row As ProvinciasObject, parameters As Object())
            ' Update properties from Output parameters
            CType(row, IMappeableProvinciasObject).UpdateObjectFromOutputParams(parameters)
            CType(row, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String
            Return "coop_"
        End Function


        ''' <summary>
        ''' Get a ProvinciasObject by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As ProvinciasObject 
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a ProvinciasObjectList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As ProvinciasObjectList 
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function



        ''' <summary>
        ''' Get a ProvinciasObject by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdProvincia As System.Int32) As ProvinciasObject         
            Return MyBase.GetOne(New ProvinciasObject(IdProvincia))
        End Function

            


        


        

        
        ''' <summary>
        ''' Delete Provincias 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdProvincia As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Provincias_Delete", IdProvincia)
        End Sub

        ''' <summary>
        ''' Delete Provincias
        ''' </summary>
        Public Overloads Sub Delete(transaction As DbTransaction , ByVal IdProvincia As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Provincias_Delete", IdProvincia)
        End Sub

            



        

    

    

    


        'Database Queries 
        



        #Region "IGenericGateway"

        Private Function GetOne2(identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GeyByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class
End Namespace




