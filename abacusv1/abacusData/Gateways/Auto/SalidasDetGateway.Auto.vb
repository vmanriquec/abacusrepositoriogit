
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:48 p.m.
' This is a partial class file. The other one is SalidasDetGateway.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web

Namespace Gateways
        
    Public Partial Class SalidasDetGateway 
        Inherits BaseGateway(Of SalidasDetObject, SalidasDetObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As SalidasDetGateway

        Private Sub New()
        End Sub

        Public Shared Function Instance() As SalidasDetGateway
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New SalidasDetGateway()
                Else
                    Dim inst As SalidasDetGateway = TryCast(HttpContext.Current.Items("abacusRules.SalidasDetGatewaySingleton"), SalidasDetGateway)
                    If inst Is Nothing Then
                        inst = New SalidasDetGateway()
                        HttpContext.Current.Items.Add("abacusRules.SalidasDetGatewaySingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region

        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String
            Get
                Return "SalidasDet"
            End Get
        End Property

        ''' <summary>
        ''' Return the SalidasDetGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(SalidasDetGateway ).FullName
            End Get
        End Property


        

        


        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As SalidasDetObject )
            Dim _IdSalidasP As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdSalidasP = New System.Nullable(Of System.Int32)
Else
	 _IdSalidasP = reader.GetInt32(1)
End If
Dim _IdSalidasDet As System.Nullable(Of System.Int32) 
If reader.IsDBNull(2) Then 
	 _IdSalidasDet = New System.Nullable(Of System.Int32)
Else
	 _IdSalidasDet = reader.GetInt32(2)
End If
Dim _IdSalidas As System.Nullable(Of System.Int32) 
If reader.IsDBNull(3) Then 
	 _IdSalidas = New System.Nullable(Of System.Int32)
Else
	 _IdSalidas = reader.GetInt32(3)
End If
Dim _IdProducto As System.Nullable(Of System.Int32) 
If reader.IsDBNull(4) Then 
	 _IdProducto = New System.Nullable(Of System.Int32)
Else
	 _IdProducto = reader.GetInt32(4)
End If
Dim _Cantidad As System.Nullable(Of System.Int32) 
If reader.IsDBNull(5) Then 
	 _Cantidad = New System.Nullable(Of System.Int32)
Else
	 _Cantidad = reader.GetInt32(5)
End If
Dim _PUnit As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(6) Then 
	 _PUnit = New System.Nullable(Of System.Decimal)
Else
	 _PUnit = reader.GetDecimal(6)
End If
Dim _IdTienda As System.Nullable(Of System.Int32) 
If reader.IsDBNull(7) Then 
	 _IdTienda = New System.Nullable(Of System.Int32)
Else
	 _IdTienda = reader.GetInt32(7)
End If
Dim _upsize_ts As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(8) Then 
	 _upsize_ts = New System.Nullable(Of System.DateTime)
Else
	 _upsize_ts = reader.GetDateTime(8)
End If
Dim _subtotal As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(9) Then 
	 _subtotal = New System.Nullable(Of System.Decimal)
Else
	 _subtotal = reader.GetDecimal(9)
End If
Dim _SalidasString As String
If reader.IsDBNull(10) Then 
	 _SalidasString = ""
Else
	 _SalidasString = reader.GetString(10)
End If

            Dim SalidasDet As IMappeableSalidasDetObject  = CType(entity, IMappeableSalidasDetObject)
            SalidasDet.HydrateFields(reader.GetInt32(0), _
_IdSalidasP, _
_IdSalidasDet, _
_IdSalidas, _
_IdProducto, _
_Cantidad, _
_PUnit, _
_IdTienda, _
_upsize_ts, _
_subtotal, _
_SalidasString)
            CType(entity, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As SalidasDetObject) As Object()
            Dim SalidasDet As IMappeableSalidasDetObject = CType(entity, IMappeableSalidasDetObject)
            Return SalidasDet.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As SalidasDetObject) As Object()
            Dim SalidasDet As IMappeableSalidasDetObject = CType(entity, IMappeableSalidasDetObject)
            Return SalidasDet.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As SalidasDetObject) As Object()
            Dim SalidasDet As IMappeableSalidasDetObject = CType(entity, IMappeableSalidasDetObject)
            Return SalidasDet.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal row As SalidasDetObject, parameters As Object())
            ' Update properties from Output parameters
            CType(row, IMappeableSalidasDetObject).UpdateObjectFromOutputParams(parameters)
            CType(row, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String
            Return "coop_"
        End Function


        ''' <summary>
        ''' Get a SalidasDetObject by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As SalidasDetObject 
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a SalidasDetObjectList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As SalidasDetObjectList 
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function



        ''' <summary>
        ''' Get a SalidasDetObject by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdSalidasDetP As System.Int32) As SalidasDetObject         
            Return MyBase.GetOne(New SalidasDetObject(IdSalidasDetP))
        End Function

            


        
        ''' <summary>
        ''' Get a SalidasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBySalidas(ByVal transaction As DbTransaction, ByVal IdSalidasP As System.Int32) As SalidasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SalidasDet_GetBySalidas", IdSalidasP)
        End Function

        ''' <summary>
        ''' Get a SalidasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBySalidas(ByVal transaction As DbTransaction, Salidas As IUniqueIdentifiable) As SalidasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "SalidasDet_GetBySalidas", Salidas.Identifier())
        End Function
    


        
        ''' <summary>
        ''' Get a SalidasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBySalidas(ByVal IdSalidasP As System.Int32) As SalidasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SalidasDet_GetBySalidas", IdSalidasP)
        End Function

        ''' <summary>
        ''' Get a SalidasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBySalidas(Salidas As IUniqueIdentifiable) As SalidasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "SalidasDet_GetBySalidas", Salidas.Identifier())
        End Function
    

        
        ''' <summary>
        ''' Delete SalidasDet 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdSalidasDetP As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SalidasDet_Delete", IdSalidasDetP)
        End Sub

        ''' <summary>
        ''' Delete SalidasDet
        ''' </summary>
        Public Overloads Sub Delete(transaction As DbTransaction , ByVal IdSalidasDetP As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SalidasDet_Delete", IdSalidasDetP)
        End Sub

            



        

    

    

    

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' Delete SalidasDet By Salidas
        ''' </summary>
        Public Overloads Sub DeleteBySalidas(ByVal IdSalidasP As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SalidasDet_DeleteBySalidas", IdSalidasP)
        End Sub

        ''' <summary>
        ''' Delete SalidasDet By Salidas
        ''' </summary>
        Public Overloads Sub DeleteBySalidas(ByVal transaction As DbTransaction , ByVal IdSalidasP As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SalidasDet_DeleteBySalidas", IdSalidasP)
        End Sub

        ''' <summary>
        ''' Delete SalidasDet By Salidas
        ''' </summary>
        Public Overloads Sub DeleteBySalidas(ByVal Salidas As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "SalidasDet_DeleteBySalidas", Salidas.Identifier())
        End Sub

        ''' <summary>
        ''' Delete SalidasDet By Salidas
        ''' </summary>
        Public Overloads Sub DeleteBySalidas(ByVal transaction As DbTransaction , ByVal Salidas As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "SalidasDet_DeleteBySalidas", Salidas.Identifier())
        End Sub

        

    


        'Database Queries 
        



        #Region "IGenericGateway"

        Private Function GetOne2(identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GeyByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class
End Namespace




