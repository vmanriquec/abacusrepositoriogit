
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:49 p.m.
' This is a partial class file. The other one is TipoCliProvMapper.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Entities
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web


Namespace Mappers
    

    Public Partial Class TipoCliProvMapper
        Inherits BaseGateway(Of TipoCliProvObject, TipoCliProvObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As TipoCliProvMapper

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As TipoCliProvMapper
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New TipoCliProvMapper()
                Else
                    Dim inst As TipoCliProvMapper = TryCast(HttpContext.Current.Items("abacusRules.TipoCliProvMapperSingleton"), TipoCliProvMapper)
                    If inst Is Nothing Then
                        inst = New TipoCliProvMapper()
                        HttpContext.Current.Items.Add("abacusRules.TipoCliProvMapperSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function


#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim  s() as String={"Id"}
            return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return GetType(TipoCliProvObject)
        End Function


        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String 
            Get
                Return "TipoCliProv"
            End Get
        End Property

        ''' <summary>
        ''' Return the TipoCliProvGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(TipoCliProvMapper).FullName
            End Get
        End Property


        

        

        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As TipoCliProvObject)
            Dim _Tipo As String
If reader.IsDBNull(1) Then 
	 _Tipo = ""
Else
	 _Tipo = reader.GetString(1)
End If

            Dim TipoCliProv As IMappeableTipoCliProvObject  = CType(entity, IMappeableTipoCliProvObject)
            TipoCliProv.HydrateFields(reader.GetInt32(0), _
_Tipo)
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As TipoCliProvObject) As Object()
            Dim TipoCliProv As IMappeableTipoCliProvObject = CType(entity, IMappeableTipoCliProvObject)
            Return TipoCliProv.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As TipoCliProvObject) As Object()
            Dim TipoCliProv As IMappeableTipoCliProvObject = CType(entity, IMappeableTipoCliProvObject)
            Return TipoCliProv.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As TipoCliProvObject) As Object()
            Dim TipoCliProv As IMappeableTipoCliProvObject = CType(entity, IMappeableTipoCliProvObject)
            Return TipoCliProv.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal entity As TipoCliProvObject, ByVal parameters As Object())
            ' Update properties from Output parameters
            CType(entity, IMappeableTipoCliProvObject).UpdateObjectFromOutputParams(parameters)
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function


          



        ''' <summary>
        ''' Get a TipoCliProv by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As TipoCliProvObject
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a TipoCliProvList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As TipoCliProvObjectList
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetOne(Id As System.Int32) As TipoCliProvObject
            Return MyBase.GetOne(New TipoCliProvObject(Id))
        End Function

        

        ' GetOne By Objects and Params
            

        


        

        





        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(Id As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "TipoCliProv_Delete", Id)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(ByVal transaction As DbTransaction ,Id As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "TipoCliProv_Delete", Id)
        End Sub

        ' Delete By Objects and Params
            



        

    

    


        'Database Queries 
        






        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace


Namespace Wrappers
    ''' <summary>
    ''' 
    ''' </summary>
    Public Class TipoCliProvMapperWrapper

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            return Instance().GetPKPropertiesNames()
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return Instance().GetMappingType()
        End Function


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function Instance() As abacusRules.Mappers.TipoCliProvMapper
            Return abacusRules.Mappers.TipoCliProvMapper.Instance()
        End Function

        
        ''' <summary>
        ''' Get a TipoCliProv Entity by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal Id As System.Int32) As Objects.TipoCliProvObject         
            Return Instance().GetOne( Id)
        End Function
        

        ' GetBy Objects and Params
            

        

        ''' <summary>
        ''' GetAll TipoCliProv 
        ''' </summary>
        Public Function GetAll() As Objects.TipoCliProvObjectList
            Return Instance().GetAll()
        End Function

        
        


            

        

        ''' <summary>
        ''' Delete TipoCliProv 
        ''' </summary>
        Public Overloads Sub Delete(ByVal Id As System.Int32)
            Instance().Delete(Id)
        End Sub

        ''' <summary>
        ''' Delete TipoCliProv 
        ''' </summary>
        Public Overloads Sub Delete(ByVal entity As Objects.TipoCliProvObject)
            Instance().Delete(entity)
        End Sub

        ''' <summary>
        ''' Save TipoCliProv  
        ''' </summary>
        Public Overloads Sub Save(ByVal entity As Objects.TipoCliProvObject)
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert TipoCliProv 
        ''' </summary>
        Public Overloads Sub Insert(ByVal entity As Objects.TipoCliProvObject)
            Instance().Insert(entity)
        End Sub

        ''' <summary>
        ''' Save TipoCliProv 
        ''' </summary>
        Public Overloads Sub Save(ByVal Id As System.Int32, ByVal Tipo As System.String)
            Dim entity As Objects.TipoCliProvObject = Instance().GetOne(Id)
            If entity Is Nothing Then
                Throw New ApplicationException(String.Format("Entity not found. IUniqueIdentifiable values: {0} = {1}", "Id", Id))
            End If

            entity.Tipo = Tipo
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert TipoCliProv
        ''' </summary>
        Public Overloads Sub Insert(ByVal Tipo As System.String)
            Dim entity As Objects.TipoCliProvObject = New Objects.TipoCliProvObject

            entity.Tipo = Tipo
            Instance().Insert(entity)
        End Sub

        

        'Database Queries 
        


    End Class
End Namespace


Namespace Loaders

    ''' <summary>
    ''' 
    ''' </summary>
    Partial Public Class TipoCliProvLoader(Of T As {TipoCliProvObject, New})
        Inherits BaseLoader(Of T, TipoCliProvObject, ObjectList(Of T))
        Implements IGenericGateway



#Region "Singleton"

        Private Shared _instance As TipoCliProvLoader(Of T)

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As TipoCliProvLoader(Of T)
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New TipoCliProvLoader(Of T)
                Else
                    Dim inst As TipoCliProvLoader(Of T) = TryCast(HttpContext.Current.Items("abacusRules.TipoCliProvLoaderSingleton"), TipoCliProvLoader(Of T))
                    If inst Is Nothing Then
                        inst = New TipoCliProvLoader(Of T)
                        HttpContext.Current.Items.Add("abacusRules.TipoCliProvLoaderSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim s() as String={"Id"}
            Return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            Return GetType(TipoCliProvObject)
        End Function


        Protected Overrides ReadOnly Property TableName As String 
            Get
                Return "TipoCliProv"
            End Get
        End Property

        

        


        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As TipoCliProvObject)
            Dim _Tipo As String
If reader.IsDBNull(1) Then 
	 _Tipo = ""
Else
	 _Tipo = reader.GetString(1)
End If

            Dim TipoCliProv As IMappeableTipoCliProvObject  = CType(entity, IMappeableTipoCliProvObject)
            TipoCliProv.HydrateFields(reader.GetInt32(0), _
_Tipo)
        End Sub


        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function

        


        ''' <summary>
        ''' Get a TipoCliProv by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As t
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a TipoCliProvList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As ObjectList(Of T)
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' GetOne By Params
        ''' </summary>
        Public Overloads Function GetOne(Id As System.Int32) As t
            Return MyBase.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "TipoCliProv_GetOne", Id)
        End Function
        


        ' GetOne By Objects and Params
            

        


        'Database Queries 
        


        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace




