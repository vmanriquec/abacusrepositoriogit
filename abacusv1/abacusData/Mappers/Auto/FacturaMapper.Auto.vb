
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:49 p.m.
' This is a partial class file. The other one is FacturaMapper.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Entities
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web


Namespace Mappers
    

    Public Partial Class FacturaMapper
        Inherits BaseGateway(Of Factura, FacturaList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As FacturaMapper

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As FacturaMapper
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New FacturaMapper()
                Else
                    Dim inst As FacturaMapper = TryCast(HttpContext.Current.Items("abacusRules.FacturaMapperSingleton"), FacturaMapper)
                    If inst Is Nothing Then
                        inst = New FacturaMapper()
                        HttpContext.Current.Items.Add("abacusRules.FacturaMapperSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function


#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim  s() as String={"IdFactura"}
            return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return GetType(Factura)
        End Function


        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String 
            Get
                Return "Factura"
            End Get
        End Property

        ''' <summary>
        ''' Return the FacturaGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(FacturaMapper).FullName
            End Get
        End Property


        

        

        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As Factura)
            Dim _IdTrabjador As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdTrabjador = New System.Nullable(Of System.Int32)
Else
	 _IdTrabjador = reader.GetInt32(1)
End If
Dim _IdAlmacen As System.Nullable(Of System.Int32) 
If reader.IsDBNull(2) Then 
	 _IdAlmacen = New System.Nullable(Of System.Int32)
Else
	 _IdAlmacen = reader.GetInt32(2)
End If
Dim _SFactura As String
If reader.IsDBNull(3) Then 
	 _SFactura = ""
Else
	 _SFactura = reader.GetString(3)
End If
Dim _NFactura As System.Nullable(Of System.Int32) 
If reader.IsDBNull(4) Then 
	 _NFactura = New System.Nullable(Of System.Int32)
Else
	 _NFactura = reader.GetInt32(4)
End If
Dim _FecEmision As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(5) Then 
	 _FecEmision = New System.Nullable(Of System.DateTime)
Else
	 _FecEmision = reader.GetDateTime(5)
End If
Dim _CanalVenta As String
If reader.IsDBNull(6) Then 
	 _CanalVenta = ""
Else
	 _CanalVenta = reader.GetString(6)
End If
Dim _FPago As System.Nullable(Of System.Int32) 
If reader.IsDBNull(7) Then 
	 _FPago = New System.Nullable(Of System.Int32)
Else
	 _FPago = reader.GetInt32(7)
End If
Dim _RACZ As String
If reader.IsDBNull(8) Then 
	 _RACZ = ""
Else
	 _RACZ = reader.GetString(8)
End If
Dim _IdCliente As System.Nullable(Of System.Int32) 
If reader.IsDBNull(9) Then 
	 _IdCliente = New System.Nullable(Of System.Int32)
Else
	 _IdCliente = reader.GetInt32(9)
End If
Dim _EquipoFrio As String
If reader.IsDBNull(10) Then 
	 _EquipoFrio = ""
Else
	 _EquipoFrio = reader.GetString(10)
End If
Dim _Moneda As System.Nullable(Of System.Int32) 
If reader.IsDBNull(11) Then 
	 _Moneda = New System.Nullable(Of System.Int32)
Else
	 _Moneda = reader.GetInt32(11)
End If
Dim _NPedido As System.Nullable(Of System.Int32) 
If reader.IsDBNull(12) Then 
	 _NPedido = New System.Nullable(Of System.Int32)
Else
	 _NPedido = reader.GetInt32(12)
End If
Dim _FecPedido As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(13) Then 
	 _FecPedido = New System.Nullable(Of System.DateTime)
Else
	 _FecPedido = reader.GetDateTime(13)
End If
Dim _IdVendedor As System.Nullable(Of System.Int32) 
If reader.IsDBNull(14) Then 
	 _IdVendedor = New System.Nullable(Of System.Int32)
Else
	 _IdVendedor = reader.GetInt32(14)
End If
Dim _OCompra As String
If reader.IsDBNull(15) Then 
	 _OCompra = ""
Else
	 _OCompra = reader.GetString(15)
End If
Dim _OrdenVenta As String
If reader.IsDBNull(16) Then 
	 _OrdenVenta = ""
Else
	 _OrdenVenta = reader.GetString(16)
End If
Dim _FecDespacho As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(17) Then 
	 _FecDespacho = New System.Nullable(Of System.DateTime)
Else
	 _FecDespacho = reader.GetDateTime(17)
End If
Dim _Guia As String
If reader.IsDBNull(18) Then 
	 _Guia = ""
Else
	 _Guia = reader.GetString(18)
End If
Dim _PED As System.Nullable(Of System.Int32) 
If reader.IsDBNull(19) Then 
	 _PED = New System.Nullable(Of System.Int32)
Else
	 _PED = reader.GetInt32(19)
End If
Dim _Anulado As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(20) Then 
	 _Anulado = New System.Nullable(Of System.Boolean)
Else
	 _Anulado = reader.GetBoolean(20)
End If
Dim _ObsAnulado As String
If reader.IsDBNull(21) Then 
	 _ObsAnulado = ""
Else
	 _ObsAnulado = reader.GetString(21)
End If
Dim _FoB As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(22) Then 
	 _FoB = New System.Nullable(Of System.Boolean)
Else
	 _FoB = reader.GetBoolean(22)
End If
Dim _IdLocal As System.Nullable(Of System.Int32) 
If reader.IsDBNull(23) Then 
	 _IdLocal = New System.Nullable(Of System.Int32)
Else
	 _IdLocal = reader.GetInt32(23)
End If
Dim _SBoleta As String
If reader.IsDBNull(24) Then 
	 _SBoleta = ""
Else
	 _SBoleta = reader.GetString(24)
End If
Dim _NBoleta As System.Nullable(Of System.Int32) 
If reader.IsDBNull(25) Then 
	 _NBoleta = New System.Nullable(Of System.Int32)
Else
	 _NBoleta = reader.GetInt32(25)
End If
Dim _AlmacenesString As String
If reader.IsDBNull(26) Then 
	 _AlmacenesString = ""
Else
	 _AlmacenesString = reader.GetString(26)
End If
Dim _ClientesString As String
If reader.IsDBNull(27) Then 
	 _ClientesString = ""
Else
	 _ClientesString = reader.GetString(27)
End If
Dim _TrabajadoresString As String
If reader.IsDBNull(28) Then 
	 _TrabajadoresString = ""
Else
	 _TrabajadoresString = reader.GetString(28)
End If

            Dim Factura As IMappeableFacturaObject  = CType(entity, IMappeableFacturaObject)
            Factura.HydrateFields(reader.GetInt32(0), _
_IdTrabjador, _
_IdAlmacen, _
_SFactura, _
_NFactura, _
_FecEmision, _
_CanalVenta, _
_FPago, _
_RACZ, _
_IdCliente, _
_EquipoFrio, _
_Moneda, _
_NPedido, _
_FecPedido, _
_IdVendedor, _
_OCompra, _
_OrdenVenta, _
_FecDespacho, _
_Guia, _
_PED, _
_Anulado, _
_ObsAnulado, _
_FoB, _
_IdLocal, _
_SBoleta, _
_NBoleta, _
_AlmacenesString, _
_ClientesString, _
_TrabajadoresString)
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As Factura) As Object()
            Dim Factura As IMappeableFacturaObject = CType(entity, IMappeableFacturaObject)
            Return Factura.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As Factura) As Object()
            Dim Factura As IMappeableFacturaObject = CType(entity, IMappeableFacturaObject)
            Return Factura.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As Factura) As Object()
            Dim Factura As IMappeableFacturaObject = CType(entity, IMappeableFacturaObject)
            Return Factura.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal entity As Factura, ByVal parameters As Object())
            ' Update properties from Output parameters
            CType(entity, IMappeableFacturaObject).UpdateObjectFromOutputParams(parameters)
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function


        


        

        ''' <summary>
        ''' Complete the aggregations for this entity. 
        ''' </summary>
        Protected Overrides Sub CompleteEntity(ByVal entity As Factura)
            Dim AlmacenesEntity As Objects.AlmacenesObject = Nothing 'Lazy load
Dim ClientesEntity As Objects.ClientesObject = Nothing 'Lazy load
Dim TrabajadoresEntity As Objects.TrabajadoresObject = Nothing 'Lazy load
            CType(entity, IMappeableFactura).CompleteEntity(AlmacenesEntity, ClientesEntity, TrabajadoresEntity)
        End Sub


        # Region "CRUD Operations"
        

        # End Region
        
        ''' <summary>
        ''' Delete children for this entity
        ''' </summary>
        Public Sub DeleteChildren(ByVal transaction As DbTransaction, ByVal entity As IUniqueIdentifiable)
                        
        End Sub


          



        ''' <summary>
        ''' Get a Factura by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As Factura
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a FacturaList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As FacturaList
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetOne(IdFactura As System.Int32) As Factura
            Return MyBase.GetOne(New Factura(IdFactura))
        End Function

        

        ' GetOne By Objects and Params
            

        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(IdAlmacen As System.Int32) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByAlmacenes", IdAlmacen)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal Almacenes As IUniqueIdentifiable) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByAlmacenes", Almacenes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(IdCliente As System.Int32) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByClientes", IdCliente)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal Clientes As IUniqueIdentifiable) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByClientes", Clientes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(IdTrabjador As System.Int32) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal Trabajadores As IUniqueIdentifiable) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByTrabajadores", Trabajadores.Identifier())
        End Function

    


        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal transaction As DbTransaction,IdAlmacen As System.Int32) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_GetByAlmacenes", IdAlmacen)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal transaction As DbTransaction, ByVal Almacenes As IUniqueIdentifiable) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_GetByAlmacenes", Almacenes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal transaction As DbTransaction,IdCliente As System.Int32) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_GetByClientes", IdCliente)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal transaction As DbTransaction, ByVal Clientes As IUniqueIdentifiable) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_GetByClientes", Clientes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction,IdTrabjador As System.Int32) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction, ByVal Trabajadores As IUniqueIdentifiable) As FacturaList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_GetByTrabajadores", Trabajadores.Identifier())
        End Function

    

        





        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(IdFactura As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Factura_Delete", IdFactura)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(ByVal transaction As DbTransaction ,IdFactura As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_Delete", IdFactura)
        End Sub

        ' Delete By Objects and Params
            



        

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(IdAlmacen As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Factura_DeleteByAlmacenes", IdAlmacen)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal transaction As DbTransaction , IdAlmacen As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_DeleteByAlmacenes", IdAlmacen)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal Almacenes As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Factura_DeleteByAlmacenes", Almacenes.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal transaction As DbTransaction, ByVal Almacenes As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_DeleteByAlmacenes", Almacenes.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(IdCliente As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Factura_DeleteByClientes", IdCliente)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal transaction As DbTransaction , IdCliente As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_DeleteByClientes", IdCliente)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal Clientes As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Factura_DeleteByClientes", Clientes.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal transaction As DbTransaction, ByVal Clientes As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_DeleteByClientes", Clientes.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Factura_DeleteByTrabajadores", IdTrabjador)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal transaction As DbTransaction , IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_DeleteByTrabajadores", IdTrabjador)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal Trabajadores As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Factura_DeleteByTrabajadores", Trabajadores.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal transaction As DbTransaction, ByVal Trabajadores As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Factura_DeleteByTrabajadores", Trabajadores.Identifier())
        End Sub

        

    


        'Database Queries 
        






        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace


Namespace Wrappers
    ''' <summary>
    ''' 
    ''' </summary>
    Public Class FacturaMapperWrapper

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            return Instance().GetPKPropertiesNames()
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return Instance().GetMappingType()
        End Function


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function Instance() As abacusRules.Mappers.FacturaMapper
            Return abacusRules.Mappers.FacturaMapper.Instance()
        End Function

        
        ''' <summary>
        ''' Get a Factura Entity by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdFactura As System.Int32) As Entities.Factura         
            Return Instance().GetOne( IdFactura)
        End Function
        

        ' GetBy Objects and Params
            

        

        ''' <summary>
        ''' Get a FacturaList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByAlmacenes( ByVal IdAlmacen As System.Int32) As Entities.FacturaList 
            Return Instance().GetByAlmacenes(IdAlmacen)
        End Function

        ''' <summary>
        ''' Get a FacturaList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByAlmacenes(ByVal  Almacenes As IUniqueIdentifiable) As Entities.FacturaList
            Return Instance().GetByAlmacenes(Almacenes)
        End Function

    

        ''' <summary>
        ''' Get a FacturaList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByClientes( ByVal IdCliente As System.Int32) As Entities.FacturaList 
            Return Instance().GetByClientes(IdCliente)
        End Function

        ''' <summary>
        ''' Get a FacturaList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByClientes(ByVal  Clientes As IUniqueIdentifiable) As Entities.FacturaList
            Return Instance().GetByClientes(Clientes)
        End Function

    

        ''' <summary>
        ''' Get a FacturaList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByTrabajadores( ByVal IdTrabjador As System.Int32) As Entities.FacturaList 
            Return Instance().GetByTrabajadores(IdTrabjador)
        End Function

        ''' <summary>
        ''' Get a FacturaList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByTrabajadores(ByVal  Trabajadores As IUniqueIdentifiable) As Entities.FacturaList
            Return Instance().GetByTrabajadores(Trabajadores)
        End Function

    

        ''' <summary>
        ''' GetAll Factura 
        ''' </summary>
        Public Function GetAll() As Entities.FacturaList
            Return Instance().GetAll()
        End Function

        
        

        ''' <summary>
        ''' Delete children for Factura
        ''' </summary>
        Public Sub DeleteChildren(ByVal transaction As DbTransaction, ByVal entity As Factura)
            Instance().DeleteChildren(transaction, entity)
        End Sub

        


            

        

        ''' <summary>
        ''' Delete Factura by Almacenes
        ''' </summary>
        Public Sub DeleteByAlmacenes( ByVal IdAlmacen As System.Int32)
            Instance().DeleteByAlmacenes(IdAlmacen)
        End Sub

        ''' <summary>
        ''' Delete Factura by Almacenes
        ''' </summary>
        Public Sub DeleteByAlmacenes(ByVal Almacenes As IUniqueIdentifiable )
            Instance().DeleteByAlmacenes(Almacenes)
        End Sub

    

        ''' <summary>
        ''' Delete Factura by Clientes
        ''' </summary>
        Public Sub DeleteByClientes( ByVal IdCliente As System.Int32)
            Instance().DeleteByClientes(IdCliente)
        End Sub

        ''' <summary>
        ''' Delete Factura by Clientes
        ''' </summary>
        Public Sub DeleteByClientes(ByVal Clientes As IUniqueIdentifiable )
            Instance().DeleteByClientes(Clientes)
        End Sub

    

        ''' <summary>
        ''' Delete Factura by Trabajadores
        ''' </summary>
        Public Sub DeleteByTrabajadores( ByVal IdTrabjador As System.Int32)
            Instance().DeleteByTrabajadores(IdTrabjador)
        End Sub

        ''' <summary>
        ''' Delete Factura by Trabajadores
        ''' </summary>
        Public Sub DeleteByTrabajadores(ByVal Trabajadores As IUniqueIdentifiable )
            Instance().DeleteByTrabajadores(Trabajadores)
        End Sub

    

        ''' <summary>
        ''' Delete Factura 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdFactura As System.Int32)
            Instance().Delete(IdFactura)
        End Sub

        ''' <summary>
        ''' Delete Factura 
        ''' </summary>
        Public Overloads Sub Delete(ByVal entity As Entities.Factura)
            Instance().Delete(entity)
        End Sub

        ''' <summary>
        ''' Save Factura  
        ''' </summary>
        Public Overloads Sub Save(ByVal entity As Entities.Factura)
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert Factura 
        ''' </summary>
        Public Overloads Sub Insert(ByVal entity As Entities.Factura)
            Instance().Insert(entity)
        End Sub

        ''' <summary>
        ''' Save Factura 
        ''' </summary>
        Public Overloads Sub Save(ByVal IdFactura As System.Int32, ByVal IdTrabjador As System.Int32, ByVal IdAlmacen As System.Int32, ByVal SFactura As System.String, ByVal NFactura As System.Int32, ByVal FecEmision As System.DateTime, ByVal CanalVenta As System.String, ByVal FPago As System.Int32, ByVal RACZ As System.String, ByVal IdCliente As System.Int32, ByVal EquipoFrio As System.String, ByVal Moneda As System.Int32, ByVal NPedido As System.Int32, ByVal FecPedido As System.DateTime, ByVal IdVendedor As System.Int32, ByVal OCompra As System.String, ByVal OrdenVenta As System.String, ByVal FecDespacho As System.DateTime, ByVal Guia As System.String, ByVal PED As System.Int32, ByVal Anulado As System.Boolean, ByVal ObsAnulado As System.String, ByVal FoB As System.Boolean, ByVal IdLocal As System.Int32, ByVal SBoleta As System.String, ByVal NBoleta As System.Int32, ByVal AlmacenesString As System.String, ByVal ClientesString As System.String, ByVal TrabajadoresString As System.String)
            Dim entity As Entities.Factura = Instance().GetOne(IdFactura)
            If entity Is Nothing Then
                Throw New ApplicationException(String.Format("Entity not found. IUniqueIdentifiable values: {0} = {1}", "IdFactura", IdFactura))
            End If

            entity.IdTrabjador = IdTrabjador
            entity.IdAlmacen = IdAlmacen
            entity.SFactura = SFactura
            entity.NFactura = NFactura
            entity.FecEmision = FecEmision
            entity.CanalVenta = CanalVenta
            entity.FPago = FPago
            entity.RACZ = RACZ
            entity.IdCliente = IdCliente
            entity.EquipoFrio = EquipoFrio
            entity.Moneda = Moneda
            entity.NPedido = NPedido
            entity.FecPedido = FecPedido
            entity.IdVendedor = IdVendedor
            entity.OCompra = OCompra
            entity.OrdenVenta = OrdenVenta
            entity.FecDespacho = FecDespacho
            entity.Guia = Guia
            entity.PED = PED
            entity.Anulado = Anulado
            entity.ObsAnulado = ObsAnulado
            entity.FoB = FoB
            entity.IdLocal = IdLocal
            entity.SBoleta = SBoleta
            entity.NBoleta = NBoleta
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert Factura
        ''' </summary>
        Public Overloads Sub Insert(ByVal IdTrabjador As System.Int32, ByVal IdAlmacen As System.Int32, ByVal SFactura As System.String, ByVal NFactura As System.Int32, ByVal FecEmision As System.DateTime, ByVal CanalVenta As System.String, ByVal FPago As System.Int32, ByVal RACZ As System.String, ByVal IdCliente As System.Int32, ByVal EquipoFrio As System.String, ByVal Moneda As System.Int32, ByVal NPedido As System.Int32, ByVal FecPedido As System.DateTime, ByVal IdVendedor As System.Int32, ByVal OCompra As System.String, ByVal OrdenVenta As System.String, ByVal FecDespacho As System.DateTime, ByVal Guia As System.String, ByVal PED As System.Int32, ByVal Anulado As System.Boolean, ByVal ObsAnulado As System.String, ByVal FoB As System.Boolean, ByVal IdLocal As System.Int32, ByVal SBoleta As System.String, ByVal NBoleta As System.Int32)
            Dim entity As Entities.Factura = New Entities.Factura

            entity.IdTrabjador = IdTrabjador
            entity.IdAlmacen = IdAlmacen
            entity.SFactura = SFactura
            entity.NFactura = NFactura
            entity.FecEmision = FecEmision
            entity.CanalVenta = CanalVenta
            entity.FPago = FPago
            entity.RACZ = RACZ
            entity.IdCliente = IdCliente
            entity.EquipoFrio = EquipoFrio
            entity.Moneda = Moneda
            entity.NPedido = NPedido
            entity.FecPedido = FecPedido
            entity.IdVendedor = IdVendedor
            entity.OCompra = OCompra
            entity.OrdenVenta = OrdenVenta
            entity.FecDespacho = FecDespacho
            entity.Guia = Guia
            entity.PED = PED
            entity.Anulado = Anulado
            entity.ObsAnulado = ObsAnulado
            entity.FoB = FoB
            entity.IdLocal = IdLocal
            entity.SBoleta = SBoleta
            entity.NBoleta = NBoleta
            Instance().Insert(entity)
        End Sub

        

        'Database Queries 
        


    End Class
End Namespace


Namespace Loaders

    ''' <summary>
    ''' 
    ''' </summary>
    Partial Public Class FacturaLoader(Of T As {Factura, New})
        Inherits BaseLoader(Of T, Factura, ObjectList(Of T))
        Implements IGenericGateway



#Region "Singleton"

        Private Shared _instance As FacturaLoader(Of T)

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As FacturaLoader(Of T)
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New FacturaLoader(Of T)
                Else
                    Dim inst As FacturaLoader(Of T) = TryCast(HttpContext.Current.Items("abacusRules.FacturaLoaderSingleton"), FacturaLoader(Of T))
                    If inst Is Nothing Then
                        inst = New FacturaLoader(Of T)
                        HttpContext.Current.Items.Add("abacusRules.FacturaLoaderSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim s() as String={"IdFactura"}
            Return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            Return GetType(Factura)
        End Function


        Protected Overrides ReadOnly Property TableName As String 
            Get
                Return "Factura"
            End Get
        End Property

        

        


        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As Factura)
            Dim _IdTrabjador As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdTrabjador = New System.Nullable(Of System.Int32)
Else
	 _IdTrabjador = reader.GetInt32(1)
End If
Dim _IdAlmacen As System.Nullable(Of System.Int32) 
If reader.IsDBNull(2) Then 
	 _IdAlmacen = New System.Nullable(Of System.Int32)
Else
	 _IdAlmacen = reader.GetInt32(2)
End If
Dim _SFactura As String
If reader.IsDBNull(3) Then 
	 _SFactura = ""
Else
	 _SFactura = reader.GetString(3)
End If
Dim _NFactura As System.Nullable(Of System.Int32) 
If reader.IsDBNull(4) Then 
	 _NFactura = New System.Nullable(Of System.Int32)
Else
	 _NFactura = reader.GetInt32(4)
End If
Dim _FecEmision As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(5) Then 
	 _FecEmision = New System.Nullable(Of System.DateTime)
Else
	 _FecEmision = reader.GetDateTime(5)
End If
Dim _CanalVenta As String
If reader.IsDBNull(6) Then 
	 _CanalVenta = ""
Else
	 _CanalVenta = reader.GetString(6)
End If
Dim _FPago As System.Nullable(Of System.Int32) 
If reader.IsDBNull(7) Then 
	 _FPago = New System.Nullable(Of System.Int32)
Else
	 _FPago = reader.GetInt32(7)
End If
Dim _RACZ As String
If reader.IsDBNull(8) Then 
	 _RACZ = ""
Else
	 _RACZ = reader.GetString(8)
End If
Dim _IdCliente As System.Nullable(Of System.Int32) 
If reader.IsDBNull(9) Then 
	 _IdCliente = New System.Nullable(Of System.Int32)
Else
	 _IdCliente = reader.GetInt32(9)
End If
Dim _EquipoFrio As String
If reader.IsDBNull(10) Then 
	 _EquipoFrio = ""
Else
	 _EquipoFrio = reader.GetString(10)
End If
Dim _Moneda As System.Nullable(Of System.Int32) 
If reader.IsDBNull(11) Then 
	 _Moneda = New System.Nullable(Of System.Int32)
Else
	 _Moneda = reader.GetInt32(11)
End If
Dim _NPedido As System.Nullable(Of System.Int32) 
If reader.IsDBNull(12) Then 
	 _NPedido = New System.Nullable(Of System.Int32)
Else
	 _NPedido = reader.GetInt32(12)
End If
Dim _FecPedido As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(13) Then 
	 _FecPedido = New System.Nullable(Of System.DateTime)
Else
	 _FecPedido = reader.GetDateTime(13)
End If
Dim _IdVendedor As System.Nullable(Of System.Int32) 
If reader.IsDBNull(14) Then 
	 _IdVendedor = New System.Nullable(Of System.Int32)
Else
	 _IdVendedor = reader.GetInt32(14)
End If
Dim _OCompra As String
If reader.IsDBNull(15) Then 
	 _OCompra = ""
Else
	 _OCompra = reader.GetString(15)
End If
Dim _OrdenVenta As String
If reader.IsDBNull(16) Then 
	 _OrdenVenta = ""
Else
	 _OrdenVenta = reader.GetString(16)
End If
Dim _FecDespacho As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(17) Then 
	 _FecDespacho = New System.Nullable(Of System.DateTime)
Else
	 _FecDespacho = reader.GetDateTime(17)
End If
Dim _Guia As String
If reader.IsDBNull(18) Then 
	 _Guia = ""
Else
	 _Guia = reader.GetString(18)
End If
Dim _PED As System.Nullable(Of System.Int32) 
If reader.IsDBNull(19) Then 
	 _PED = New System.Nullable(Of System.Int32)
Else
	 _PED = reader.GetInt32(19)
End If
Dim _Anulado As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(20) Then 
	 _Anulado = New System.Nullable(Of System.Boolean)
Else
	 _Anulado = reader.GetBoolean(20)
End If
Dim _ObsAnulado As String
If reader.IsDBNull(21) Then 
	 _ObsAnulado = ""
Else
	 _ObsAnulado = reader.GetString(21)
End If
Dim _FoB As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(22) Then 
	 _FoB = New System.Nullable(Of System.Boolean)
Else
	 _FoB = reader.GetBoolean(22)
End If
Dim _IdLocal As System.Nullable(Of System.Int32) 
If reader.IsDBNull(23) Then 
	 _IdLocal = New System.Nullable(Of System.Int32)
Else
	 _IdLocal = reader.GetInt32(23)
End If
Dim _SBoleta As String
If reader.IsDBNull(24) Then 
	 _SBoleta = ""
Else
	 _SBoleta = reader.GetString(24)
End If
Dim _NBoleta As System.Nullable(Of System.Int32) 
If reader.IsDBNull(25) Then 
	 _NBoleta = New System.Nullable(Of System.Int32)
Else
	 _NBoleta = reader.GetInt32(25)
End If
Dim _AlmacenesString As String
If reader.IsDBNull(26) Then 
	 _AlmacenesString = ""
Else
	 _AlmacenesString = reader.GetString(26)
End If
Dim _ClientesString As String
If reader.IsDBNull(27) Then 
	 _ClientesString = ""
Else
	 _ClientesString = reader.GetString(27)
End If
Dim _TrabajadoresString As String
If reader.IsDBNull(28) Then 
	 _TrabajadoresString = ""
Else
	 _TrabajadoresString = reader.GetString(28)
End If

            Dim Factura As IMappeableFacturaObject  = CType(entity, IMappeableFacturaObject)
            Factura.HydrateFields(reader.GetInt32(0), _
_IdTrabjador, _
_IdAlmacen, _
_SFactura, _
_NFactura, _
_FecEmision, _
_CanalVenta, _
_FPago, _
_RACZ, _
_IdCliente, _
_EquipoFrio, _
_Moneda, _
_NPedido, _
_FecPedido, _
_IdVendedor, _
_OCompra, _
_OrdenVenta, _
_FecDespacho, _
_Guia, _
_PED, _
_Anulado, _
_ObsAnulado, _
_FoB, _
_IdLocal, _
_SBoleta, _
_NBoleta, _
_AlmacenesString, _
_ClientesString, _
_TrabajadoresString)
        End Sub


        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function

        

        

        ' Complete the aggregations for this entity.         
        Protected Overrides Sub CompleteEntity(ByVal entity As t)
            Dim AlmacenesEntity As Objects.AlmacenesObject = Nothing 'Lazy load
Dim ClientesEntity As Objects.ClientesObject = Nothing 'Lazy load
Dim TrabajadoresEntity As Objects.TrabajadoresObject = Nothing 'Lazy load
            CType(entity, IMappeableFactura).CompleteEntity(AlmacenesEntity, ClientesEntity, TrabajadoresEntity)
        End Sub

        


        ''' <summary>
        ''' Get a Factura by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As t
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a FacturaList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As ObjectList(Of T)
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' GetOne By Params
        ''' </summary>
        Public Overloads Function GetOne(IdFactura As System.Int32) As t
            Return MyBase.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetOne", IdFactura)
        End Function
        


        ' GetOne By Objects and Params
            

        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(IdAlmacen As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByAlmacenes", IdAlmacen)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal Almacenes As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByAlmacenes", Almacenes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(IdCliente As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByClientes", IdCliente)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal Clientes As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByClientes", Clientes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(IdTrabjador As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal Trabajadores As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Factura_GetByTrabajadores", Trabajadores.Identifier())
        End Function

    


        'Database Queries 
        


        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace




