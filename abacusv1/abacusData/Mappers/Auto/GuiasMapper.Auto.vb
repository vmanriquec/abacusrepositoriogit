
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:49 p.m.
' This is a partial class file. The other one is GuiasMapper.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Entities
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web


Namespace Mappers
    

    Public Partial Class GuiasMapper
        Inherits BaseGateway(Of Guias, GuiasList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As GuiasMapper

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As GuiasMapper
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New GuiasMapper()
                Else
                    Dim inst As GuiasMapper = TryCast(HttpContext.Current.Items("abacusRules.GuiasMapperSingleton"), GuiasMapper)
                    If inst Is Nothing Then
                        inst = New GuiasMapper()
                        HttpContext.Current.Items.Add("abacusRules.GuiasMapperSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function


#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim  s() as String={"IdGuias"}
            return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return GetType(Guias)
        End Function


        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String 
            Get
                Return "Guias"
            End Get
        End Property

        ''' <summary>
        ''' Return the GuiasGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(GuiasMapper).FullName
            End Get
        End Property


        

        

        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As Guias)
            Dim _IdFactura As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdFactura = New System.Nullable(Of System.Int32)
Else
	 _IdFactura = reader.GetInt32(1)
End If
Dim _NGuia As System.Nullable(Of System.Int32) 
If reader.IsDBNull(2) Then 
	 _NGuia = New System.Nullable(Of System.Int32)
Else
	 _NGuia = reader.GetInt32(2)
End If
Dim _SGuia As String
If reader.IsDBNull(3) Then 
	 _SGuia = ""
Else
	 _SGuia = reader.GetString(3)
End If
Dim _FecTraslado As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(4) Then 
	 _FecTraslado = New System.Nullable(Of System.DateTime)
Else
	 _FecTraslado = reader.GetDateTime(4)
End If
Dim _IdCliente As System.Nullable(Of System.Int32) 
If reader.IsDBNull(5) Then 
	 _IdCliente = New System.Nullable(Of System.Int32)
Else
	 _IdCliente = reader.GetInt32(5)
End If
Dim _IdAlmacen As System.Nullable(Of System.Int32) 
If reader.IsDBNull(6) Then 
	 _IdAlmacen = New System.Nullable(Of System.Int32)
Else
	 _IdAlmacen = reader.GetInt32(6)
End If
Dim _OCompra As String
If reader.IsDBNull(7) Then 
	 _OCompra = ""
Else
	 _OCompra = reader.GetString(7)
End If
Dim _PuntoPartida As String
If reader.IsDBNull(8) Then 
	 _PuntoPartida = ""
Else
	 _PuntoPartida = reader.GetString(8)
End If
Dim _NFactura As String
If reader.IsDBNull(9) Then 
	 _NFactura = ""
Else
	 _NFactura = reader.GetString(9)
End If
Dim _Venta As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(10) Then 
	 _Venta = New System.Nullable(Of System.Boolean)
Else
	 _Venta = reader.GetBoolean(10)
End If
Dim _Compra As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(11) Then 
	 _Compra = New System.Nullable(Of System.Boolean)
Else
	 _Compra = reader.GetBoolean(11)
End If
Dim _Consignacion As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(12) Then 
	 _Consignacion = New System.Nullable(Of System.Boolean)
Else
	 _Consignacion = reader.GetBoolean(12)
End If
Dim _VentaET As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(13) Then 
	 _VentaET = New System.Nullable(Of System.Boolean)
Else
	 _VentaET = reader.GetBoolean(13)
End If
Dim _VentaC As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(14) Then 
	 _VentaC = New System.Nullable(Of System.Boolean)
Else
	 _VentaC = reader.GetBoolean(14)
End If
Dim _TrasladoEE As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(15) Then 
	 _TrasladoEE = New System.Nullable(Of System.Boolean)
Else
	 _TrasladoEE = reader.GetBoolean(15)
End If
Dim _Devolucion As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(16) Then 
	 _Devolucion = New System.Nullable(Of System.Boolean)
Else
	 _Devolucion = reader.GetBoolean(16)
End If
Dim _Recojo As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(17) Then 
	 _Recojo = New System.Nullable(Of System.Boolean)
Else
	 _Recojo = reader.GetBoolean(17)
End If
Dim _Importacion As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(18) Then 
	 _Importacion = New System.Nullable(Of System.Boolean)
Else
	 _Importacion = reader.GetBoolean(18)
End If
Dim _Exportacion As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(19) Then 
	 _Exportacion = New System.Nullable(Of System.Boolean)
Else
	 _Exportacion = reader.GetBoolean(19)
End If
Dim _TrasladoZP As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(20) Then 
	 _TrasladoZP = New System.Nullable(Of System.Boolean)
Else
	 _TrasladoZP = reader.GetBoolean(20)
End If
Dim _TrasladoEI As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(21) Then 
	 _TrasladoEI = New System.Nullable(Of System.Boolean)
Else
	 _TrasladoEI = reader.GetBoolean(21)
End If
Dim _TrasladoB As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(22) Then 
	 _TrasladoB = New System.Nullable(Of System.Boolean)
Else
	 _TrasladoB = reader.GetBoolean(22)
End If
Dim _Otros As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(23) Then 
	 _Otros = New System.Nullable(Of System.Boolean)
Else
	 _Otros = reader.GetBoolean(23)
End If
Dim _EspecOtros As String
If reader.IsDBNull(24) Then 
	 _EspecOtros = ""
Else
	 _EspecOtros = reader.GetString(24)
End If
Dim _IdCoti As System.Nullable(Of System.Int32) 
If reader.IsDBNull(25) Then 
	 _IdCoti = New System.Nullable(Of System.Int32)
Else
	 _IdCoti = reader.GetInt32(25)
End If
Dim _IdTransportista As System.Nullable(Of System.Int32) 
If reader.IsDBNull(26) Then 
	 _IdTransportista = New System.Nullable(Of System.Int32)
Else
	 _IdTransportista = reader.GetInt32(26)
End If
Dim _IdFact As System.Nullable(Of System.Int32) 
If reader.IsDBNull(27) Then 
	 _IdFact = New System.Nullable(Of System.Int32)
Else
	 _IdFact = reader.GetInt32(27)
End If
Dim _Anulado As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(28) Then 
	 _Anulado = New System.Nullable(Of System.Boolean)
Else
	 _Anulado = reader.GetBoolean(28)
End If
Dim _ObsAnulado As String
If reader.IsDBNull(29) Then 
	 _ObsAnulado = ""
Else
	 _ObsAnulado = reader.GetString(29)
End If
Dim _Almacen As String
If reader.IsDBNull(30) Then 
	 _Almacen = ""
Else
	 _Almacen = reader.GetString(30)
End If
Dim _IdTienda As System.Nullable(Of System.Int32) 
If reader.IsDBNull(31) Then 
	 _IdTienda = New System.Nullable(Of System.Int32)
Else
	 _IdTienda = reader.GetInt32(31)
End If
Dim _GoR As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(32) Then 
	 _GoR = New System.Nullable(Of System.Boolean)
Else
	 _GoR = reader.GetBoolean(32)
End If
Dim _estado As String
If reader.IsDBNull(33) Then 
	 _estado = ""
Else
	 _estado = reader.GetString(33)
End If
Dim _AlmacenesString As String
If reader.IsDBNull(34) Then 
	 _AlmacenesString = ""
Else
	 _AlmacenesString = reader.GetString(34)
End If
Dim _ClientesString As String
If reader.IsDBNull(35) Then 
	 _ClientesString = ""
Else
	 _ClientesString = reader.GetString(35)
End If
Dim _CotizacionString As String
If reader.IsDBNull(36) Then 
	 _CotizacionString = ""
Else
	 _CotizacionString = reader.GetString(36)
End If
Dim _FacturaString As String
If reader.IsDBNull(37) Then 
	 _FacturaString = ""
Else
	 _FacturaString = reader.GetString(37)
End If
Dim _TransportistaString As String
If reader.IsDBNull(38) Then 
	 _TransportistaString = ""
Else
	 _TransportistaString = reader.GetString(38)
End If

            Dim Guias As IMappeableGuiasObject  = CType(entity, IMappeableGuiasObject)
            Guias.HydrateFields(reader.GetInt32(0), _
_IdFactura, _
_NGuia, _
_SGuia, _
_FecTraslado, _
_IdCliente, _
_IdAlmacen, _
_OCompra, _
_PuntoPartida, _
_NFactura, _
_Venta, _
_Compra, _
_Consignacion, _
_VentaET, _
_VentaC, _
_TrasladoEE, _
_Devolucion, _
_Recojo, _
_Importacion, _
_Exportacion, _
_TrasladoZP, _
_TrasladoEI, _
_TrasladoB, _
_Otros, _
_EspecOtros, _
_IdCoti, _
_IdTransportista, _
_IdFact, _
_Anulado, _
_ObsAnulado, _
_Almacen, _
_IdTienda, _
_GoR, _
_estado, _
_AlmacenesString, _
_ClientesString, _
_CotizacionString, _
_FacturaString, _
_TransportistaString)
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As Guias) As Object()
            Dim Guias As IMappeableGuiasObject = CType(entity, IMappeableGuiasObject)
            Return Guias.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As Guias) As Object()
            Dim Guias As IMappeableGuiasObject = CType(entity, IMappeableGuiasObject)
            Return Guias.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As Guias) As Object()
            Dim Guias As IMappeableGuiasObject = CType(entity, IMappeableGuiasObject)
            Return Guias.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal entity As Guias, ByVal parameters As Object())
            ' Update properties from Output parameters
            CType(entity, IMappeableGuiasObject).UpdateObjectFromOutputParams(parameters)
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function


        


        

        ''' <summary>
        ''' Complete the aggregations for this entity. 
        ''' </summary>
        Protected Overrides Sub CompleteEntity(ByVal entity As Guias)
            Dim AlmacenesEntity As Objects.AlmacenesObject = Nothing 'Lazy load
Dim ClientesEntity As Objects.ClientesObject = Nothing 'Lazy load
Dim CotizacionEntity As Objects.CotizacionObject = Nothing 'Lazy load
Dim FacturaEntity As Objects.FacturaObject = Nothing 'Lazy load
Dim TransportistaEntity As Objects.TransportistaObject = Nothing 'Lazy load
            CType(entity, IMappeableGuias).CompleteEntity(AlmacenesEntity, ClientesEntity, CotizacionEntity, FacturaEntity, TransportistaEntity)
        End Sub


        # Region "CRUD Operations"
        

        # End Region
        
        ''' <summary>
        ''' Delete children for this entity
        ''' </summary>
        Public Sub DeleteChildren(ByVal transaction As DbTransaction, ByVal entity As IUniqueIdentifiable)
                        
        End Sub


          



        ''' <summary>
        ''' Get a Guias by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As Guias
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a GuiasList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As GuiasList
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetOne(IdGuias As System.Int32) As Guias
            Return MyBase.GetOne(New Guias(IdGuias))
        End Function

        

        ' GetOne By Objects and Params
            

        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(IdAlmacen As System.Int32) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByAlmacenes", IdAlmacen)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal Almacenes As IUniqueIdentifiable) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByAlmacenes", Almacenes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(IdCliente As System.Int32) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByClientes", IdCliente)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal Clientes As IUniqueIdentifiable) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByClientes", Clientes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByCotizacion(IdCoti As System.Int32) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByCotizacion", IdCoti)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByCotizacion(ByVal Cotizacion As IUniqueIdentifiable) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByCotizacion", Cotizacion.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByFactura(IdFactura As System.Int32) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByFactura", IdFactura)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByFactura(ByVal Factura As IUniqueIdentifiable) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByFactura", Factura.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTransportista(IdTransportista As System.Int32) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByTransportista", IdTransportista)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTransportista(ByVal Transportista As IUniqueIdentifiable) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByTransportista", Transportista.Identifier())
        End Function

    


        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal transaction As DbTransaction,IdAlmacen As System.Int32) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_GetByAlmacenes", IdAlmacen)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal transaction As DbTransaction, ByVal Almacenes As IUniqueIdentifiable) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_GetByAlmacenes", Almacenes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal transaction As DbTransaction,IdCliente As System.Int32) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_GetByClientes", IdCliente)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal transaction As DbTransaction, ByVal Clientes As IUniqueIdentifiable) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_GetByClientes", Clientes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByCotizacion(ByVal transaction As DbTransaction,IdCoti As System.Int32) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_GetByCotizacion", IdCoti)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByCotizacion(ByVal transaction As DbTransaction, ByVal Cotizacion As IUniqueIdentifiable) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_GetByCotizacion", Cotizacion.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByFactura(ByVal transaction As DbTransaction,IdFactura As System.Int32) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_GetByFactura", IdFactura)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByFactura(ByVal transaction As DbTransaction, ByVal Factura As IUniqueIdentifiable) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_GetByFactura", Factura.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTransportista(ByVal transaction As DbTransaction,IdTransportista As System.Int32) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_GetByTransportista", IdTransportista)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTransportista(ByVal transaction As DbTransaction, ByVal Transportista As IUniqueIdentifiable) As GuiasList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_GetByTransportista", Transportista.Identifier())
        End Function

    

        





        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(IdGuias As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Guias_Delete", IdGuias)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(ByVal transaction As DbTransaction ,IdGuias As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_Delete", IdGuias)
        End Sub

        ' Delete By Objects and Params
            



        

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(IdAlmacen As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Guias_DeleteByAlmacenes", IdAlmacen)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal transaction As DbTransaction , IdAlmacen As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_DeleteByAlmacenes", IdAlmacen)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal Almacenes As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Guias_DeleteByAlmacenes", Almacenes.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal transaction As DbTransaction, ByVal Almacenes As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_DeleteByAlmacenes", Almacenes.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(IdCliente As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Guias_DeleteByClientes", IdCliente)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal transaction As DbTransaction , IdCliente As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_DeleteByClientes", IdCliente)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal Clientes As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Guias_DeleteByClientes", Clientes.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal transaction As DbTransaction, ByVal Clientes As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_DeleteByClientes", Clientes.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByCotizacion(IdCoti As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Guias_DeleteByCotizacion", IdCoti)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByCotizacion(ByVal transaction As DbTransaction , IdCoti As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_DeleteByCotizacion", IdCoti)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByCotizacion(ByVal Cotizacion As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Guias_DeleteByCotizacion", Cotizacion.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByCotizacion(ByVal transaction As DbTransaction, ByVal Cotizacion As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_DeleteByCotizacion", Cotizacion.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByFactura(IdFactura As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Guias_DeleteByFactura", IdFactura)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByFactura(ByVal transaction As DbTransaction , IdFactura As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_DeleteByFactura", IdFactura)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByFactura(ByVal Factura As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Guias_DeleteByFactura", Factura.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByFactura(ByVal transaction As DbTransaction, ByVal Factura As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_DeleteByFactura", Factura.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTransportista(IdTransportista As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Guias_DeleteByTransportista", IdTransportista)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTransportista(ByVal transaction As DbTransaction , IdTransportista As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_DeleteByTransportista", IdTransportista)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTransportista(ByVal Transportista As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Guias_DeleteByTransportista", Transportista.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTransportista(ByVal transaction As DbTransaction, ByVal Transportista As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Guias_DeleteByTransportista", Transportista.Identifier())
        End Sub

        

    


        'Database Queries 
        






        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace


Namespace Wrappers
    ''' <summary>
    ''' 
    ''' </summary>
    Public Class GuiasMapperWrapper

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            return Instance().GetPKPropertiesNames()
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return Instance().GetMappingType()
        End Function


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function Instance() As abacusRules.Mappers.GuiasMapper
            Return abacusRules.Mappers.GuiasMapper.Instance()
        End Function

        
        ''' <summary>
        ''' Get a Guias Entity by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdGuias As System.Int32) As Entities.Guias         
            Return Instance().GetOne( IdGuias)
        End Function
        

        ' GetBy Objects and Params
            

        

        ''' <summary>
        ''' Get a GuiasList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByAlmacenes( ByVal IdAlmacen As System.Int32) As Entities.GuiasList 
            Return Instance().GetByAlmacenes(IdAlmacen)
        End Function

        ''' <summary>
        ''' Get a GuiasList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByAlmacenes(ByVal  Almacenes As IUniqueIdentifiable) As Entities.GuiasList
            Return Instance().GetByAlmacenes(Almacenes)
        End Function

    

        ''' <summary>
        ''' Get a GuiasList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByClientes( ByVal IdCliente As System.Int32) As Entities.GuiasList 
            Return Instance().GetByClientes(IdCliente)
        End Function

        ''' <summary>
        ''' Get a GuiasList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByClientes(ByVal  Clientes As IUniqueIdentifiable) As Entities.GuiasList
            Return Instance().GetByClientes(Clientes)
        End Function

    

        ''' <summary>
        ''' Get a GuiasList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByCotizacion( ByVal IdCoti As System.Int32) As Entities.GuiasList 
            Return Instance().GetByCotizacion(IdCoti)
        End Function

        ''' <summary>
        ''' Get a GuiasList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByCotizacion(ByVal  Cotizacion As IUniqueIdentifiable) As Entities.GuiasList
            Return Instance().GetByCotizacion(Cotizacion)
        End Function

    

        ''' <summary>
        ''' Get a GuiasList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByFactura( ByVal IdFactura As System.Int32) As Entities.GuiasList 
            Return Instance().GetByFactura(IdFactura)
        End Function

        ''' <summary>
        ''' Get a GuiasList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByFactura(ByVal  Factura As IUniqueIdentifiable) As Entities.GuiasList
            Return Instance().GetByFactura(Factura)
        End Function

    

        ''' <summary>
        ''' Get a GuiasList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByTransportista( ByVal IdTransportista As System.Int32) As Entities.GuiasList 
            Return Instance().GetByTransportista(IdTransportista)
        End Function

        ''' <summary>
        ''' Get a GuiasList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByTransportista(ByVal  Transportista As IUniqueIdentifiable) As Entities.GuiasList
            Return Instance().GetByTransportista(Transportista)
        End Function

    

        ''' <summary>
        ''' GetAll Guias 
        ''' </summary>
        Public Function GetAll() As Entities.GuiasList
            Return Instance().GetAll()
        End Function

        
        

        ''' <summary>
        ''' Delete children for Guias
        ''' </summary>
        Public Sub DeleteChildren(ByVal transaction As DbTransaction, ByVal entity As Guias)
            Instance().DeleteChildren(transaction, entity)
        End Sub

        


            

        

        ''' <summary>
        ''' Delete Guias by Almacenes
        ''' </summary>
        Public Sub DeleteByAlmacenes( ByVal IdAlmacen As System.Int32)
            Instance().DeleteByAlmacenes(IdAlmacen)
        End Sub

        ''' <summary>
        ''' Delete Guias by Almacenes
        ''' </summary>
        Public Sub DeleteByAlmacenes(ByVal Almacenes As IUniqueIdentifiable )
            Instance().DeleteByAlmacenes(Almacenes)
        End Sub

    

        ''' <summary>
        ''' Delete Guias by Clientes
        ''' </summary>
        Public Sub DeleteByClientes( ByVal IdCliente As System.Int32)
            Instance().DeleteByClientes(IdCliente)
        End Sub

        ''' <summary>
        ''' Delete Guias by Clientes
        ''' </summary>
        Public Sub DeleteByClientes(ByVal Clientes As IUniqueIdentifiable )
            Instance().DeleteByClientes(Clientes)
        End Sub

    

        ''' <summary>
        ''' Delete Guias by Cotizacion
        ''' </summary>
        Public Sub DeleteByCotizacion( ByVal IdCoti As System.Int32)
            Instance().DeleteByCotizacion(IdCoti)
        End Sub

        ''' <summary>
        ''' Delete Guias by Cotizacion
        ''' </summary>
        Public Sub DeleteByCotizacion(ByVal Cotizacion As IUniqueIdentifiable )
            Instance().DeleteByCotizacion(Cotizacion)
        End Sub

    

        ''' <summary>
        ''' Delete Guias by Factura
        ''' </summary>
        Public Sub DeleteByFactura( ByVal IdFactura As System.Int32)
            Instance().DeleteByFactura(IdFactura)
        End Sub

        ''' <summary>
        ''' Delete Guias by Factura
        ''' </summary>
        Public Sub DeleteByFactura(ByVal Factura As IUniqueIdentifiable )
            Instance().DeleteByFactura(Factura)
        End Sub

    

        ''' <summary>
        ''' Delete Guias by Transportista
        ''' </summary>
        Public Sub DeleteByTransportista( ByVal IdTransportista As System.Int32)
            Instance().DeleteByTransportista(IdTransportista)
        End Sub

        ''' <summary>
        ''' Delete Guias by Transportista
        ''' </summary>
        Public Sub DeleteByTransportista(ByVal Transportista As IUniqueIdentifiable )
            Instance().DeleteByTransportista(Transportista)
        End Sub

    

        ''' <summary>
        ''' Delete Guias 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdGuias As System.Int32)
            Instance().Delete(IdGuias)
        End Sub

        ''' <summary>
        ''' Delete Guias 
        ''' </summary>
        Public Overloads Sub Delete(ByVal entity As Entities.Guias)
            Instance().Delete(entity)
        End Sub

        ''' <summary>
        ''' Save Guias  
        ''' </summary>
        Public Overloads Sub Save(ByVal entity As Entities.Guias)
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert Guias 
        ''' </summary>
        Public Overloads Sub Insert(ByVal entity As Entities.Guias)
            Instance().Insert(entity)
        End Sub

        ''' <summary>
        ''' Save Guias 
        ''' </summary>
        Public Overloads Sub Save(ByVal IdGuias As System.Int32, ByVal IdFactura As System.Int32, ByVal NGuia As System.Int32, ByVal SGuia As System.String, ByVal FecTraslado As System.DateTime, ByVal IdCliente As System.Int32, ByVal IdAlmacen As System.Int32, ByVal OCompra As System.String, ByVal PuntoPartida As System.String, ByVal NFactura As System.String, ByVal Venta As System.Boolean, ByVal Compra As System.Boolean, ByVal Consignacion As System.Boolean, ByVal VentaET As System.Boolean, ByVal VentaC As System.Boolean, ByVal TrasladoEE As System.Boolean, ByVal Devolucion As System.Boolean, ByVal Recojo As System.Boolean, ByVal Importacion As System.Boolean, ByVal Exportacion As System.Boolean, ByVal TrasladoZP As System.Boolean, ByVal TrasladoEI As System.Boolean, ByVal TrasladoB As System.Boolean, ByVal Otros As System.Boolean, ByVal EspecOtros As System.String, ByVal IdCoti As System.Int32, ByVal IdTransportista As System.Int32, ByVal IdFact As System.Int32, ByVal Anulado As System.Boolean, ByVal ObsAnulado As System.String, ByVal Almacen As System.String, ByVal IdTienda As System.Int32, ByVal GoR As System.Boolean, ByVal estado As System.String, ByVal AlmacenesString As System.String, ByVal ClientesString As System.String, ByVal CotizacionString As System.String, ByVal FacturaString As System.String, ByVal TransportistaString As System.String)
            Dim entity As Entities.Guias = Instance().GetOne(IdGuias)
            If entity Is Nothing Then
                Throw New ApplicationException(String.Format("Entity not found. IUniqueIdentifiable values: {0} = {1}", "IdGuias", IdGuias))
            End If

            entity.IdFactura = IdFactura
            entity.NGuia = NGuia
            entity.SGuia = SGuia
            entity.FecTraslado = FecTraslado
            entity.IdCliente = IdCliente
            entity.IdAlmacen = IdAlmacen
            entity.OCompra = OCompra
            entity.PuntoPartida = PuntoPartida
            entity.NFactura = NFactura
            entity.Venta = Venta
            entity.Compra = Compra
            entity.Consignacion = Consignacion
            entity.VentaET = VentaET
            entity.VentaC = VentaC
            entity.TrasladoEE = TrasladoEE
            entity.Devolucion = Devolucion
            entity.Recojo = Recojo
            entity.Importacion = Importacion
            entity.Exportacion = Exportacion
            entity.TrasladoZP = TrasladoZP
            entity.TrasladoEI = TrasladoEI
            entity.TrasladoB = TrasladoB
            entity.Otros = Otros
            entity.EspecOtros = EspecOtros
            entity.IdCoti = IdCoti
            entity.IdTransportista = IdTransportista
            entity.IdFact = IdFact
            entity.Anulado = Anulado
            entity.ObsAnulado = ObsAnulado
            entity.Almacen = Almacen
            entity.IdTienda = IdTienda
            entity.GoR = GoR
            entity.estado = estado
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert Guias
        ''' </summary>
        Public Overloads Sub Insert(ByVal IdFactura As System.Int32, ByVal NGuia As System.Int32, ByVal SGuia As System.String, ByVal FecTraslado As System.DateTime, ByVal IdCliente As System.Int32, ByVal IdAlmacen As System.Int32, ByVal OCompra As System.String, ByVal PuntoPartida As System.String, ByVal NFactura As System.String, ByVal Venta As System.Boolean, ByVal Compra As System.Boolean, ByVal Consignacion As System.Boolean, ByVal VentaET As System.Boolean, ByVal VentaC As System.Boolean, ByVal TrasladoEE As System.Boolean, ByVal Devolucion As System.Boolean, ByVal Recojo As System.Boolean, ByVal Importacion As System.Boolean, ByVal Exportacion As System.Boolean, ByVal TrasladoZP As System.Boolean, ByVal TrasladoEI As System.Boolean, ByVal TrasladoB As System.Boolean, ByVal Otros As System.Boolean, ByVal EspecOtros As System.String, ByVal IdCoti As System.Int32, ByVal IdTransportista As System.Int32, ByVal IdFact As System.Int32, ByVal Anulado As System.Boolean, ByVal ObsAnulado As System.String, ByVal Almacen As System.String, ByVal IdTienda As System.Int32, ByVal GoR As System.Boolean, ByVal estado As System.String)
            Dim entity As Entities.Guias = New Entities.Guias

            entity.IdFactura = IdFactura
            entity.NGuia = NGuia
            entity.SGuia = SGuia
            entity.FecTraslado = FecTraslado
            entity.IdCliente = IdCliente
            entity.IdAlmacen = IdAlmacen
            entity.OCompra = OCompra
            entity.PuntoPartida = PuntoPartida
            entity.NFactura = NFactura
            entity.Venta = Venta
            entity.Compra = Compra
            entity.Consignacion = Consignacion
            entity.VentaET = VentaET
            entity.VentaC = VentaC
            entity.TrasladoEE = TrasladoEE
            entity.Devolucion = Devolucion
            entity.Recojo = Recojo
            entity.Importacion = Importacion
            entity.Exportacion = Exportacion
            entity.TrasladoZP = TrasladoZP
            entity.TrasladoEI = TrasladoEI
            entity.TrasladoB = TrasladoB
            entity.Otros = Otros
            entity.EspecOtros = EspecOtros
            entity.IdCoti = IdCoti
            entity.IdTransportista = IdTransportista
            entity.IdFact = IdFact
            entity.Anulado = Anulado
            entity.ObsAnulado = ObsAnulado
            entity.Almacen = Almacen
            entity.IdTienda = IdTienda
            entity.GoR = GoR
            entity.estado = estado
            Instance().Insert(entity)
        End Sub

        

        'Database Queries 
        


    End Class
End Namespace


Namespace Loaders

    ''' <summary>
    ''' 
    ''' </summary>
    Partial Public Class GuiasLoader(Of T As {Guias, New})
        Inherits BaseLoader(Of T, Guias, ObjectList(Of T))
        Implements IGenericGateway



#Region "Singleton"

        Private Shared _instance As GuiasLoader(Of T)

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As GuiasLoader(Of T)
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New GuiasLoader(Of T)
                Else
                    Dim inst As GuiasLoader(Of T) = TryCast(HttpContext.Current.Items("abacusRules.GuiasLoaderSingleton"), GuiasLoader(Of T))
                    If inst Is Nothing Then
                        inst = New GuiasLoader(Of T)
                        HttpContext.Current.Items.Add("abacusRules.GuiasLoaderSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim s() as String={"IdGuias"}
            Return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            Return GetType(Guias)
        End Function


        Protected Overrides ReadOnly Property TableName As String 
            Get
                Return "Guias"
            End Get
        End Property

        

        


        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As Guias)
            Dim _IdFactura As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdFactura = New System.Nullable(Of System.Int32)
Else
	 _IdFactura = reader.GetInt32(1)
End If
Dim _NGuia As System.Nullable(Of System.Int32) 
If reader.IsDBNull(2) Then 
	 _NGuia = New System.Nullable(Of System.Int32)
Else
	 _NGuia = reader.GetInt32(2)
End If
Dim _SGuia As String
If reader.IsDBNull(3) Then 
	 _SGuia = ""
Else
	 _SGuia = reader.GetString(3)
End If
Dim _FecTraslado As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(4) Then 
	 _FecTraslado = New System.Nullable(Of System.DateTime)
Else
	 _FecTraslado = reader.GetDateTime(4)
End If
Dim _IdCliente As System.Nullable(Of System.Int32) 
If reader.IsDBNull(5) Then 
	 _IdCliente = New System.Nullable(Of System.Int32)
Else
	 _IdCliente = reader.GetInt32(5)
End If
Dim _IdAlmacen As System.Nullable(Of System.Int32) 
If reader.IsDBNull(6) Then 
	 _IdAlmacen = New System.Nullable(Of System.Int32)
Else
	 _IdAlmacen = reader.GetInt32(6)
End If
Dim _OCompra As String
If reader.IsDBNull(7) Then 
	 _OCompra = ""
Else
	 _OCompra = reader.GetString(7)
End If
Dim _PuntoPartida As String
If reader.IsDBNull(8) Then 
	 _PuntoPartida = ""
Else
	 _PuntoPartida = reader.GetString(8)
End If
Dim _NFactura As String
If reader.IsDBNull(9) Then 
	 _NFactura = ""
Else
	 _NFactura = reader.GetString(9)
End If
Dim _Venta As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(10) Then 
	 _Venta = New System.Nullable(Of System.Boolean)
Else
	 _Venta = reader.GetBoolean(10)
End If
Dim _Compra As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(11) Then 
	 _Compra = New System.Nullable(Of System.Boolean)
Else
	 _Compra = reader.GetBoolean(11)
End If
Dim _Consignacion As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(12) Then 
	 _Consignacion = New System.Nullable(Of System.Boolean)
Else
	 _Consignacion = reader.GetBoolean(12)
End If
Dim _VentaET As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(13) Then 
	 _VentaET = New System.Nullable(Of System.Boolean)
Else
	 _VentaET = reader.GetBoolean(13)
End If
Dim _VentaC As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(14) Then 
	 _VentaC = New System.Nullable(Of System.Boolean)
Else
	 _VentaC = reader.GetBoolean(14)
End If
Dim _TrasladoEE As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(15) Then 
	 _TrasladoEE = New System.Nullable(Of System.Boolean)
Else
	 _TrasladoEE = reader.GetBoolean(15)
End If
Dim _Devolucion As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(16) Then 
	 _Devolucion = New System.Nullable(Of System.Boolean)
Else
	 _Devolucion = reader.GetBoolean(16)
End If
Dim _Recojo As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(17) Then 
	 _Recojo = New System.Nullable(Of System.Boolean)
Else
	 _Recojo = reader.GetBoolean(17)
End If
Dim _Importacion As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(18) Then 
	 _Importacion = New System.Nullable(Of System.Boolean)
Else
	 _Importacion = reader.GetBoolean(18)
End If
Dim _Exportacion As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(19) Then 
	 _Exportacion = New System.Nullable(Of System.Boolean)
Else
	 _Exportacion = reader.GetBoolean(19)
End If
Dim _TrasladoZP As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(20) Then 
	 _TrasladoZP = New System.Nullable(Of System.Boolean)
Else
	 _TrasladoZP = reader.GetBoolean(20)
End If
Dim _TrasladoEI As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(21) Then 
	 _TrasladoEI = New System.Nullable(Of System.Boolean)
Else
	 _TrasladoEI = reader.GetBoolean(21)
End If
Dim _TrasladoB As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(22) Then 
	 _TrasladoB = New System.Nullable(Of System.Boolean)
Else
	 _TrasladoB = reader.GetBoolean(22)
End If
Dim _Otros As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(23) Then 
	 _Otros = New System.Nullable(Of System.Boolean)
Else
	 _Otros = reader.GetBoolean(23)
End If
Dim _EspecOtros As String
If reader.IsDBNull(24) Then 
	 _EspecOtros = ""
Else
	 _EspecOtros = reader.GetString(24)
End If
Dim _IdCoti As System.Nullable(Of System.Int32) 
If reader.IsDBNull(25) Then 
	 _IdCoti = New System.Nullable(Of System.Int32)
Else
	 _IdCoti = reader.GetInt32(25)
End If
Dim _IdTransportista As System.Nullable(Of System.Int32) 
If reader.IsDBNull(26) Then 
	 _IdTransportista = New System.Nullable(Of System.Int32)
Else
	 _IdTransportista = reader.GetInt32(26)
End If
Dim _IdFact As System.Nullable(Of System.Int32) 
If reader.IsDBNull(27) Then 
	 _IdFact = New System.Nullable(Of System.Int32)
Else
	 _IdFact = reader.GetInt32(27)
End If
Dim _Anulado As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(28) Then 
	 _Anulado = New System.Nullable(Of System.Boolean)
Else
	 _Anulado = reader.GetBoolean(28)
End If
Dim _ObsAnulado As String
If reader.IsDBNull(29) Then 
	 _ObsAnulado = ""
Else
	 _ObsAnulado = reader.GetString(29)
End If
Dim _Almacen As String
If reader.IsDBNull(30) Then 
	 _Almacen = ""
Else
	 _Almacen = reader.GetString(30)
End If
Dim _IdTienda As System.Nullable(Of System.Int32) 
If reader.IsDBNull(31) Then 
	 _IdTienda = New System.Nullable(Of System.Int32)
Else
	 _IdTienda = reader.GetInt32(31)
End If
Dim _GoR As System.Nullable(Of System.Boolean) 
If reader.IsDBNull(32) Then 
	 _GoR = New System.Nullable(Of System.Boolean)
Else
	 _GoR = reader.GetBoolean(32)
End If
Dim _estado As String
If reader.IsDBNull(33) Then 
	 _estado = ""
Else
	 _estado = reader.GetString(33)
End If
Dim _AlmacenesString As String
If reader.IsDBNull(34) Then 
	 _AlmacenesString = ""
Else
	 _AlmacenesString = reader.GetString(34)
End If
Dim _ClientesString As String
If reader.IsDBNull(35) Then 
	 _ClientesString = ""
Else
	 _ClientesString = reader.GetString(35)
End If
Dim _CotizacionString As String
If reader.IsDBNull(36) Then 
	 _CotizacionString = ""
Else
	 _CotizacionString = reader.GetString(36)
End If
Dim _FacturaString As String
If reader.IsDBNull(37) Then 
	 _FacturaString = ""
Else
	 _FacturaString = reader.GetString(37)
End If
Dim _TransportistaString As String
If reader.IsDBNull(38) Then 
	 _TransportistaString = ""
Else
	 _TransportistaString = reader.GetString(38)
End If

            Dim Guias As IMappeableGuiasObject  = CType(entity, IMappeableGuiasObject)
            Guias.HydrateFields(reader.GetInt32(0), _
_IdFactura, _
_NGuia, _
_SGuia, _
_FecTraslado, _
_IdCliente, _
_IdAlmacen, _
_OCompra, _
_PuntoPartida, _
_NFactura, _
_Venta, _
_Compra, _
_Consignacion, _
_VentaET, _
_VentaC, _
_TrasladoEE, _
_Devolucion, _
_Recojo, _
_Importacion, _
_Exportacion, _
_TrasladoZP, _
_TrasladoEI, _
_TrasladoB, _
_Otros, _
_EspecOtros, _
_IdCoti, _
_IdTransportista, _
_IdFact, _
_Anulado, _
_ObsAnulado, _
_Almacen, _
_IdTienda, _
_GoR, _
_estado, _
_AlmacenesString, _
_ClientesString, _
_CotizacionString, _
_FacturaString, _
_TransportistaString)
        End Sub


        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function

        

        

        ' Complete the aggregations for this entity.         
        Protected Overrides Sub CompleteEntity(ByVal entity As t)
            Dim AlmacenesEntity As Objects.AlmacenesObject = Nothing 'Lazy load
Dim ClientesEntity As Objects.ClientesObject = Nothing 'Lazy load
Dim CotizacionEntity As Objects.CotizacionObject = Nothing 'Lazy load
Dim FacturaEntity As Objects.FacturaObject = Nothing 'Lazy load
Dim TransportistaEntity As Objects.TransportistaObject = Nothing 'Lazy load
            CType(entity, IMappeableGuias).CompleteEntity(AlmacenesEntity, ClientesEntity, CotizacionEntity, FacturaEntity, TransportistaEntity)
        End Sub

        


        ''' <summary>
        ''' Get a Guias by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As t
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a GuiasList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As ObjectList(Of T)
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' GetOne By Params
        ''' </summary>
        Public Overloads Function GetOne(IdGuias As System.Int32) As t
            Return MyBase.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetOne", IdGuias)
        End Function
        


        ' GetOne By Objects and Params
            

        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(IdAlmacen As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByAlmacenes", IdAlmacen)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal Almacenes As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByAlmacenes", Almacenes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(IdCliente As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByClientes", IdCliente)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal Clientes As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByClientes", Clientes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByCotizacion(IdCoti As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByCotizacion", IdCoti)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByCotizacion(ByVal Cotizacion As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByCotizacion", Cotizacion.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByFactura(IdFactura As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByFactura", IdFactura)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByFactura(ByVal Factura As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByFactura", Factura.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTransportista(IdTransportista As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByTransportista", IdTransportista)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTransportista(ByVal Transportista As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Guias_GetByTransportista", Transportista.Identifier())
        End Function

    


        'Database Queries 
        


        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace




