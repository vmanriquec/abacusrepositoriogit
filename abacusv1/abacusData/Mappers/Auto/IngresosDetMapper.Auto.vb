
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:49 p.m.
' This is a partial class file. The other one is IngresosDetMapper.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Entities
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web


Namespace Mappers
    

    Public Partial Class IngresosDetMapper
        Inherits BaseGateway(Of IngresosDet, IngresosDetList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As IngresosDetMapper

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As IngresosDetMapper
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New IngresosDetMapper()
                Else
                    Dim inst As IngresosDetMapper = TryCast(HttpContext.Current.Items("abacusRules.IngresosDetMapperSingleton"), IngresosDetMapper)
                    If inst Is Nothing Then
                        inst = New IngresosDetMapper()
                        HttpContext.Current.Items.Add("abacusRules.IngresosDetMapperSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function


#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim  s() as String={"IdIngresosDet"}
            return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return GetType(IngresosDet)
        End Function


        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String 
            Get
                Return "IngresosDet"
            End Get
        End Property

        ''' <summary>
        ''' Return the IngresosDetGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(IngresosDetMapper).FullName
            End Get
        End Property


        

        

        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As IngresosDet)
            Dim _IdIngresos As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdIngresos = New System.Nullable(Of System.Int32)
Else
	 _IdIngresos = reader.GetInt32(1)
End If
Dim _IdProducto As System.Nullable(Of System.Int32) 
If reader.IsDBNull(2) Then 
	 _IdProducto = New System.Nullable(Of System.Int32)
Else
	 _IdProducto = reader.GetInt32(2)
End If
Dim _Cantidad As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(3) Then 
	 _Cantidad = New System.Nullable(Of System.Decimal)
Else
	 _Cantidad = reader.GetDecimal(3)
End If
Dim _PU As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(4) Then 
	 _PU = New System.Nullable(Of System.Decimal)
Else
	 _PU = reader.GetDecimal(4)
End If
Dim _IdAlmacen As System.Nullable(Of System.Int32) 
If reader.IsDBNull(5) Then 
	 _IdAlmacen = New System.Nullable(Of System.Int32)
Else
	 _IdAlmacen = reader.GetInt32(5)
End If
Dim _upsize_ts As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(6) Then 
	 _upsize_ts = New System.Nullable(Of System.DateTime)
Else
	 _upsize_ts = reader.GetDateTime(6)
End If
Dim _subtotal As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(7) Then 
	 _subtotal = New System.Nullable(Of System.Decimal)
Else
	 _subtotal = reader.GetDecimal(7)
End If
Dim _pventa As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(8) Then 
	 _pventa = New System.Nullable(Of System.Decimal)
Else
	 _pventa = reader.GetDecimal(8)
End If
Dim _AlmacenesString As String
If reader.IsDBNull(9) Then 
	 _AlmacenesString = ""
Else
	 _AlmacenesString = reader.GetString(9)
End If
Dim _IngresosString As String
If reader.IsDBNull(10) Then 
	 _IngresosString = ""
Else
	 _IngresosString = reader.GetString(10)
End If
Dim _ProductosString As String
If reader.IsDBNull(11) Then 
	 _ProductosString = ""
Else
	 _ProductosString = reader.GetString(11)
End If

            Dim IngresosDet As IMappeableIngresosDetObject  = CType(entity, IMappeableIngresosDetObject)
            IngresosDet.HydrateFields(reader.GetInt32(0), _
_IdIngresos, _
_IdProducto, _
_Cantidad, _
_PU, _
_IdAlmacen, _
_upsize_ts, _
_subtotal, _
_pventa, _
_AlmacenesString, _
_IngresosString, _
_ProductosString)
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As IngresosDet) As Object()
            Dim IngresosDet As IMappeableIngresosDetObject = CType(entity, IMappeableIngresosDetObject)
            Return IngresosDet.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As IngresosDet) As Object()
            Dim IngresosDet As IMappeableIngresosDetObject = CType(entity, IMappeableIngresosDetObject)
            Return IngresosDet.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As IngresosDet) As Object()
            Dim IngresosDet As IMappeableIngresosDetObject = CType(entity, IMappeableIngresosDetObject)
            Return IngresosDet.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal entity As IngresosDet, ByVal parameters As Object())
            ' Update properties from Output parameters
            CType(entity, IMappeableIngresosDetObject).UpdateObjectFromOutputParams(parameters)
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function


        


        

        ''' <summary>
        ''' Complete the aggregations for this entity. 
        ''' </summary>
        Protected Overrides Sub CompleteEntity(ByVal entity As IngresosDet)
            Dim AlmacenesEntity As Objects.AlmacenesObject = Nothing 'Lazy load
Dim IngresosEntity As Objects.IngresosObject = Nothing 'Lazy load
Dim ProductosEntity As Objects.ProductosObject = Nothing 'Lazy load
            CType(entity, IMappeableIngresosDet).CompleteEntity(AlmacenesEntity, IngresosEntity, ProductosEntity)
        End Sub


        # Region "CRUD Operations"
        

        # End Region
        
        ''' <summary>
        ''' Delete children for this entity
        ''' </summary>
        Public Sub DeleteChildren(ByVal transaction As DbTransaction, ByVal entity As IUniqueIdentifiable)
                        
        End Sub


          



        ''' <summary>
        ''' Get a IngresosDet by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As IngresosDet
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a IngresosDetList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As IngresosDetList
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetOne(IdIngresosDet As System.Int32) As IngresosDet
            Return MyBase.GetOne(New IngresosDet(IdIngresosDet))
        End Function

        

        ' GetOne By Objects and Params
            

        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(IdAlmacen As System.Int32) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByAlmacenes", IdAlmacen)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal Almacenes As IUniqueIdentifiable) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByAlmacenes", Almacenes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByIngresos(IdIngresos As System.Int32) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByIngresos", IdIngresos)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByIngresos(ByVal Ingresos As IUniqueIdentifiable) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByIngresos", Ingresos.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByProductos(IdProducto As System.Int32) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByProductos", IdProducto)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByProductos(ByVal Productos As IUniqueIdentifiable) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByProductos", Productos.Identifier())
        End Function

    


        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal transaction As DbTransaction,IdAlmacen As System.Int32) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_GetByAlmacenes", IdAlmacen)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal transaction As DbTransaction, ByVal Almacenes As IUniqueIdentifiable) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_GetByAlmacenes", Almacenes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByIngresos(ByVal transaction As DbTransaction,IdIngresos As System.Int32) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_GetByIngresos", IdIngresos)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByIngresos(ByVal transaction As DbTransaction, ByVal Ingresos As IUniqueIdentifiable) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_GetByIngresos", Ingresos.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByProductos(ByVal transaction As DbTransaction,IdProducto As System.Int32) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_GetByProductos", IdProducto)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByProductos(ByVal transaction As DbTransaction, ByVal Productos As IUniqueIdentifiable) As IngresosDetList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_GetByProductos", Productos.Identifier())
        End Function

    

        





        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(IdIngresosDet As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "IngresosDet_Delete", IdIngresosDet)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(ByVal transaction As DbTransaction ,IdIngresosDet As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_Delete", IdIngresosDet)
        End Sub

        ' Delete By Objects and Params
            



        

    

    

    

    

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(IdAlmacen As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "IngresosDet_DeleteByAlmacenes", IdAlmacen)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal transaction As DbTransaction , IdAlmacen As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_DeleteByAlmacenes", IdAlmacen)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal Almacenes As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "IngresosDet_DeleteByAlmacenes", Almacenes.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal transaction As DbTransaction, ByVal Almacenes As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_DeleteByAlmacenes", Almacenes.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByIngresos(IdIngresos As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "IngresosDet_DeleteByIngresos", IdIngresos)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByIngresos(ByVal transaction As DbTransaction , IdIngresos As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_DeleteByIngresos", IdIngresos)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByIngresos(ByVal Ingresos As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "IngresosDet_DeleteByIngresos", Ingresos.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByIngresos(ByVal transaction As DbTransaction, ByVal Ingresos As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_DeleteByIngresos", Ingresos.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByProductos(IdProducto As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "IngresosDet_DeleteByProductos", IdProducto)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByProductos(ByVal transaction As DbTransaction , IdProducto As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_DeleteByProductos", IdProducto)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByProductos(ByVal Productos As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "IngresosDet_DeleteByProductos", Productos.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByProductos(ByVal transaction As DbTransaction, ByVal Productos As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "IngresosDet_DeleteByProductos", Productos.Identifier())
        End Sub

        

    


        'Database Queries 
        






        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace


Namespace Wrappers
    ''' <summary>
    ''' 
    ''' </summary>
    Public Class IngresosDetMapperWrapper

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            return Instance().GetPKPropertiesNames()
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return Instance().GetMappingType()
        End Function


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function Instance() As abacusRules.Mappers.IngresosDetMapper
            Return abacusRules.Mappers.IngresosDetMapper.Instance()
        End Function

        
        ''' <summary>
        ''' Get a IngresosDet Entity by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdIngresosDet As System.Int32) As Entities.IngresosDet         
            Return Instance().GetOne( IdIngresosDet)
        End Function
        

        ' GetBy Objects and Params
            

        

        ''' <summary>
        ''' Get a IngresosDetList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByAlmacenes( ByVal IdAlmacen As System.Int32) As Entities.IngresosDetList 
            Return Instance().GetByAlmacenes(IdAlmacen)
        End Function

        ''' <summary>
        ''' Get a IngresosDetList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByAlmacenes(ByVal  Almacenes As IUniqueIdentifiable) As Entities.IngresosDetList
            Return Instance().GetByAlmacenes(Almacenes)
        End Function

    

        ''' <summary>
        ''' Get a IngresosDetList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByIngresos( ByVal IdIngresos As System.Int32) As Entities.IngresosDetList 
            Return Instance().GetByIngresos(IdIngresos)
        End Function

        ''' <summary>
        ''' Get a IngresosDetList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByIngresos(ByVal  Ingresos As IUniqueIdentifiable) As Entities.IngresosDetList
            Return Instance().GetByIngresos(Ingresos)
        End Function

    

        ''' <summary>
        ''' Get a IngresosDetList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByProductos( ByVal IdProducto As System.Int32) As Entities.IngresosDetList 
            Return Instance().GetByProductos(IdProducto)
        End Function

        ''' <summary>
        ''' Get a IngresosDetList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByProductos(ByVal  Productos As IUniqueIdentifiable) As Entities.IngresosDetList
            Return Instance().GetByProductos(Productos)
        End Function

    

        ''' <summary>
        ''' GetAll IngresosDet 
        ''' </summary>
        Public Function GetAll() As Entities.IngresosDetList
            Return Instance().GetAll()
        End Function

        
        

        ''' <summary>
        ''' Delete children for IngresosDet
        ''' </summary>
        Public Sub DeleteChildren(ByVal transaction As DbTransaction, ByVal entity As IngresosDet)
            Instance().DeleteChildren(transaction, entity)
        End Sub

        


            

        

        ''' <summary>
        ''' Delete IngresosDet by Almacenes
        ''' </summary>
        Public Sub DeleteByAlmacenes( ByVal IdAlmacen As System.Int32)
            Instance().DeleteByAlmacenes(IdAlmacen)
        End Sub

        ''' <summary>
        ''' Delete IngresosDet by Almacenes
        ''' </summary>
        Public Sub DeleteByAlmacenes(ByVal Almacenes As IUniqueIdentifiable )
            Instance().DeleteByAlmacenes(Almacenes)
        End Sub

    

        ''' <summary>
        ''' Delete IngresosDet by Ingresos
        ''' </summary>
        Public Sub DeleteByIngresos( ByVal IdIngresos As System.Int32)
            Instance().DeleteByIngresos(IdIngresos)
        End Sub

        ''' <summary>
        ''' Delete IngresosDet by Ingresos
        ''' </summary>
        Public Sub DeleteByIngresos(ByVal Ingresos As IUniqueIdentifiable )
            Instance().DeleteByIngresos(Ingresos)
        End Sub

    

        ''' <summary>
        ''' Delete IngresosDet by Productos
        ''' </summary>
        Public Sub DeleteByProductos( ByVal IdProducto As System.Int32)
            Instance().DeleteByProductos(IdProducto)
        End Sub

        ''' <summary>
        ''' Delete IngresosDet by Productos
        ''' </summary>
        Public Sub DeleteByProductos(ByVal Productos As IUniqueIdentifiable )
            Instance().DeleteByProductos(Productos)
        End Sub

    

        ''' <summary>
        ''' Delete IngresosDet 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdIngresosDet As System.Int32)
            Instance().Delete(IdIngresosDet)
        End Sub

        ''' <summary>
        ''' Delete IngresosDet 
        ''' </summary>
        Public Overloads Sub Delete(ByVal entity As Entities.IngresosDet)
            Instance().Delete(entity)
        End Sub

        ''' <summary>
        ''' Save IngresosDet  
        ''' </summary>
        Public Overloads Sub Save(ByVal entity As Entities.IngresosDet)
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert IngresosDet 
        ''' </summary>
        Public Overloads Sub Insert(ByVal entity As Entities.IngresosDet)
            Instance().Insert(entity)
        End Sub

        ''' <summary>
        ''' Save IngresosDet 
        ''' </summary>
        Public Overloads Sub Save(ByVal IdIngresosDet As System.Int32, ByVal IdIngresos As System.Int32, ByVal IdProducto As System.Int32, ByVal Cantidad As System.Decimal, ByVal PU As System.Decimal, ByVal IdAlmacen As System.Int32, ByVal upsize_ts As System.DateTime, ByVal subtotal As System.Decimal, ByVal pventa As System.Decimal, ByVal AlmacenesString As System.String, ByVal IngresosString As System.String, ByVal ProductosString As System.String)
            Dim entity As Entities.IngresosDet = Instance().GetOne(IdIngresosDet)
            If entity Is Nothing Then
                Throw New ApplicationException(String.Format("Entity not found. IUniqueIdentifiable values: {0} = {1}", "IdIngresosDet", IdIngresosDet))
            End If

            entity.IdIngresos = IdIngresos
            entity.IdProducto = IdProducto
            entity.Cantidad = Cantidad
            entity.PU = PU
            entity.IdAlmacen = IdAlmacen
            entity.upsize_ts = upsize_ts
            entity.subtotal = subtotal
            entity.pventa = pventa
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert IngresosDet
        ''' </summary>
        Public Overloads Sub Insert(ByVal IdIngresos As System.Int32, ByVal IdProducto As System.Int32, ByVal Cantidad As System.Decimal, ByVal PU As System.Decimal, ByVal IdAlmacen As System.Int32, ByVal upsize_ts As System.DateTime, ByVal subtotal As System.Decimal, ByVal pventa As System.Decimal)
            Dim entity As Entities.IngresosDet = New Entities.IngresosDet

            entity.IdIngresos = IdIngresos
            entity.IdProducto = IdProducto
            entity.Cantidad = Cantidad
            entity.PU = PU
            entity.IdAlmacen = IdAlmacen
            entity.upsize_ts = upsize_ts
            entity.subtotal = subtotal
            entity.pventa = pventa
            Instance().Insert(entity)
        End Sub

        

        'Database Queries 
        


    End Class
End Namespace


Namespace Loaders

    ''' <summary>
    ''' 
    ''' </summary>
    Partial Public Class IngresosDetLoader(Of T As {IngresosDet, New})
        Inherits BaseLoader(Of T, IngresosDet, ObjectList(Of T))
        Implements IGenericGateway



#Region "Singleton"

        Private Shared _instance As IngresosDetLoader(Of T)

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As IngresosDetLoader(Of T)
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New IngresosDetLoader(Of T)
                Else
                    Dim inst As IngresosDetLoader(Of T) = TryCast(HttpContext.Current.Items("abacusRules.IngresosDetLoaderSingleton"), IngresosDetLoader(Of T))
                    If inst Is Nothing Then
                        inst = New IngresosDetLoader(Of T)
                        HttpContext.Current.Items.Add("abacusRules.IngresosDetLoaderSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim s() as String={"IdIngresosDet"}
            Return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            Return GetType(IngresosDet)
        End Function


        Protected Overrides ReadOnly Property TableName As String 
            Get
                Return "IngresosDet"
            End Get
        End Property

        

        


        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As IngresosDet)
            Dim _IdIngresos As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdIngresos = New System.Nullable(Of System.Int32)
Else
	 _IdIngresos = reader.GetInt32(1)
End If
Dim _IdProducto As System.Nullable(Of System.Int32) 
If reader.IsDBNull(2) Then 
	 _IdProducto = New System.Nullable(Of System.Int32)
Else
	 _IdProducto = reader.GetInt32(2)
End If
Dim _Cantidad As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(3) Then 
	 _Cantidad = New System.Nullable(Of System.Decimal)
Else
	 _Cantidad = reader.GetDecimal(3)
End If
Dim _PU As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(4) Then 
	 _PU = New System.Nullable(Of System.Decimal)
Else
	 _PU = reader.GetDecimal(4)
End If
Dim _IdAlmacen As System.Nullable(Of System.Int32) 
If reader.IsDBNull(5) Then 
	 _IdAlmacen = New System.Nullable(Of System.Int32)
Else
	 _IdAlmacen = reader.GetInt32(5)
End If
Dim _upsize_ts As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(6) Then 
	 _upsize_ts = New System.Nullable(Of System.DateTime)
Else
	 _upsize_ts = reader.GetDateTime(6)
End If
Dim _subtotal As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(7) Then 
	 _subtotal = New System.Nullable(Of System.Decimal)
Else
	 _subtotal = reader.GetDecimal(7)
End If
Dim _pventa As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(8) Then 
	 _pventa = New System.Nullable(Of System.Decimal)
Else
	 _pventa = reader.GetDecimal(8)
End If
Dim _AlmacenesString As String
If reader.IsDBNull(9) Then 
	 _AlmacenesString = ""
Else
	 _AlmacenesString = reader.GetString(9)
End If
Dim _IngresosString As String
If reader.IsDBNull(10) Then 
	 _IngresosString = ""
Else
	 _IngresosString = reader.GetString(10)
End If
Dim _ProductosString As String
If reader.IsDBNull(11) Then 
	 _ProductosString = ""
Else
	 _ProductosString = reader.GetString(11)
End If

            Dim IngresosDet As IMappeableIngresosDetObject  = CType(entity, IMappeableIngresosDetObject)
            IngresosDet.HydrateFields(reader.GetInt32(0), _
_IdIngresos, _
_IdProducto, _
_Cantidad, _
_PU, _
_IdAlmacen, _
_upsize_ts, _
_subtotal, _
_pventa, _
_AlmacenesString, _
_IngresosString, _
_ProductosString)
        End Sub


        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function

        

        

        ' Complete the aggregations for this entity.         
        Protected Overrides Sub CompleteEntity(ByVal entity As t)
            Dim AlmacenesEntity As Objects.AlmacenesObject = Nothing 'Lazy load
Dim IngresosEntity As Objects.IngresosObject = Nothing 'Lazy load
Dim ProductosEntity As Objects.ProductosObject = Nothing 'Lazy load
            CType(entity, IMappeableIngresosDet).CompleteEntity(AlmacenesEntity, IngresosEntity, ProductosEntity)
        End Sub

        


        ''' <summary>
        ''' Get a IngresosDet by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As t
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a IngresosDetList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As ObjectList(Of T)
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' GetOne By Params
        ''' </summary>
        Public Overloads Function GetOne(IdIngresosDet As System.Int32) As t
            Return MyBase.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetOne", IdIngresosDet)
        End Function
        


        ' GetOne By Objects and Params
            

        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(IdAlmacen As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByAlmacenes", IdAlmacen)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal Almacenes As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByAlmacenes", Almacenes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByIngresos(IdIngresos As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByIngresos", IdIngresos)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByIngresos(ByVal Ingresos As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByIngresos", Ingresos.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByProductos(IdProducto As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByProductos", IdProducto)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByProductos(ByVal Productos As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "IngresosDet_GetByProductos", Productos.Identifier())
        End Function

    


        'Database Queries 
        


        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace




