
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is IngresosDetEntity.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports abacusRules.Objects


Imports Cooperator.Framework.Core
Imports Cooperator.Framework.Core.LazyLoad
Imports System

Namespace Entities

    Public Partial Class IngresosDet
        Inherits Objects.IngresosDetObject
        Implements IMappeableIngresosDet
        Implements IEquatable(Of IngresosDet)
        Implements ICloneable

        #Region "Ctor"

        Public Sub New()
            MyBase.New()
            
        End Sub

        
        Public Sub New (ByVal IdIngresosDet As System.Int32)
            MyBase.New()

			_IdIngresosDet = IdIngresosDet

            
            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdIngresosDet As System.Int32, _
			ByVal IdIngresos As System.Nullable(Of System.Int32), _
			ByVal IdProducto As System.Nullable(Of System.Int32), _
			ByVal Cantidad As System.Nullable(Of System.Decimal), _
			ByVal PU As System.Nullable(Of System.Decimal), _
			ByVal IdAlmacen As System.Nullable(Of System.Int32), _
			ByVal upsize_ts As System.Nullable(Of System.DateTime), _
			ByVal AlmacenesString As System.String, _
			ByVal IngresosString As System.String, _
			ByVal ProductosString As System.String)
            MyBase.New()

			_IdIngresosDet = IdIngresosDet
			_IdIngresos = IdIngresos
			_IdProducto = IdProducto
			_Cantidad = Cantidad
			_PU = PU
			_IdAlmacen = IdAlmacen
			_upsize_ts = upsize_ts
			_AlmacenesString = AlmacenesString
			_IngresosString = IngresosString
			_ProductosString = ProductosString

            
            Call Initialized()
        End Sub
        
        #End Region

        #Region "Fields"

        Protected  _AlmacenesEntity As Objects.AlmacenesObject
Protected  _IngresosEntity As Objects.IngresosObject
Protected  _ProductosEntity As Objects.ProductosObject

        #End Region

        #Region "Properties"
        
Dim _AlmacenesEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property AlmacenesEntity As Objects.AlmacenesObject
            Get
                If _AlmacenesEntity Is Nothing  AndAlso Me.IdAlmacen.HasValue AndAlso Not _AlmacenesEntityFetched  Then
_AlmacenesEntityFetched = True
Dim _AlmacenesEntityTemp As Objects.AlmacenesObject = New Objects.AlmacenesObject(Me.IdAlmacen.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.AlmacenesObject))
 _AlmacenesEntity = CType(lazyProvider.GetEntity(GetType(Objects.AlmacenesObject), _AlmacenesEntityTemp), Objects.AlmacenesObject)
End If

                Return _AlmacenesEntity
            End Get
            Set (value As Objects.AlmacenesObject)
                MyBase.PropertyModified()
                _AlmacenesEntity = value
                If value IsNot Nothing Then
   _IdAlmacen = value.IdAlmacen
If value.Almacen IsNot Nothing Then 
_AlmacenesString = value.Almacen.ToString() 
Else
    _AlmacenesString = "" 
End If

Else 
   _IdAlmacen = Nothing
_AlmacenesString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
Dim _IngresosEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property IngresosEntity As Objects.IngresosObject
            Get
                If _IngresosEntity Is Nothing  AndAlso Me.IdIngresos.HasValue AndAlso Not _IngresosEntityFetched  Then
_IngresosEntityFetched = True
Dim _IngresosEntityTemp As Objects.IngresosObject = New Objects.IngresosObject(Me.IdIngresos.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.IngresosObject))
 _IngresosEntity = CType(lazyProvider.GetEntity(GetType(Objects.IngresosObject), _IngresosEntityTemp), Objects.IngresosObject)
End If

                Return _IngresosEntity
            End Get
            Set (value As Objects.IngresosObject)
                MyBase.PropertyModified()
                _IngresosEntity = value
                If value IsNot Nothing Then
   _IdIngresos = value.IdIngresos
If value.Serie IsNot Nothing Then 
_IngresosString = value.Serie.ToString() 
Else
    _IngresosString = "" 
End If

Else 
   _IdIngresos = Nothing
_IngresosString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
Dim _ProductosEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property ProductosEntity As Objects.ProductosObject
            Get
                If _ProductosEntity Is Nothing  AndAlso Me.IdProducto.HasValue AndAlso Not _ProductosEntityFetched  Then
_ProductosEntityFetched = True
Dim _ProductosEntityTemp As Objects.ProductosObject = New Objects.ProductosObject(Me.IdProducto.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.ProductosObject))
 _ProductosEntity = CType(lazyProvider.GetEntity(GetType(Objects.ProductosObject), _ProductosEntityTemp), Objects.ProductosObject)
End If

                Return _ProductosEntity
            End Get
            Set (value As Objects.ProductosObject)
                MyBase.PropertyModified()
                _ProductosEntity = value
                If value IsNot Nothing Then
   _IdProducto = value.IdProducto
If value.CodProducto IsNot Nothing Then 
_ProductosString = value.CodProducto.ToString() 
Else
    _ProductosString = "" 
End If

Else 
   _IdProducto = Nothing
_ProductosString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
        #End Region

        ''' <summary>
        ''' Returns de original value of entity since was created or restored. 
        ''' </summary>
        Public Shadows Function OriginalValue() As IngresosDet 
                Return CType(MyBase.OriginalValue, IngresosDet)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Protected Overrides Function Clone() As Object 
            Dim newObject As IngresosDet 
            

            newObject = CType(Me.MemberwiseClone(), IngresosDet)
            ' Entities
                         
            If Me._AlmacenesEntity IsNot Nothing Then
                newObject._AlmacenesEntity = CType(CType(Me._AlmacenesEntity, ICloneable).Clone(),Objects.AlmacenesObject)
            End If
                         
            If Me._IngresosEntity IsNot Nothing Then
                newObject._IngresosEntity = CType(CType(Me._IngresosEntity, ICloneable).Clone(),Objects.IngresosObject)
            End If
                         
            If Me._ProductosEntity IsNot Nothing Then
                newObject._ProductosEntity = CType(CType(Me._ProductosEntity, ICloneable).Clone(),Objects.ProductosObject)
            End If
            
            ' Colections
            
            ' OriginalValue
            Dim newOriginalValue As IngresosDet
            If MyBase.InternalOriginalValue IsNot Nothing Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), IngresosDet)
                ' Entities
                             
                If Me.OriginalValue()._AlmacenesEntity IsNot Nothing Then
                    newOriginalValue._AlmacenesEntity = CType(CType(Me.OriginalValue()._AlmacenesEntity, ICloneable).Clone(), Objects.AlmacenesObject)
                End If
                             
                If Me.OriginalValue()._IngresosEntity IsNot Nothing Then
                    newOriginalValue._IngresosEntity = CType(CType(Me.OriginalValue()._IngresosEntity, ICloneable).Clone(), Objects.IngresosObject)
                End If
                             
                If Me.OriginalValue()._ProductosEntity IsNot Nothing Then
                    newOriginalValue._ProductosEntity = CType(CType(Me.OriginalValue()._ProductosEntity, ICloneable).Clone(), Objects.ProductosObject)
                End If
                
                ' Colections
                            
                newObject.InternalOriginalValue = newOriginalValue

            End If
            Return newObject
        End Function



        Private Sub CompleteEntity(AlmacenesEntity As Objects.AlmacenesObject, IngresosEntity As Objects.IngresosObject, ProductosEntity As Objects.ProductosObject) Implements IMappeableIngresosDet.CompleteEntity
        _AlmacenesEntity = AlmacenesEntity
_IngresosEntity = IngresosEntity
_ProductosEntity = ProductosEntity
        End Sub

        
        Private Function IsAlmacenesEntityNull() As Boolean Implements IMappeableIngresosDet.IsAlmacenesEntityNull
            Return IsNothing(_AlmacenesEntity)
        End Function
        
        Private Function IsIngresosEntityNull() As Boolean Implements IMappeableIngresosDet.IsIngresosEntityNull
            Return IsNothing(_IngresosEntity)
        End Function
        
        Private Function IsProductosEntityNull() As Boolean Implements IMappeableIngresosDet.IsProductosEntityNull
            Return IsNothing(_ProductosEntity)
        End Function
        

        Private Sub SetFKValuesForChilds(entity As IngresosDet) Implements IMappeableIngresosDet.SetFKValuesForChilds
                
        End Sub

        Public Overloads Function Equals(other As IngresosDet) As Boolean Implements IEquatable(Of IngresosDet).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function

    End Class

    Public Interface IMappeableIngresosDet
        Sub CompleteEntity(AlmacenesEntity As Objects.AlmacenesObject, IngresosEntity As Objects.IngresosObject, ProductosEntity As Objects.ProductosObject)
        
        Function IsAlmacenesEntityNull() As Boolean
        
        Function IsIngresosEntityNull() As Boolean
        
        Function IsProductosEntityNull() As Boolean
        
        Sub SetFKValuesForChilds(entity As IngresosDet )
    End Interface

    Public Partial Class IngresosDetList
        Inherits ObjectList(Of IngresosDet)    
    End Class
End Namespace

Namespace Views
    Partial Public Class IngresosDetListView
        Inherits ObjectListView(Of Entities.IngresosDet)

        Sub New(ByVal list As Entities.IngresosDetList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


