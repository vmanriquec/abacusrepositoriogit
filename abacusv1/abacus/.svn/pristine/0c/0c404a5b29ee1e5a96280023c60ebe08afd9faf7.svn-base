
        
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:50 p.m.
' This is a Partial class file. The other one is AlmacenesObject.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports Cooperator.Framework.Core
Imports System

Namespace Objects

    Public Partial Class AlmacenesObject
        Inherits BaseObject
        Implements IMappeableAlmacenesObject
        Implements IUniqueIdentifiable
        Implements IEquatable(Of AlmacenesObject)
        Implements ICloneable

#Region "Ctor"

        Public Sub New()
            MyBase.New()

			_IdAlmacen =  ValuesGenerator.GetInt32

        End Sub

        
        Public Sub New(ByVal IdAlmacen As System.Int32)
            MyBase.New()

			_IdAlmacen = IdAlmacen

            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdAlmacen As System.Int32, _
			ByVal Almacen As System.String)
            MyBase.New()

			_IdAlmacen = IdAlmacen
			_Almacen = Almacen

            Call Initialized()
        End Sub
        

#End Region

#Region "Events"

        
#End Region

#Region "Fields"

        Protected _IdAlmacen As System.Int32
Protected _Almacen As System.String

#End Region

#Region "Properties"
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable ReadOnly Property IdAlmacen As System.Int32
            Get
                Return _IdAlmacen
            End Get
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property Almacen As System.String
            Get
                Return _Almacen
            End Get
            
            Set
                MyBase.PropertyModified()
                _Almacen = value
                
            End Set
            
        End Property
        
        #End Region

        

        Protected Overrides Sub SetOriginalValue()
            MyBase.InternalOriginalValue = CType(Me.MemberwiseClone(), IObject)
        End Sub

        Protected Overridable Function Clone() As Object Implements ICloneable.Clone
            Dim newObject As AlmacenesObject 
            Dim newOriginalValue As AlmacenesObject 

            newObject = CType(Me.MemberwiseClone(), AlmacenesObject) 
            If (MyBase.InternalOriginalValue IsNot Nothing) Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), AlmacenesObject)
                newObject.InternalOriginalValue = newOriginalValue
            End If
            Return newObject
        End Function


        ''' <summary>
        ''' Returns de original value of object since was created or restored.
        ''' </summary>
        Public Shadows Function OriginalValue() As AlmacenesObject 
           Return CType(MyBase.OriginalValue, AlmacenesObject)
        End Function


        Private Sub HydrateFields(ByVal IdAlmacen As System.Int32, _
			ByVal Almacen As System.String) Implements IMappeableAlmacenesObject.HydrateFields        
        	_IdAlmacen = IdAlmacen
			_Almacen = Almacen
        End Sub

        Private Function GetFieldsForInsert() As Object() Implements IMappeableAlmacenesObject.GetFieldsForInsert
        
        
            Dim _myArray(1) As Object
            _myArray(0) = _IdAlmacen
			If (Not System.String.IsNullOrEmpty(_Almacen)) Then _myArray(1) = _Almacen
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForUpdate() As Object() Implements IMappeableAlmacenesObject.GetFieldsForUpdate
        
        
            
            Dim _myArray(1) As Object
            _myArray(0) = _IdAlmacen
			If (Not System.String.IsNullOrEmpty(_Almacen)) Then _myArray(1) = _Almacen
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForDelete() As Object() Implements IMappeableAlmacenesObject.GetFieldsForDelete
        
            Dim _myArray(0) As Object
            _myArray(0) = _IdAlmacen
			
            Return _myArray
        
        End Function


        Private Sub UpdateObjectFromOutputParams(parameters As Object()) Implements IMappeableAlmacenesObject.UpdateObjectFromOutputParams
            ' Update properties from Output parameters
            _IdAlmacen = CType(parameters(0), System.Int32)

        End Sub

        Private Function Identifier() As Object() Implements IUniqueIdentifiable.Identifier
            Dim o As AlmacenesObject = Nothing
            If ObjectStateHelper.IsModified(Me) Then
                o = Me.OriginalValue()
            Else
                o = Me
            End If

            Return New Object() {o.IdAlmacen}
        End Function


        Public Overloads Function Equals(other As AlmacenesObject) As Boolean Implements IEquatable(Of AlmacenesObject).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function


    End Class

    Public Interface IMappeableAlmacenesObject
        Sub HydrateFields( ByVal IdAlmacen As System.Int32, _
				 ByVal Almacen As System.String)

        Function GetFieldsForInsert() As Object() 

        Function GetFieldsForUpdate() As Object() 

        Function GetFieldsForDelete() As Object()

        Sub UpdateObjectFromOutputParams(ByVal parameters As Object() )
    End Interface

    Public Partial Class AlmacenesObjectList
        Inherits ObjectList(Of AlmacenesObject)
    End Class
End Namespace

Namespace Views
    Partial Public Class AlmacenesObjectListView
        Inherits ObjectListView(Of Objects.AlmacenesObject)

        Sub New(ByVal list As Objects.AlmacenesObjectList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


