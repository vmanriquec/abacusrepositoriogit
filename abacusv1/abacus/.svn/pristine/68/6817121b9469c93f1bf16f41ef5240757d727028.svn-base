
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:50 p.m.
' This is a Partial class file. The other one is rutaObject.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports Cooperator.Framework.Core
Imports System

Namespace Objects

    Public Partial Class rutaObject
        Inherits BaseObject
        Implements IMappeablerutaObject
        Implements IUniqueIdentifiable
        Implements IEquatable(Of rutaObject)
        Implements ICloneable

#Region "Ctor"

        Public Sub New()
            MyBase.New()

			_Idruta =  ValuesGenerator.GetInt32

        End Sub

        
        Public Sub New(ByVal Idruta As System.Int32)
            MyBase.New()

			_Idruta = Idruta

            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal Idruta As System.Int32, _
			ByVal codigoruta As System.String, _
			ByVal nombreruta As System.String, _
			ByVal observacionruta As System.String, _
			ByVal iddistrito As System.Nullable(Of System.Int32), _
			ByVal DistritosString As System.String)
            MyBase.New()

			_Idruta = Idruta
			_codigoruta = codigoruta
			_nombreruta = nombreruta
			_observacionruta = observacionruta
			_iddistrito = iddistrito
			_DistritosString = DistritosString

            Call Initialized()
        End Sub
        

#End Region

#Region "Events"

        
        Public Event Update_DistritosString(ByVal sender As Object, ByVal e As DescriptionFieldEventArg)
        
#End Region

#Region "Fields"

        Protected _Idruta As System.Int32
Protected _codigoruta As System.String
Protected _nombreruta As System.String
Protected _observacionruta As System.String
Protected _iddistrito As System.Nullable(Of System.Int32) 
Protected _DistritosString As System.String

#End Region

#Region "Properties"
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable ReadOnly Property Idruta As System.Int32
            Get
                Return _Idruta
            End Get
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property codigoruta As System.String
            Get
                Return _codigoruta
            End Get
            
            Set
                MyBase.PropertyModified()
                _codigoruta = value
                
            End Set
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property nombreruta As System.String
            Get
                Return _nombreruta
            End Get
            
            Set
                MyBase.PropertyModified()
                _nombreruta = value
                
            End Set
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property observacionruta As System.String
            Get
                Return _observacionruta
            End Get
            
            Set
                MyBase.PropertyModified()
                _observacionruta = value
                
            End Set
            
        End Property
        
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property iddistrito As System.Nullable(Of System.Int32) 
            Get        
                Return _iddistrito
            End Get
            
            Set
                MyBase.PropertyModified()
                _iddistrito = value
                
                   If value.HasValue Then 
                    Dim e As DescriptionFieldEventArg = New DescriptionFieldEventArg(New DistritosObject (_iddistrito.Value))
                    RaiseEvent Update_DistritosString(Me, e)
                    _DistritosString = e.DescriptionString
                   End If 
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable ReadOnly Property DistritosString As System.String
            Get
                Return _DistritosString
            End Get
            
        End Property
        
        #End Region

        

        Protected Overrides Sub SetOriginalValue()
            MyBase.InternalOriginalValue = CType(Me.MemberwiseClone(), IObject)
        End Sub

        Protected Overridable Function Clone() As Object Implements ICloneable.Clone
            Dim newObject As rutaObject 
            Dim newOriginalValue As rutaObject 

            newObject = CType(Me.MemberwiseClone(), rutaObject) 
            If (MyBase.InternalOriginalValue IsNot Nothing) Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), rutaObject)
                newObject.InternalOriginalValue = newOriginalValue
            End If
            Return newObject
        End Function


        ''' <summary>
        ''' Returns de original value of object since was created or restored.
        ''' </summary>
        Public Shadows Function OriginalValue() As rutaObject 
           Return CType(MyBase.OriginalValue, rutaObject)
        End Function


        Private Sub HydrateFields(ByVal Idruta As System.Int32, _
			ByVal codigoruta As System.String, _
			ByVal nombreruta As System.String, _
			ByVal observacionruta As System.String, _
			ByVal iddistrito As System.Nullable(Of System.Int32) , _
			ByVal DistritosString As System.String) Implements IMappeablerutaObject.HydrateFields        
        	_Idruta = Idruta
			_codigoruta = codigoruta
			_nombreruta = nombreruta
			_observacionruta = observacionruta
			_iddistrito = iddistrito
			_DistritosString = DistritosString
        End Sub

        Private Function GetFieldsForInsert() As Object() Implements IMappeablerutaObject.GetFieldsForInsert
        
        
            Dim _myArray(4) As Object
            _myArray(0) = _Idruta
			If (Not System.String.IsNullOrEmpty(_codigoruta)) Then _myArray(1) = _codigoruta
			If (Not System.String.IsNullOrEmpty(_nombreruta)) Then _myArray(2) = _nombreruta
			If (Not System.String.IsNullOrEmpty(_observacionruta)) Then _myArray(3) = _observacionruta
			If (_iddistrito.HasValue) Then _myArray(4) = _iddistrito.Value
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForUpdate() As Object() Implements IMappeablerutaObject.GetFieldsForUpdate
        
        
            
            Dim _myArray(4) As Object
            _myArray(0) = _Idruta
			If (Not System.String.IsNullOrEmpty(_codigoruta)) Then _myArray(1) = _codigoruta
			If (Not System.String.IsNullOrEmpty(_nombreruta)) Then _myArray(2) = _nombreruta
			If (Not System.String.IsNullOrEmpty(_observacionruta)) Then _myArray(3) = _observacionruta
			If (_iddistrito.HasValue) Then _myArray(4) = _iddistrito.Value
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForDelete() As Object() Implements IMappeablerutaObject.GetFieldsForDelete
        
            Dim _myArray(0) As Object
            _myArray(0) = _Idruta
			
            Return _myArray
        
        End Function


        Private Sub UpdateObjectFromOutputParams(parameters As Object()) Implements IMappeablerutaObject.UpdateObjectFromOutputParams
            ' Update properties from Output parameters
            _Idruta = CType(parameters(0), System.Int32)

        End Sub

        Private Function Identifier() As Object() Implements IUniqueIdentifiable.Identifier
            Dim o As rutaObject = Nothing
            If ObjectStateHelper.IsModified(Me) Then
                o = Me.OriginalValue()
            Else
                o = Me
            End If

            Return New Object() {o.Idruta}
        End Function


        Public Overloads Function Equals(other As rutaObject) As Boolean Implements IEquatable(Of rutaObject).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function


    End Class

    Public Interface IMappeablerutaObject
        Sub HydrateFields( ByVal Idruta As System.Int32, _
				 ByVal codigoruta As System.String, _
				 ByVal nombreruta As System.String, _
				 ByVal observacionruta As System.String, _
				 ByVal iddistrito As System.Nullable(Of System.Int32) , _
				 ByVal DistritosString As System.String)

        Function GetFieldsForInsert() As Object() 

        Function GetFieldsForUpdate() As Object() 

        Function GetFieldsForDelete() As Object()

        Sub UpdateObjectFromOutputParams(ByVal parameters As Object() )
    End Interface

    Public Partial Class rutaObjectList
        Inherits ObjectList(Of rutaObject)
    End Class
End Namespace

Namespace Views
    Partial Public Class rutaObjectListView
        Inherits ObjectListView(Of Objects.rutaObject)

        Sub New(ByVal list As Objects.rutaObjectList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


