
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is GuiasDetEntity.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports abacusRules.Objects


Imports Cooperator.Framework.Core
Imports Cooperator.Framework.Core.LazyLoad
Imports System

Namespace Entities

    Public Partial Class GuiasDet
        Inherits Objects.GuiasDetObject
        Implements IMappeableGuiasDet
        Implements IEquatable(Of GuiasDet)
        Implements ICloneable

        #Region "Ctor"

        Public Sub New()
            MyBase.New()
            
        End Sub

        
        Public Sub New (ByVal IdGuiasDet As System.Int32)
            MyBase.New()

			_IdGuiasDet = IdGuiasDet

            
            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdGuiasDet As System.Int32, _
			ByVal IdProducto As System.Nullable(Of System.Int32), _
			ByVal Cantidad As System.Nullable(Of System.Int32), _
			ByVal UMedida As System.String, _
			ByVal Peso As System.String, _
			ByVal Serie As System.String, _
			ByVal Codigo As System.String, _
			ByVal IdGuias As System.Nullable(Of System.Int32), _
			ByVal IdTienda As System.Nullable(Of System.Int32), _
			ByVal GuiasString As System.String, _
			ByVal ProductosString As System.String)
            MyBase.New()

			_IdGuiasDet = IdGuiasDet
			_IdProducto = IdProducto
			_Cantidad = Cantidad
			_UMedida = UMedida
			_Peso = Peso
			_Serie = Serie
			_Codigo = Codigo
			_IdGuias = IdGuias
			_IdTienda = IdTienda
			_GuiasString = GuiasString
			_ProductosString = ProductosString

            
            Call Initialized()
        End Sub
        
        #End Region

        #Region "Fields"

        Protected  _GuiasEntity As Objects.GuiasObject
Protected  _ProductosEntity As Objects.ProductosObject

        #End Region

        #Region "Properties"
        
Dim _GuiasEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property GuiasEntity As Objects.GuiasObject
            Get
                If _GuiasEntity Is Nothing  AndAlso Me.IdGuias.HasValue AndAlso Not _GuiasEntityFetched  Then
_GuiasEntityFetched = True
Dim _GuiasEntityTemp As Objects.GuiasObject = New Objects.GuiasObject(Me.IdGuias.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.GuiasObject))
 _GuiasEntity = CType(lazyProvider.GetEntity(GetType(Objects.GuiasObject), _GuiasEntityTemp), Objects.GuiasObject)
End If

                Return _GuiasEntity
            End Get
            Set (value As Objects.GuiasObject)
                MyBase.PropertyModified()
                _GuiasEntity = value
                If value IsNot Nothing Then
   _IdGuias = value.IdGuias
If value.SGuia IsNot Nothing Then 
_GuiasString = value.SGuia.ToString() 
Else
    _GuiasString = "" 
End If

Else 
   _IdGuias = Nothing
_GuiasString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
Dim _ProductosEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property ProductosEntity As Objects.ProductosObject
            Get
                If _ProductosEntity Is Nothing  AndAlso Me.IdProducto.HasValue AndAlso Not _ProductosEntityFetched  Then
_ProductosEntityFetched = True
Dim _ProductosEntityTemp As Objects.ProductosObject = New Objects.ProductosObject(Me.IdProducto.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.ProductosObject))
 _ProductosEntity = CType(lazyProvider.GetEntity(GetType(Objects.ProductosObject), _ProductosEntityTemp), Objects.ProductosObject)
End If

                Return _ProductosEntity
            End Get
            Set (value As Objects.ProductosObject)
                MyBase.PropertyModified()
                _ProductosEntity = value
                If value IsNot Nothing Then
   _IdProducto = value.IdProducto
If value.CodProducto IsNot Nothing Then 
_ProductosString = value.CodProducto.ToString() 
Else
    _ProductosString = "" 
End If

Else 
   _IdProducto = Nothing
_ProductosString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
        #End Region

        ''' <summary>
        ''' Returns de original value of entity since was created or restored. 
        ''' </summary>
        Public Shadows Function OriginalValue() As GuiasDet 
                Return CType(MyBase.OriginalValue, GuiasDet)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Protected Overrides Function Clone() As Object 
            Dim newObject As GuiasDet 
            

            newObject = CType(Me.MemberwiseClone(), GuiasDet)
            ' Entities
                         
            If Me._GuiasEntity IsNot Nothing Then
                newObject._GuiasEntity = CType(CType(Me._GuiasEntity, ICloneable).Clone(),Objects.GuiasObject)
            End If
                         
            If Me._ProductosEntity IsNot Nothing Then
                newObject._ProductosEntity = CType(CType(Me._ProductosEntity, ICloneable).Clone(),Objects.ProductosObject)
            End If
            
            ' Colections
            
            ' OriginalValue
            Dim newOriginalValue As GuiasDet
            If MyBase.InternalOriginalValue IsNot Nothing Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), GuiasDet)
                ' Entities
                             
                If Me.OriginalValue()._GuiasEntity IsNot Nothing Then
                    newOriginalValue._GuiasEntity = CType(CType(Me.OriginalValue()._GuiasEntity, ICloneable).Clone(), Objects.GuiasObject)
                End If
                             
                If Me.OriginalValue()._ProductosEntity IsNot Nothing Then
                    newOriginalValue._ProductosEntity = CType(CType(Me.OriginalValue()._ProductosEntity, ICloneable).Clone(), Objects.ProductosObject)
                End If
                
                ' Colections
                            
                newObject.InternalOriginalValue = newOriginalValue

            End If
            Return newObject
        End Function



        Private Sub CompleteEntity(GuiasEntity As Objects.GuiasObject, ProductosEntity As Objects.ProductosObject) Implements IMappeableGuiasDet.CompleteEntity
        _GuiasEntity = GuiasEntity
_ProductosEntity = ProductosEntity
        End Sub

        
        Private Function IsGuiasEntityNull() As Boolean Implements IMappeableGuiasDet.IsGuiasEntityNull
            Return IsNothing(_GuiasEntity)
        End Function
        
        Private Function IsProductosEntityNull() As Boolean Implements IMappeableGuiasDet.IsProductosEntityNull
            Return IsNothing(_ProductosEntity)
        End Function
        

        Private Sub SetFKValuesForChilds(entity As GuiasDet) Implements IMappeableGuiasDet.SetFKValuesForChilds
                
        End Sub

        Public Overloads Function Equals(other As GuiasDet) As Boolean Implements IEquatable(Of GuiasDet).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function

    End Class

    Public Interface IMappeableGuiasDet
        Sub CompleteEntity(GuiasEntity As Objects.GuiasObject, ProductosEntity As Objects.ProductosObject)
        
        Function IsGuiasEntityNull() As Boolean
        
        Function IsProductosEntityNull() As Boolean
        
        Sub SetFKValuesForChilds(entity As GuiasDet )
    End Interface

    Public Partial Class GuiasDetList
        Inherits ObjectList(Of GuiasDet)    
    End Class
End Namespace

Namespace Views
    Partial Public Class GuiasDetListView
        Inherits ObjectListView(Of Entities.GuiasDet)

        Sub New(ByVal list As Entities.GuiasDetList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


