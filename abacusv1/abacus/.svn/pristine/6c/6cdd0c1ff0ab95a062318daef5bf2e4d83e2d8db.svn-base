
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is GuiasDetGateway.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web

Namespace Gateways
        
    Public Partial Class GuiasDetGateway 
        Inherits BaseGateway(Of GuiasDetObject, GuiasDetObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As GuiasDetGateway

        Private Sub New()
        End Sub

        Public Shared Function Instance() As GuiasDetGateway
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New GuiasDetGateway()
                Else
                    Dim inst As GuiasDetGateway = TryCast(HttpContext.Current.Items("abacusRules.GuiasDetGatewaySingleton"), GuiasDetGateway)
                    If inst Is Nothing Then
                        inst = New GuiasDetGateway()
                        HttpContext.Current.Items.Add("abacusRules.GuiasDetGatewaySingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region

        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String
            Get
                Return "GuiasDet"
            End Get
        End Property

        ''' <summary>
        ''' Return the GuiasDetGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(GuiasDetGateway ).FullName
            End Get
        End Property


        

        


        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As GuiasDetObject )
            Dim _IdProducto As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdProducto = New System.Nullable(Of System.Int32)
Else
	 _IdProducto = reader.GetInt32(1)
End If
Dim _Cantidad As System.Nullable(Of System.Int32) 
If reader.IsDBNull(2) Then 
	 _Cantidad = New System.Nullable(Of System.Int32)
Else
	 _Cantidad = reader.GetInt32(2)
End If
Dim _UMedida As String
If reader.IsDBNull(3) Then 
	 _UMedida = ""
Else
	 _UMedida = reader.GetString(3)
End If
Dim _Peso As String
If reader.IsDBNull(4) Then 
	 _Peso = ""
Else
	 _Peso = reader.GetString(4)
End If
Dim _Serie As String
If reader.IsDBNull(5) Then 
	 _Serie = ""
Else
	 _Serie = reader.GetString(5)
End If
Dim _Codigo As String
If reader.IsDBNull(6) Then 
	 _Codigo = ""
Else
	 _Codigo = reader.GetString(6)
End If
Dim _IdGuias As System.Nullable(Of System.Int32) 
If reader.IsDBNull(7) Then 
	 _IdGuias = New System.Nullable(Of System.Int32)
Else
	 _IdGuias = reader.GetInt32(7)
End If
Dim _IdTienda As System.Nullable(Of System.Int32) 
If reader.IsDBNull(8) Then 
	 _IdTienda = New System.Nullable(Of System.Int32)
Else
	 _IdTienda = reader.GetInt32(8)
End If
Dim _GuiasString As String
If reader.IsDBNull(9) Then 
	 _GuiasString = ""
Else
	 _GuiasString = reader.GetString(9)
End If
Dim _ProductosString As String
If reader.IsDBNull(10) Then 
	 _ProductosString = ""
Else
	 _ProductosString = reader.GetString(10)
End If

            Dim GuiasDet As IMappeableGuiasDetObject  = CType(entity, IMappeableGuiasDetObject)
            GuiasDet.HydrateFields(reader.GetInt32(0), _
_IdProducto, _
_Cantidad, _
_UMedida, _
_Peso, _
_Serie, _
_Codigo, _
_IdGuias, _
_IdTienda, _
_GuiasString, _
_ProductosString)
            CType(entity, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As GuiasDetObject) As Object()
            Dim GuiasDet As IMappeableGuiasDetObject = CType(entity, IMappeableGuiasDetObject)
            Return GuiasDet.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As GuiasDetObject) As Object()
            Dim GuiasDet As IMappeableGuiasDetObject = CType(entity, IMappeableGuiasDetObject)
            Return GuiasDet.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As GuiasDetObject) As Object()
            Dim GuiasDet As IMappeableGuiasDetObject = CType(entity, IMappeableGuiasDetObject)
            Return GuiasDet.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal row As GuiasDetObject, parameters As Object())
            ' Update properties from Output parameters
            CType(row, IMappeableGuiasDetObject).UpdateObjectFromOutputParams(parameters)
            CType(row, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String
            Return "coop_"
        End Function


        ''' <summary>
        ''' Get a GuiasDetObject by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As GuiasDetObject 
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a GuiasDetObjectList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As GuiasDetObjectList 
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function



        ''' <summary>
        ''' Get a GuiasDetObject by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdGuiasDet As System.Int32) As GuiasDetObject         
            Return MyBase.GetOne(New GuiasDetObject(IdGuiasDet))
        End Function

            


        
        ''' <summary>
        ''' Get a GuiasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByGuias(ByVal transaction As DbTransaction, ByVal IdGuias As System.Int32) As GuiasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "GuiasDet_GetByGuias", IdGuias)
        End Function

        ''' <summary>
        ''' Get a GuiasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByGuias(ByVal transaction As DbTransaction, Guias As IUniqueIdentifiable) As GuiasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "GuiasDet_GetByGuias", Guias.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a GuiasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProductos(ByVal transaction As DbTransaction, ByVal IdProducto As System.Int32) As GuiasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "GuiasDet_GetByProductos", IdProducto)
        End Function

        ''' <summary>
        ''' Get a GuiasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProductos(ByVal transaction As DbTransaction, Productos As IUniqueIdentifiable) As GuiasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "GuiasDet_GetByProductos", Productos.Identifier())
        End Function
    


        
        ''' <summary>
        ''' Get a GuiasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByGuias(ByVal IdGuias As System.Int32) As GuiasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "GuiasDet_GetByGuias", IdGuias)
        End Function

        ''' <summary>
        ''' Get a GuiasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByGuias(Guias As IUniqueIdentifiable) As GuiasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "GuiasDet_GetByGuias", Guias.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a GuiasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProductos(ByVal IdProducto As System.Int32) As GuiasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "GuiasDet_GetByProductos", IdProducto)
        End Function

        ''' <summary>
        ''' Get a GuiasDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProductos(Productos As IUniqueIdentifiable) As GuiasDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "GuiasDet_GetByProductos", Productos.Identifier())
        End Function
    

        
        ''' <summary>
        ''' Delete GuiasDet 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdGuiasDet As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "GuiasDet_Delete", IdGuiasDet)
        End Sub

        ''' <summary>
        ''' Delete GuiasDet
        ''' </summary>
        Public Overloads Sub Delete(transaction As DbTransaction , ByVal IdGuiasDet As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "GuiasDet_Delete", IdGuiasDet)
        End Sub

            



        

    

    

    

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' Delete GuiasDet By Guias
        ''' </summary>
        Public Overloads Sub DeleteByGuias(ByVal IdGuias As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "GuiasDet_DeleteByGuias", IdGuias)
        End Sub

        ''' <summary>
        ''' Delete GuiasDet By Guias
        ''' </summary>
        Public Overloads Sub DeleteByGuias(ByVal transaction As DbTransaction , ByVal IdGuias As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "GuiasDet_DeleteByGuias", IdGuias)
        End Sub

        ''' <summary>
        ''' Delete GuiasDet By Guias
        ''' </summary>
        Public Overloads Sub DeleteByGuias(ByVal Guias As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "GuiasDet_DeleteByGuias", Guias.Identifier())
        End Sub

        ''' <summary>
        ''' Delete GuiasDet By Guias
        ''' </summary>
        Public Overloads Sub DeleteByGuias(ByVal transaction As DbTransaction , ByVal Guias As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "GuiasDet_DeleteByGuias", Guias.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' Delete GuiasDet By Productos
        ''' </summary>
        Public Overloads Sub DeleteByProductos(ByVal IdProducto As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "GuiasDet_DeleteByProductos", IdProducto)
        End Sub

        ''' <summary>
        ''' Delete GuiasDet By Productos
        ''' </summary>
        Public Overloads Sub DeleteByProductos(ByVal transaction As DbTransaction , ByVal IdProducto As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "GuiasDet_DeleteByProductos", IdProducto)
        End Sub

        ''' <summary>
        ''' Delete GuiasDet By Productos
        ''' </summary>
        Public Overloads Sub DeleteByProductos(ByVal Productos As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "GuiasDet_DeleteByProductos", Productos.Identifier())
        End Sub

        ''' <summary>
        ''' Delete GuiasDet By Productos
        ''' </summary>
        Public Overloads Sub DeleteByProductos(ByVal transaction As DbTransaction , ByVal Productos As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "GuiasDet_DeleteByProductos", Productos.Identifier())
        End Sub

        

    


        'Database Queries 
        



        #Region "IGenericGateway"

        Private Function GetOne2(identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GeyByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class
End Namespace




