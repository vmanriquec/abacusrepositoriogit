
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is CotizacionGateway.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web

Namespace Gateways
        
    Public Partial Class CotizacionGateway 
        Inherits BaseGateway(Of CotizacionObject, CotizacionObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As CotizacionGateway

        Private Sub New()
        End Sub

        Public Shared Function Instance() As CotizacionGateway
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New CotizacionGateway()
                Else
                    Dim inst As CotizacionGateway = TryCast(HttpContext.Current.Items("abacusRules.CotizacionGatewaySingleton"), CotizacionGateway)
                    If inst Is Nothing Then
                        inst = New CotizacionGateway()
                        HttpContext.Current.Items.Add("abacusRules.CotizacionGatewaySingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region

        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String
            Get
                Return "Cotizacion"
            End Get
        End Property

        ''' <summary>
        ''' Return the CotizacionGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(CotizacionGateway ).FullName
            End Get
        End Property


        

        


        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As CotizacionObject )
            Dim _IdTrabjador As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdTrabjador = New System.Nullable(Of System.Int32)
Else
	 _IdTrabjador = reader.GetInt32(1)
End If
Dim _A単o As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(2) Then 
	 _A単o = New System.Nullable(Of System.DateTime)
Else
	 _A単o = reader.GetDateTime(2)
End If
Dim _Numero As System.Nullable(Of System.Int32) 
If reader.IsDBNull(3) Then 
	 _Numero = New System.Nullable(Of System.Int32)
Else
	 _Numero = reader.GetInt32(3)
End If
Dim _IdCliente As System.Nullable(Of System.Int32) 
If reader.IsDBNull(4) Then 
	 _IdCliente = New System.Nullable(Of System.Int32)
Else
	 _IdCliente = reader.GetInt32(4)
End If
Dim _FPago As System.Nullable(Of System.Int32) 
If reader.IsDBNull(5) Then 
	 _FPago = New System.Nullable(Of System.Int32)
Else
	 _FPago = reader.GetInt32(5)
End If
Dim _FecEmision As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(6) Then 
	 _FecEmision = New System.Nullable(Of System.DateTime)
Else
	 _FecEmision = reader.GetDateTime(6)
End If
Dim _Referencia As String
If reader.IsDBNull(7) Then 
	 _Referencia = ""
Else
	 _Referencia = reader.GetString(7)
End If
Dim _Atencion As String
If reader.IsDBNull(8) Then 
	 _Atencion = ""
Else
	 _Atencion = reader.GetString(8)
End If
Dim _Moneda As String
If reader.IsDBNull(9) Then 
	 _Moneda = ""
Else
	 _Moneda = reader.GetString(9)
End If
Dim _TC As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(10) Then 
	 _TC = New System.Nullable(Of System.Decimal)
Else
	 _TC = reader.GetDecimal(10)
End If
Dim _Garantia As String
If reader.IsDBNull(11) Then 
	 _Garantia = ""
Else
	 _Garantia = reader.GetString(11)
End If
Dim _TiempoEntrega As String
If reader.IsDBNull(12) Then 
	 _TiempoEntrega = ""
Else
	 _TiempoEntrega = reader.GetString(12)
End If
Dim _IdVendedor As System.Nullable(Of System.Int32) 
If reader.IsDBNull(13) Then 
	 _IdVendedor = New System.Nullable(Of System.Int32)
Else
	 _IdVendedor = reader.GetInt32(13)
End If
Dim _Nota As String
If reader.IsDBNull(14) Then 
	 _Nota = ""
Else
	 _Nota = reader.GetString(14)
End If
Dim _upsize_ts As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(15) Then 
	 _upsize_ts = New System.Nullable(Of System.DateTime)
Else
	 _upsize_ts = reader.GetDateTime(15)
End If
Dim _ClientesString As String
If reader.IsDBNull(16) Then 
	 _ClientesString = ""
Else
	 _ClientesString = reader.GetString(16)
End If
Dim _TrabajadoresString As String
If reader.IsDBNull(17) Then 
	 _TrabajadoresString = ""
Else
	 _TrabajadoresString = reader.GetString(17)
End If

            Dim Cotizacion As IMappeableCotizacionObject  = CType(entity, IMappeableCotizacionObject)
            Cotizacion.HydrateFields(reader.GetInt32(0), _
_IdTrabjador, _
_A単o, _
_Numero, _
_IdCliente, _
_FPago, _
_FecEmision, _
_Referencia, _
_Atencion, _
_Moneda, _
_TC, _
_Garantia, _
_TiempoEntrega, _
_IdVendedor, _
_Nota, _
_upsize_ts, _
_ClientesString, _
_TrabajadoresString)
            CType(entity, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As CotizacionObject) As Object()
            Dim Cotizacion As IMappeableCotizacionObject = CType(entity, IMappeableCotizacionObject)
            Return Cotizacion.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As CotizacionObject) As Object()
            Dim Cotizacion As IMappeableCotizacionObject = CType(entity, IMappeableCotizacionObject)
            Return Cotizacion.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As CotizacionObject) As Object()
            Dim Cotizacion As IMappeableCotizacionObject = CType(entity, IMappeableCotizacionObject)
            Return Cotizacion.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal row As CotizacionObject, parameters As Object())
            ' Update properties from Output parameters
            CType(row, IMappeableCotizacionObject).UpdateObjectFromOutputParams(parameters)
            CType(row, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String
            Return "coop_"
        End Function


        ''' <summary>
        ''' Get a CotizacionObject by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As CotizacionObject 
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a CotizacionObjectList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As CotizacionObjectList 
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function



        ''' <summary>
        ''' Get a CotizacionObject by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdCoti As System.Int32) As CotizacionObject         
            Return MyBase.GetOne(New CotizacionObject(IdCoti))
        End Function

            


        
        ''' <summary>
        ''' Get a CotizacionObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal transaction As DbTransaction, ByVal IdCliente As System.Int32) As CotizacionObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_GetByClientes", IdCliente)
        End Function

        ''' <summary>
        ''' Get a CotizacionObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal transaction As DbTransaction, Clientes As IUniqueIdentifiable) As CotizacionObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_GetByClientes", Clientes.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a CotizacionObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction, ByVal IdTrabjador As System.Int32) As CotizacionObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' Get a CotizacionObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction, Trabajadores As IUniqueIdentifiable) As CotizacionObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_GetByTrabajadores", Trabajadores.Identifier())
        End Function
    


        
        ''' <summary>
        ''' Get a CotizacionObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal IdCliente As System.Int32) As CotizacionObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByClientes", IdCliente)
        End Function

        ''' <summary>
        ''' Get a CotizacionObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByClientes(Clientes As IUniqueIdentifiable) As CotizacionObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByClientes", Clientes.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a CotizacionObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal IdTrabjador As System.Int32) As CotizacionObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' Get a CotizacionObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(Trabajadores As IUniqueIdentifiable) As CotizacionObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByTrabajadores", Trabajadores.Identifier())
        End Function
    

        
        ''' <summary>
        ''' Delete Cotizacion 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdCoti As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Cotizacion_Delete", IdCoti)
        End Sub

        ''' <summary>
        ''' Delete Cotizacion
        ''' </summary>
        Public Overloads Sub Delete(transaction As DbTransaction , ByVal IdCoti As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_Delete", IdCoti)
        End Sub

            



        

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' Delete Cotizacion By Clientes
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal IdCliente As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Cotizacion_DeleteByClientes", IdCliente)
        End Sub

        ''' <summary>
        ''' Delete Cotizacion By Clientes
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal transaction As DbTransaction , ByVal IdCliente As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_DeleteByClientes", IdCliente)
        End Sub

        ''' <summary>
        ''' Delete Cotizacion By Clientes
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal Clientes As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Cotizacion_DeleteByClientes", Clientes.Identifier())
        End Sub

        ''' <summary>
        ''' Delete Cotizacion By Clientes
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal transaction As DbTransaction , ByVal Clientes As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_DeleteByClientes", Clientes.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' Delete Cotizacion By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Cotizacion_DeleteByTrabajadores", IdTrabjador)
        End Sub

        ''' <summary>
        ''' Delete Cotizacion By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal transaction As DbTransaction , ByVal IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_DeleteByTrabajadores", IdTrabjador)
        End Sub

        ''' <summary>
        ''' Delete Cotizacion By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal Trabajadores As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Cotizacion_DeleteByTrabajadores", Trabajadores.Identifier())
        End Sub

        ''' <summary>
        ''' Delete Cotizacion By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal transaction As DbTransaction , ByVal Trabajadores As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_DeleteByTrabajadores", Trabajadores.Identifier())
        End Sub

        

    


        'Database Queries 
        



        #Region "IGenericGateway"

        Private Function GetOne2(identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GeyByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class
End Namespace




