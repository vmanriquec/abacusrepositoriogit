
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is ClientesEntity.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports abacusRules.Objects


Imports Cooperator.Framework.Core
Imports Cooperator.Framework.Core.LazyLoad
Imports System

Namespace Entities

    Public Partial Class Clientes
        Inherits Objects.ClientesObject
        Implements IMappeableClientes
        Implements IEquatable(Of Clientes)
        Implements ICloneable

        #Region "Ctor"

        Public Sub New()
            MyBase.New()
            
        End Sub

        
        Public Sub New (ByVal IdCliente As System.Int32)
            MyBase.New()

			_IdCliente = IdCliente

            
            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdCliente As System.Int32, _
			ByVal TipoCliente As System.Nullable(Of System.Int32), _
			ByVal Nombre As System.String, _
			ByVal Apellido As System.String, _
			ByVal Cliente As System.String, _
			ByVal NomComercial As System.String, _
			ByVal TipoDI As System.Nullable(Of System.Int32), _
			ByVal DI As System.String, _
			ByVal Direccion As System.String, _
			ByVal Distrito As System.Nullable(Of System.Int32), _
			ByVal Provincia As System.Nullable(Of System.Int32), _
			ByVal Pais As System.String, _
			ByVal Telefono1 As System.String, _
			ByVal Telefono2 As System.String, _
			ByVal Fax As System.String, _
			ByVal Email As System.String, _
			ByVal Logo As System.String, _
			ByVal Movil As System.String, _
			ByVal TipMovil As System.String, _
			ByVal Observaciones As System.String, _
			ByVal CodCliente As System.String, _
			ByVal CondPago As System.Nullable(Of System.Int32), _
			ByVal Ruta As System.String, _
			ByVal fechaderegistro As System.Nullable(Of System.DateTime), _
			ByVal estadocliente As System.String, _
			ByVal DistritosString As System.String, _
			ByVal ProvinciasString As System.String)
            MyBase.New()

			_IdCliente = IdCliente
			_TipoCliente = TipoCliente
			_Nombre = Nombre
			_Apellido = Apellido
			_Cliente = Cliente
			_NomComercial = NomComercial
			_TipoDI = TipoDI
			_DI = DI
			_Direccion = Direccion
			_Distrito = Distrito
			_Provincia = Provincia
			_Pais = Pais
			_Telefono1 = Telefono1
			_Telefono2 = Telefono2
			_Fax = Fax
			_Email = Email
			_Logo = Logo
			_Movil = Movil
			_TipMovil = TipMovil
			_Observaciones = Observaciones
			_CodCliente = CodCliente
			_CondPago = CondPago
			_Ruta = Ruta
			_fechaderegistro = fechaderegistro
			_estadocliente = estadocliente
			_DistritosString = DistritosString
			_ProvinciasString = ProvinciasString

            
            Call Initialized()
        End Sub
        
        #End Region

        #Region "Fields"

        Protected  _DistritosEntity As Objects.DistritosObject
Protected  _ProvinciasEntity As Objects.ProvinciasObject

        #End Region

        #Region "Properties"
        
Dim _DistritosEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property DistritosEntity As Objects.DistritosObject
            Get
                If _DistritosEntity Is Nothing  AndAlso Me.Distrito.HasValue AndAlso Not _DistritosEntityFetched  Then
_DistritosEntityFetched = True
Dim _DistritosEntityTemp As Objects.DistritosObject = New Objects.DistritosObject(Me.Distrito.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.DistritosObject))
 _DistritosEntity = CType(lazyProvider.GetEntity(GetType(Objects.DistritosObject), _DistritosEntityTemp), Objects.DistritosObject)
End If

                Return _DistritosEntity
            End Get
            Set (value As Objects.DistritosObject)
                MyBase.PropertyModified()
                _DistritosEntity = value
                If value IsNot Nothing Then
   _Distrito = value.IdDistrito
If value.Distrito IsNot Nothing Then 
_DistritosString = value.Distrito.ToString() 
Else
    _DistritosString = "" 
End If

Else 
   _Distrito = Nothing
_DistritosString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
Dim _ProvinciasEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property ProvinciasEntity As Objects.ProvinciasObject
            Get
                If _ProvinciasEntity Is Nothing  AndAlso Me.Provincia.HasValue AndAlso Not _ProvinciasEntityFetched  Then
_ProvinciasEntityFetched = True
Dim _ProvinciasEntityTemp As Objects.ProvinciasObject = New Objects.ProvinciasObject(Me.Provincia.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.ProvinciasObject))
 _ProvinciasEntity = CType(lazyProvider.GetEntity(GetType(Objects.ProvinciasObject), _ProvinciasEntityTemp), Objects.ProvinciasObject)
End If

                Return _ProvinciasEntity
            End Get
            Set (value As Objects.ProvinciasObject)
                MyBase.PropertyModified()
                _ProvinciasEntity = value
                If value IsNot Nothing Then
   _Provincia = value.IdProvincia
If value.Provincia IsNot Nothing Then 
_ProvinciasString = value.Provincia.ToString() 
Else
    _ProvinciasString = "" 
End If

Else 
   _Provincia = Nothing
_ProvinciasString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
        #End Region

        ''' <summary>
        ''' Returns de original value of entity since was created or restored. 
        ''' </summary>
        Public Shadows Function OriginalValue() As Clientes 
                Return CType(MyBase.OriginalValue, Clientes)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Protected Overrides Function Clone() As Object 
            Dim newObject As Clientes 
            

            newObject = CType(Me.MemberwiseClone(), Clientes)
            ' Entities
                         
            If Me._DistritosEntity IsNot Nothing Then
                newObject._DistritosEntity = CType(CType(Me._DistritosEntity, ICloneable).Clone(),Objects.DistritosObject)
            End If
                         
            If Me._ProvinciasEntity IsNot Nothing Then
                newObject._ProvinciasEntity = CType(CType(Me._ProvinciasEntity, ICloneable).Clone(),Objects.ProvinciasObject)
            End If
            
            ' Colections
            
            ' OriginalValue
            Dim newOriginalValue As Clientes
            If MyBase.InternalOriginalValue IsNot Nothing Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), Clientes)
                ' Entities
                             
                If Me.OriginalValue()._DistritosEntity IsNot Nothing Then
                    newOriginalValue._DistritosEntity = CType(CType(Me.OriginalValue()._DistritosEntity, ICloneable).Clone(), Objects.DistritosObject)
                End If
                             
                If Me.OriginalValue()._ProvinciasEntity IsNot Nothing Then
                    newOriginalValue._ProvinciasEntity = CType(CType(Me.OriginalValue()._ProvinciasEntity, ICloneable).Clone(), Objects.ProvinciasObject)
                End If
                
                ' Colections
                            
                newObject.InternalOriginalValue = newOriginalValue

            End If
            Return newObject
        End Function



        Private Sub CompleteEntity(DistritosEntity As Objects.DistritosObject, ProvinciasEntity As Objects.ProvinciasObject) Implements IMappeableClientes.CompleteEntity
        _DistritosEntity = DistritosEntity
_ProvinciasEntity = ProvinciasEntity
        End Sub

        
        Private Function IsDistritosEntityNull() As Boolean Implements IMappeableClientes.IsDistritosEntityNull
            Return IsNothing(_DistritosEntity)
        End Function
        
        Private Function IsProvinciasEntityNull() As Boolean Implements IMappeableClientes.IsProvinciasEntityNull
            Return IsNothing(_ProvinciasEntity)
        End Function
        

        Private Sub SetFKValuesForChilds(entity As Clientes) Implements IMappeableClientes.SetFKValuesForChilds
                
        End Sub

        Public Overloads Function Equals(other As Clientes) As Boolean Implements IEquatable(Of Clientes).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function

    End Class

    Public Interface IMappeableClientes
        Sub CompleteEntity(DistritosEntity As Objects.DistritosObject, ProvinciasEntity As Objects.ProvinciasObject)
        
        Function IsDistritosEntityNull() As Boolean
        
        Function IsProvinciasEntityNull() As Boolean
        
        Sub SetFKValuesForChilds(entity As Clientes )
    End Interface

    Public Partial Class ClientesList
        Inherits ObjectList(Of Clientes)    
    End Class
End Namespace

Namespace Views
    Partial Public Class ClientesListView
        Inherits ObjectListView(Of Entities.Clientes)

        Sub New(ByVal list As Entities.ClientesList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


