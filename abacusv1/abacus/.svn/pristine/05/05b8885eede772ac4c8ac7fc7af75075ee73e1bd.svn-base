
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is ProductosEntity.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports abacusRules.Objects


Imports Cooperator.Framework.Core
Imports Cooperator.Framework.Core.LazyLoad
Imports System

Namespace Entities

    Public Partial Class Productos
        Inherits Objects.ProductosObject
        Implements IMappeableProductos
        Implements IEquatable(Of Productos)
        Implements ICloneable

        #Region "Ctor"

        Public Sub New()
            MyBase.New()
            
        End Sub

        
        Public Sub New (ByVal IdProducto As System.Int32)
            MyBase.New()

			_IdProducto = IdProducto

            
            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdProducto As System.Int32, _
			ByVal IdProveedor As System.Nullable(Of System.Int32), _
			ByVal Id_TipoProducto As System.Nullable(Of System.Int32), _
			ByVal CodProducto As System.String, _
			ByVal Producto As System.String, _
			ByVal TipoProducto As System.Nullable(Of System.Int32), _
			ByVal Capacidad As System.String, _
			ByVal UMedida As System.String, _
			ByVal NumParte As System.String, _
			ByVal Familia As System.Nullable(Of System.Int32), _
			ByVal Categoria As System.Nullable(Of System.Int32), _
			ByVal Observaciones As System.String, _
			ByVal IdProveedores As System.String, _
			ByVal ImagenProd As System.String, _
			ByVal PrecioCosto As System.Nullable(Of System.Decimal), _
			ByVal MonedaC As System.Nullable(Of System.Int32), _
			ByVal PrecioVenta As System.Nullable(Of System.Int32), _
			ByVal MonedaV As System.Nullable(Of System.Int32), _
			ByVal upsize_ts As System.Nullable(Of System.DateTime), _
			ByVal ProveedoresString As System.String, _
			ByVal TipoProductoString As System.String)
            MyBase.New()

			_IdProducto = IdProducto
			_IdProveedor = IdProveedor
			_Id_TipoProducto = Id_TipoProducto
			_CodProducto = CodProducto
			_Producto = Producto
			_TipoProducto = TipoProducto
			_Capacidad = Capacidad
			_UMedida = UMedida
			_NumParte = NumParte
			_Familia = Familia
			_Categoria = Categoria
			_Observaciones = Observaciones
			_IdProveedores = IdProveedores
			_ImagenProd = ImagenProd
			_PrecioCosto = PrecioCosto
			_MonedaC = MonedaC
			_PrecioVenta = PrecioVenta
			_MonedaV = MonedaV
			_upsize_ts = upsize_ts
			_ProveedoresString = ProveedoresString
			_TipoProductoString = TipoProductoString

            
            Call Initialized()
        End Sub
        
        #End Region

        #Region "Fields"

        Protected  _ProveedoresEntity As Objects.ProveedoresObject
Protected  _TipoProductoEntity As Objects.TipoProductoObject

        #End Region

        #Region "Properties"
        
Dim _ProveedoresEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property ProveedoresEntity As Objects.ProveedoresObject
            Get
                If _ProveedoresEntity Is Nothing  AndAlso Me.IdProveedor.HasValue AndAlso Not _ProveedoresEntityFetched  Then
_ProveedoresEntityFetched = True
Dim _ProveedoresEntityTemp As Objects.ProveedoresObject = New Objects.ProveedoresObject(Me.IdProveedor.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.ProveedoresObject))
 _ProveedoresEntity = CType(lazyProvider.GetEntity(GetType(Objects.ProveedoresObject), _ProveedoresEntityTemp), Objects.ProveedoresObject)
End If

                Return _ProveedoresEntity
            End Get
            Set (value As Objects.ProveedoresObject)
                MyBase.PropertyModified()
                _ProveedoresEntity = value
                If value IsNot Nothing Then
   _IdProveedor = value.IdProveedor
If value.Nombre IsNot Nothing Then 
_ProveedoresString = value.Nombre.ToString() 
Else
    _ProveedoresString = "" 
End If

Else 
   _IdProveedor = Nothing
_ProveedoresString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
Dim _TipoProductoEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property TipoProductoEntity As Objects.TipoProductoObject
            Get
                If _TipoProductoEntity Is Nothing  AndAlso Me.Id_TipoProducto.HasValue AndAlso Not _TipoProductoEntityFetched  Then
_TipoProductoEntityFetched = True
Dim _TipoProductoEntityTemp As Objects.TipoProductoObject = New Objects.TipoProductoObject(Me.Id_TipoProducto.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.TipoProductoObject))
 _TipoProductoEntity = CType(lazyProvider.GetEntity(GetType(Objects.TipoProductoObject), _TipoProductoEntityTemp), Objects.TipoProductoObject)
End If

                Return _TipoProductoEntity
            End Get
            Set (value As Objects.TipoProductoObject)
                MyBase.PropertyModified()
                _TipoProductoEntity = value
                If value IsNot Nothing Then
   _Id_TipoProducto = value.Id_TipoProducto
If value.TipoProducto IsNot Nothing Then 
_TipoProductoString = value.TipoProducto.ToString() 
Else
    _TipoProductoString = "" 
End If

Else 
   _Id_TipoProducto = Nothing
_TipoProductoString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
        #End Region

        ''' <summary>
        ''' Returns de original value of entity since was created or restored. 
        ''' </summary>
        Public Shadows Function OriginalValue() As Productos 
                Return CType(MyBase.OriginalValue, Productos)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Protected Overrides Function Clone() As Object 
            Dim newObject As Productos 
            

            newObject = CType(Me.MemberwiseClone(), Productos)
            ' Entities
                         
            If Me._ProveedoresEntity IsNot Nothing Then
                newObject._ProveedoresEntity = CType(CType(Me._ProveedoresEntity, ICloneable).Clone(),Objects.ProveedoresObject)
            End If
                         
            If Me._TipoProductoEntity IsNot Nothing Then
                newObject._TipoProductoEntity = CType(CType(Me._TipoProductoEntity, ICloneable).Clone(),Objects.TipoProductoObject)
            End If
            
            ' Colections
            
            ' OriginalValue
            Dim newOriginalValue As Productos
            If MyBase.InternalOriginalValue IsNot Nothing Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), Productos)
                ' Entities
                             
                If Me.OriginalValue()._ProveedoresEntity IsNot Nothing Then
                    newOriginalValue._ProveedoresEntity = CType(CType(Me.OriginalValue()._ProveedoresEntity, ICloneable).Clone(), Objects.ProveedoresObject)
                End If
                             
                If Me.OriginalValue()._TipoProductoEntity IsNot Nothing Then
                    newOriginalValue._TipoProductoEntity = CType(CType(Me.OriginalValue()._TipoProductoEntity, ICloneable).Clone(), Objects.TipoProductoObject)
                End If
                
                ' Colections
                            
                newObject.InternalOriginalValue = newOriginalValue

            End If
            Return newObject
        End Function



        Private Sub CompleteEntity(ProveedoresEntity As Objects.ProveedoresObject, TipoProductoEntity As Objects.TipoProductoObject) Implements IMappeableProductos.CompleteEntity
        _ProveedoresEntity = ProveedoresEntity
_TipoProductoEntity = TipoProductoEntity
        End Sub

        
        Private Function IsProveedoresEntityNull() As Boolean Implements IMappeableProductos.IsProveedoresEntityNull
            Return IsNothing(_ProveedoresEntity)
        End Function
        
        Private Function IsTipoProductoEntityNull() As Boolean Implements IMappeableProductos.IsTipoProductoEntityNull
            Return IsNothing(_TipoProductoEntity)
        End Function
        

        Private Sub SetFKValuesForChilds(entity As Productos) Implements IMappeableProductos.SetFKValuesForChilds
                
        End Sub

        Public Overloads Function Equals(other As Productos) As Boolean Implements IEquatable(Of Productos).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function

    End Class

    Public Interface IMappeableProductos
        Sub CompleteEntity(ProveedoresEntity As Objects.ProveedoresObject, TipoProductoEntity As Objects.TipoProductoObject)
        
        Function IsProveedoresEntityNull() As Boolean
        
        Function IsTipoProductoEntityNull() As Boolean
        
        Sub SetFKValuesForChilds(entity As Productos )
    End Interface

    Public Partial Class ProductosList
        Inherits ObjectList(Of Productos)    
    End Class
End Namespace

Namespace Views
    Partial Public Class ProductosListView
        Inherits ObjectListView(Of Entities.Productos)

        Sub New(ByVal list As Entities.ProductosList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


