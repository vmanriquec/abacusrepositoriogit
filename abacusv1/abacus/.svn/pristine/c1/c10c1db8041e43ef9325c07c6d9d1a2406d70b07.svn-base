
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:50 p.m.
' This is a Partial class file. The other one is cargopersonalObject.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports Cooperator.Framework.Core
Imports System

Namespace Objects

    Public Partial Class cargopersonalObject
        Inherits BaseObject
        Implements IMappeablecargopersonalObject
        Implements IUniqueIdentifiable
        Implements IEquatable(Of cargopersonalObject)
        Implements ICloneable

#Region "Ctor"

        Public Sub New()
            MyBase.New()

			_idcargopersonal =  ValuesGenerator.GetInt32

        End Sub

        
        Public Sub New(ByVal idcargopersonal As System.Int32)
            MyBase.New()

			_idcargopersonal = idcargopersonal

            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal idcargopersonal As System.Int32, _
			ByVal nombre As System.String)
            MyBase.New()

			_idcargopersonal = idcargopersonal
			_nombre = nombre

            Call Initialized()
        End Sub
        

#End Region

#Region "Events"

        
#End Region

#Region "Fields"

        Protected _idcargopersonal As System.Int32
Protected _nombre As System.String

#End Region

#Region "Properties"
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable ReadOnly Property idcargopersonal As System.Int32
            Get
                Return _idcargopersonal
            End Get
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property nombre As System.String
            Get
                Return _nombre
            End Get
            
            Set
                MyBase.PropertyModified()
                _nombre = value
                
            End Set
            
        End Property
        
        #End Region

        

        Protected Overrides Sub SetOriginalValue()
            MyBase.InternalOriginalValue = CType(Me.MemberwiseClone(), IObject)
        End Sub

        Protected Overridable Function Clone() As Object Implements ICloneable.Clone
            Dim newObject As cargopersonalObject 
            Dim newOriginalValue As cargopersonalObject 

            newObject = CType(Me.MemberwiseClone(), cargopersonalObject) 
            If (MyBase.InternalOriginalValue IsNot Nothing) Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), cargopersonalObject)
                newObject.InternalOriginalValue = newOriginalValue
            End If
            Return newObject
        End Function


        ''' <summary>
        ''' Returns de original value of object since was created or restored.
        ''' </summary>
        Public Shadows Function OriginalValue() As cargopersonalObject 
           Return CType(MyBase.OriginalValue, cargopersonalObject)
        End Function


        Private Sub HydrateFields(ByVal idcargopersonal As System.Int32, _
			ByVal nombre As System.String) Implements IMappeablecargopersonalObject.HydrateFields        
        	_idcargopersonal = idcargopersonal
			_nombre = nombre
        End Sub

        Private Function GetFieldsForInsert() As Object() Implements IMappeablecargopersonalObject.GetFieldsForInsert
        
        
            Dim _myArray(1) As Object
            _myArray(0) = _idcargopersonal
			If (Not System.String.IsNullOrEmpty(_nombre)) Then _myArray(1) = _nombre
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForUpdate() As Object() Implements IMappeablecargopersonalObject.GetFieldsForUpdate
        
        
            
            Dim _myArray(1) As Object
            _myArray(0) = _idcargopersonal
			If (Not System.String.IsNullOrEmpty(_nombre)) Then _myArray(1) = _nombre
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForDelete() As Object() Implements IMappeablecargopersonalObject.GetFieldsForDelete
        
            Dim _myArray(0) As Object
            _myArray(0) = _idcargopersonal
			
            Return _myArray
        
        End Function


        Private Sub UpdateObjectFromOutputParams(parameters As Object()) Implements IMappeablecargopersonalObject.UpdateObjectFromOutputParams
            ' Update properties from Output parameters
            _idcargopersonal = CType(parameters(0), System.Int32)

        End Sub

        Private Function Identifier() As Object() Implements IUniqueIdentifiable.Identifier
            Dim o As cargopersonalObject = Nothing
            If ObjectStateHelper.IsModified(Me) Then
                o = Me.OriginalValue()
            Else
                o = Me
            End If

            Return New Object() {o.idcargopersonal}
        End Function


        Public Overloads Function Equals(other As cargopersonalObject) As Boolean Implements IEquatable(Of cargopersonalObject).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function


    End Class

    Public Interface IMappeablecargopersonalObject
        Sub HydrateFields( ByVal idcargopersonal As System.Int32, _
				 ByVal nombre As System.String)

        Function GetFieldsForInsert() As Object() 

        Function GetFieldsForUpdate() As Object() 

        Function GetFieldsForDelete() As Object()

        Sub UpdateObjectFromOutputParams(ByVal parameters As Object() )
    End Interface

    Public Partial Class cargopersonalObjectList
        Inherits ObjectList(Of cargopersonalObject)
    End Class
End Namespace

Namespace Views
    Partial Public Class cargopersonalObjectListView
        Inherits ObjectListView(Of Objects.cargopersonalObject)

        Sub New(ByVal list As Objects.cargopersonalObjectList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


