
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:50 p.m.
' This is a Partial class file. The other one is IngresosObject.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports Cooperator.Framework.Core
Imports System

Namespace Objects

    Public Partial Class IngresosObject
        Inherits BaseObject
        Implements IMappeableIngresosObject
        Implements IUniqueIdentifiable
        Implements IEquatable(Of IngresosObject)
        Implements ICloneable

#Region "Ctor"

        Public Sub New()
            MyBase.New()

			_IdIngresos =  ValuesGenerator.GetInt32

        End Sub

        
        Public Sub New(ByVal IdIngresos As System.Int32)
            MyBase.New()

			_IdIngresos = IdIngresos

            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdIngresos As System.Int32, _
			ByVal IdAlmacen As System.Nullable(Of System.Int32), _
			ByVal IdTrabjador As System.Nullable(Of System.Int32), _
			ByVal Fecha As System.Nullable(Of System.DateTime), _
			ByVal Clasificacion As System.Nullable(Of System.Int32), _
			ByVal TipDoc As System.Nullable(Of System.Int32), _
			ByVal Serie As System.String, _
			ByVal Numero As System.String, _
			ByVal IdProveedor As System.Nullable(Of System.Int32), _
			ByVal Moneda As System.Nullable(Of System.Int32), _
			ByVal ModoPago As System.Nullable(Of System.Int32), _
			ByVal AlmacenesString As System.String, _
			ByVal ProveedoresString As System.String, _
			ByVal TrabajadoresString As System.String)
            MyBase.New()

			_IdIngresos = IdIngresos
			_IdAlmacen = IdAlmacen
			_IdTrabjador = IdTrabjador
			_Fecha = Fecha
			_Clasificacion = Clasificacion
			_TipDoc = TipDoc
			_Serie = Serie
			_Numero = Numero
			_IdProveedor = IdProveedor
			_Moneda = Moneda
			_ModoPago = ModoPago
			_AlmacenesString = AlmacenesString
			_ProveedoresString = ProveedoresString
			_TrabajadoresString = TrabajadoresString

            Call Initialized()
        End Sub
        

#End Region

#Region "Events"

        
        Public Event Update_AlmacenesString(ByVal sender As Object, ByVal e As DescriptionFieldEventArg)
        
        Public Event Update_ProveedoresString(ByVal sender As Object, ByVal e As DescriptionFieldEventArg)
        
        Public Event Update_TrabajadoresString(ByVal sender As Object, ByVal e As DescriptionFieldEventArg)
        
#End Region

#Region "Fields"

        Protected _IdIngresos As System.Int32
Protected _IdAlmacen As System.Nullable(Of System.Int32) 
Protected _IdTrabjador As System.Nullable(Of System.Int32) 
Protected _Fecha As System.Nullable(Of System.DateTime) 
Protected _Clasificacion As System.Nullable(Of System.Int32) 
Protected _TipDoc As System.Nullable(Of System.Int32) 
Protected _Serie As System.String
Protected _Numero As System.String
Protected _IdProveedor As System.Nullable(Of System.Int32) 
Protected _Moneda As System.Nullable(Of System.Int32) 
Protected _ModoPago As System.Nullable(Of System.Int32) 
Protected _AlmacenesString As System.String
Protected _ProveedoresString As System.String
Protected _TrabajadoresString As System.String

#End Region

#Region "Properties"
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable ReadOnly Property IdIngresos As System.Int32
            Get
                Return _IdIngresos
            End Get
            
        End Property
        
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property IdAlmacen As System.Nullable(Of System.Int32) 
            Get        
                Return _IdAlmacen
            End Get
            
            Set
                MyBase.PropertyModified()
                _IdAlmacen = value
                
                   If value.HasValue Then 
                    Dim e As DescriptionFieldEventArg = New DescriptionFieldEventArg(New AlmacenesObject (_IdAlmacen.Value))
                    RaiseEvent Update_AlmacenesString(Me, e)
                    _AlmacenesString = e.DescriptionString
                   End If 
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property IdTrabjador As System.Nullable(Of System.Int32) 
            Get        
                Return _IdTrabjador
            End Get
            
            Set
                MyBase.PropertyModified()
                _IdTrabjador = value
                
                   If value.HasValue Then 
                    Dim e As DescriptionFieldEventArg = New DescriptionFieldEventArg(New TrabajadoresObject (_IdTrabjador.Value))
                    RaiseEvent Update_TrabajadoresString(Me, e)
                    _TrabajadoresString = e.DescriptionString
                   End If 
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property Fecha As System.Nullable(Of System.DateTime) 
            Get        
                Return _Fecha
            End Get
            
            Set
                MyBase.PropertyModified()
                _Fecha = value
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property Clasificacion As System.Nullable(Of System.Int32) 
            Get        
                Return _Clasificacion
            End Get
            
            Set
                MyBase.PropertyModified()
                _Clasificacion = value
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property TipDoc As System.Nullable(Of System.Int32) 
            Get        
                Return _TipDoc
            End Get
            
            Set
                MyBase.PropertyModified()
                _TipDoc = value
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property Serie As System.String
            Get
                Return _Serie
            End Get
            
            Set
                MyBase.PropertyModified()
                _Serie = value
                
            End Set
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property Numero As System.String
            Get
                Return _Numero
            End Get
            
            Set
                MyBase.PropertyModified()
                _Numero = value
                
            End Set
            
        End Property
        
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property IdProveedor As System.Nullable(Of System.Int32) 
            Get        
                Return _IdProveedor
            End Get
            
            Set
                MyBase.PropertyModified()
                _IdProveedor = value
                
                   If value.HasValue Then 
                    Dim e As DescriptionFieldEventArg = New DescriptionFieldEventArg(New ProveedoresObject (_IdProveedor.Value))
                    RaiseEvent Update_ProveedoresString(Me, e)
                    _ProveedoresString = e.DescriptionString
                   End If 
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property Moneda As System.Nullable(Of System.Int32) 
            Get        
                Return _Moneda
            End Get
            
            Set
                MyBase.PropertyModified()
                _Moneda = value
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' Nullable property
        ''' </summary>
        Public Overridable Property ModoPago As System.Nullable(Of System.Int32) 
            Get        
                Return _ModoPago
            End Get
            
            Set
                MyBase.PropertyModified()
                _ModoPago = value
                
            End Set
            
        End Property
                
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable ReadOnly Property AlmacenesString As System.String
            Get
                Return _AlmacenesString
            End Get
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable ReadOnly Property ProveedoresString As System.String
            Get
                Return _ProveedoresString
            End Get
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable ReadOnly Property TrabajadoresString As System.String
            Get
                Return _TrabajadoresString
            End Get
            
        End Property
        
        #End Region

        

        Protected Overrides Sub SetOriginalValue()
            MyBase.InternalOriginalValue = CType(Me.MemberwiseClone(), IObject)
        End Sub

        Protected Overridable Function Clone() As Object Implements ICloneable.Clone
            Dim newObject As IngresosObject 
            Dim newOriginalValue As IngresosObject 

            newObject = CType(Me.MemberwiseClone(), IngresosObject) 
            If (MyBase.InternalOriginalValue IsNot Nothing) Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), IngresosObject)
                newObject.InternalOriginalValue = newOriginalValue
            End If
            Return newObject
        End Function


        ''' <summary>
        ''' Returns de original value of object since was created or restored.
        ''' </summary>
        Public Shadows Function OriginalValue() As IngresosObject 
           Return CType(MyBase.OriginalValue, IngresosObject)
        End Function


        Private Sub HydrateFields(ByVal IdIngresos As System.Int32, _
			ByVal IdAlmacen As System.Nullable(Of System.Int32) , _
			ByVal IdTrabjador As System.Nullable(Of System.Int32) , _
			ByVal Fecha As System.Nullable(Of System.DateTime) , _
			ByVal Clasificacion As System.Nullable(Of System.Int32) , _
			ByVal TipDoc As System.Nullable(Of System.Int32) , _
			ByVal Serie As System.String, _
			ByVal Numero As System.String, _
			ByVal IdProveedor As System.Nullable(Of System.Int32) , _
			ByVal Moneda As System.Nullable(Of System.Int32) , _
			ByVal ModoPago As System.Nullable(Of System.Int32) , _
			ByVal AlmacenesString As System.String, _
			ByVal ProveedoresString As System.String, _
			ByVal TrabajadoresString As System.String) Implements IMappeableIngresosObject.HydrateFields        
        	_IdIngresos = IdIngresos
			_IdAlmacen = IdAlmacen
			_IdTrabjador = IdTrabjador
			_Fecha = Fecha
			_Clasificacion = Clasificacion
			_TipDoc = TipDoc
			_Serie = Serie
			_Numero = Numero
			_IdProveedor = IdProveedor
			_Moneda = Moneda
			_ModoPago = ModoPago
			_AlmacenesString = AlmacenesString
			_ProveedoresString = ProveedoresString
			_TrabajadoresString = TrabajadoresString
        End Sub

        Private Function GetFieldsForInsert() As Object() Implements IMappeableIngresosObject.GetFieldsForInsert
        
        
            Dim _myArray(10) As Object
            _myArray(0) = _IdIngresos
			If (_IdAlmacen.HasValue) Then _myArray(1) = _IdAlmacen.Value
			If (_IdTrabjador.HasValue) Then _myArray(2) = _IdTrabjador.Value
			If (_Fecha.HasValue) Then _myArray(3) = _Fecha.Value
			If (_Clasificacion.HasValue) Then _myArray(4) = _Clasificacion.Value
			If (_TipDoc.HasValue) Then _myArray(5) = _TipDoc.Value
			If (Not System.String.IsNullOrEmpty(_Serie)) Then _myArray(6) = _Serie
			If (Not System.String.IsNullOrEmpty(_Numero)) Then _myArray(7) = _Numero
			If (_IdProveedor.HasValue) Then _myArray(8) = _IdProveedor.Value
			If (_Moneda.HasValue) Then _myArray(9) = _Moneda.Value
			If (_ModoPago.HasValue) Then _myArray(10) = _ModoPago.Value
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForUpdate() As Object() Implements IMappeableIngresosObject.GetFieldsForUpdate
        
        
            
            Dim _myArray(10) As Object
            _myArray(0) = _IdIngresos
			If (_IdAlmacen.HasValue) Then _myArray(1) = _IdAlmacen.Value
			If (_IdTrabjador.HasValue) Then _myArray(2) = _IdTrabjador.Value
			If (_Fecha.HasValue) Then _myArray(3) = _Fecha.Value
			If (_Clasificacion.HasValue) Then _myArray(4) = _Clasificacion.Value
			If (_TipDoc.HasValue) Then _myArray(5) = _TipDoc.Value
			If (Not System.String.IsNullOrEmpty(_Serie)) Then _myArray(6) = _Serie
			If (Not System.String.IsNullOrEmpty(_Numero)) Then _myArray(7) = _Numero
			If (_IdProveedor.HasValue) Then _myArray(8) = _IdProveedor.Value
			If (_Moneda.HasValue) Then _myArray(9) = _Moneda.Value
			If (_ModoPago.HasValue) Then _myArray(10) = _ModoPago.Value
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForDelete() As Object() Implements IMappeableIngresosObject.GetFieldsForDelete
        
            Dim _myArray(0) As Object
            _myArray(0) = _IdIngresos
			
            Return _myArray
        
        End Function


        Private Sub UpdateObjectFromOutputParams(parameters As Object()) Implements IMappeableIngresosObject.UpdateObjectFromOutputParams
            ' Update properties from Output parameters
            _IdIngresos = CType(parameters(0), System.Int32)

        End Sub

        Private Function Identifier() As Object() Implements IUniqueIdentifiable.Identifier
            Dim o As IngresosObject = Nothing
            If ObjectStateHelper.IsModified(Me) Then
                o = Me.OriginalValue()
            Else
                o = Me
            End If

            Return New Object() {o.IdIngresos}
        End Function


        Public Overloads Function Equals(other As IngresosObject) As Boolean Implements IEquatable(Of IngresosObject).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function


    End Class

    Public Interface IMappeableIngresosObject
        Sub HydrateFields( ByVal IdIngresos As System.Int32, _
				 ByVal IdAlmacen As System.Nullable(Of System.Int32) , _
				 ByVal IdTrabjador As System.Nullable(Of System.Int32) , _
				 ByVal Fecha As System.Nullable(Of System.DateTime) , _
				 ByVal Clasificacion As System.Nullable(Of System.Int32) , _
				 ByVal TipDoc As System.Nullable(Of System.Int32) , _
				 ByVal Serie As System.String, _
				 ByVal Numero As System.String, _
				 ByVal IdProveedor As System.Nullable(Of System.Int32) , _
				 ByVal Moneda As System.Nullable(Of System.Int32) , _
				 ByVal ModoPago As System.Nullable(Of System.Int32) , _
				 ByVal AlmacenesString As System.String, _
				 ByVal ProveedoresString As System.String, _
				 ByVal TrabajadoresString As System.String)

        Function GetFieldsForInsert() As Object() 

        Function GetFieldsForUpdate() As Object() 

        Function GetFieldsForDelete() As Object()

        Sub UpdateObjectFromOutputParams(ByVal parameters As Object() )
    End Interface

    Public Partial Class IngresosObjectList
        Inherits ObjectList(Of IngresosObject)
    End Class
End Namespace

Namespace Views
    Partial Public Class IngresosObjectListView
        Inherits ObjectListView(Of Objects.IngresosObject)

        Sub New(ByVal list As Objects.IngresosObjectList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


