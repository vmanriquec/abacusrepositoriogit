Imports abacusRules.Objects
Imports abacusRules.Entities
Imports abacusRules.Mappers
Imports abacusRules.micapadatos
Imports abacusRules
Imports System.Data
Imports System.Data.SqlClient
Imports System.Diagnostics
Imports System.IO
Public Class gestionproductos

    Private objgridimages As ImageClass
    Dim actuali, siempreid, e As Integer
    Dim mRow As Integer = 0
    Dim newpage As Boolean = True
    Private Sub cargartodos()
        Me.DataGridView1.DataSource = capaproductos.cargartodosproductos
    End Sub
    Public Shared Sub cargarcombonombreproveedor(ByVal cbo As ComboBox)
        Try
            cbo.DataSource = capaproveedores.cargarcomboconcatenadoproveedores
            cbo.DisplayMember = "nombre"
            cbo.ValueMember = "IdProveedor"
        Catch ex As Exception
            Throw ex
        End Try
    End Sub


    Public Shared Sub cargarcombonombrecategoria(ByVal cbo As ComboBox)
        Try
            cbo.DataSource = CategoriasMapper.cargarcomboconcatenadocategoriaproducto
            cbo.DisplayMember = "Categoria"
            cbo.ValueMember = "Id_Categoria"
        Catch ex As Exception
            Throw ex
        End Try
    End Sub


    Private Sub limpiar()
        Me.txtobservaciones.Text = ""
    End Sub
    Private Sub bloquear()
        'Me.cboruta.Enabled = False
        'Me.txtobservacion.Enabled = False
        'Me.cbotrabajador.Enabled = False
    End Sub
    Private Sub habilitar()
        'Me.cbotrabajador.Enabled = True
        'Me.cboruta.Enabled = True
        'Me.txtobservacion.Enabled = True

    End Sub
    Private Sub nuevo_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs)
        limpiar()
        actuali = 0
    End Sub
    Private Sub eliminar_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs)
        If Me.DataGridView1.RowCount = 0 Then
            MsgBox("busque primero el registro a eliminar")
        Else
            Dim fila As Byte
            Dim i As Integer
            fila = CByte(Me.DataGridView1.CurrentCell.RowIndex())
            Dim productos1 As New Productos
            i = CInt(CDec(Me.DataGridView1.Item(0, fila).Value()))
            ProductosMapper.Instance.Delete(i)
            MsgBox("registro eliminado con exito")
            cargartodos()
        End If

    End Sub

   

    Private Sub PrintDocument1_PrintPage(ByVal sender As System.Object, ByVal e As System.Drawing.Printing.PrintPageEventArgs) Handles PrintDocument1.PrintPage
        With DataGridView1
            Dim fmt As StringFormat = New StringFormat(StringFormatFlags.LineLimit)
            fmt.LineAlignment = StringAlignment.Near
            fmt.Trimming = StringTrimming.None
            Dim y As Single = e.MarginBounds.Top
            Do While mRow < .RowCount
                Dim row As DataGridViewRow = .Rows(mRow)
                Dim x As Single = e.MarginBounds.Left
                Dim h As Single = 0
                For Each cell As DataGridViewCell In row.Cells
                    Dim rc As RectangleF = New RectangleF(x, y, cell.Size.Width, cell.Size.Height)

                    e.Graphics.DrawRectangle(Pens.Black, rc.Left, rc.Top, rc.Width, rc.Height)
                    If (newpage) Then
                        e.Graphics.DrawString(DataGridView1.Columns(cell.ColumnIndex).HeaderText, .Font, Brushes.Black, rc, fmt)
                    Else
                        e.Graphics.DrawString(DataGridView1.Rows(cell.RowIndex).Cells(cell.ColumnIndex).FormattedValue.ToString(), .Font, Brushes.Black, rc, fmt)
                    End If
                    x += rc.Width

                    h = Math.Max(h, rc.Height)
                Next
                newpage = False
                y += h
                mRow += 1
                If y + h > e.MarginBounds.Bottom Then
                    e.HasMorePages = True
                    mRow -= 1
                    newpage = True
                    Exit Sub
                End If
            Loop
            mRow = 0

        End With
    End Sub

    Private Sub PanelEx1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PanelEx1.Click

    End Sub

    Private Sub gestionproductos_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        cargarcombonombrecategoria(cbocategoria)
        cargarcombonombreproveedor(cboproveedor)

        'cargargrid()
    End Sub

    Private Sub ButtonX2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ButtonX2.Click
        Dim openFileDialog1 As New OpenFileDialog()

        Dim result As New DialogResult
        openFileDialog1.InitialDirectory = "Bibliotecas\Imágenes"
        openFileDialog1.Filter = "archivos de imagen (*.jpg)|*.png|All files (*.*)|*.*"
        openFileDialog1.FilterIndex = 3
        openFileDialog1.RestoreDirectory = True
        result = openFileDialog1.ShowDialog()
        If (result = DialogResult.OK) Then
            picimagen.Image = Image.FromFile(openFileDialog1.FileName)
        End If
    End Sub

    Private Sub grabar_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles grabar.Click
        If Me.txtnombre.Text = "" And Me.txtpreciocosto.Text = "" And Me.txtprecioventa.Text = "" Then

            MsgBox("debe llenar por lo menos un nombre")


        Else
            If actuali <> 1 Then
                Dim productos1 As New Productos
                productos1.IdProveedor = CType(Me.cboproveedor.SelectedValue.ToString, Integer?)
                productos1.Categoria = CType(CStr(Me.cbocategoria.SelectedValue), Integer?)
                productos1.Producto = Me.txtnombre.Text
                productos1.fotoproducto = convertimage.ImageToByteArray(Me.picimagen.Image)
                productos1.Capacidad = Me.txtcapacidad.Text
                productos1.UMedida = Me.cbounidadmedida.Text
                productos1.estado = "1"
                productos1.PrecioCosto = CDec(Me.txtpreciocosto.Text)
                productos1.PrecioVenta = CDec(Me.txtprecioventa.Text)
                productos1.fechaingreso = CDate(Me.dtfecharegistro.Value)
                productos1.fechadecaducidad = CDate(Me.dtfechacaducidad.Value)
                productos1.Observaciones = Me.txtobservaciones.Text
                ProductosMapper.Instance.Insert(productos1)
                MsgBox("se agrego el registro")
            Else
                Dim fila As Byte
                Dim i As Integer
                fila = CByte(Me.DataGridView1.CurrentCell.RowIndex())
                i = CInt(CDec(Me.DataGridView1.Item(0, fila).Value()))

                Dim productos1 As New abacusRules.Entities.Productos
                productos1 = ProductosMapper.Instance.GetOne(i)
                productos1.IdProveedor = CType(Me.cboproveedor.SelectedValue.ToString, Integer?)
                productos1.Categoria = CType(CStr(Me.cbocategoria.SelectedValue), Integer?)
                productos1.Producto = Me.txtnombre.Text
                productos1.fotoproducto = convertimage.ImageToByteArray(Me.picimagen.Image)
                productos1.Capacidad = Me.txtcapacidad.Text
                productos1.UMedida = Me.cbounidadmedida.Text
                productos1.estado = "1"
                productos1.PrecioCosto = CDec(Me.txtpreciocosto.Text)
                productos1.PrecioVenta = CDec(Me.txtprecioventa.Text)
                productos1.fechaingreso = CDate(Me.dtfecharegistro.Value)
                productos1.fechadecaducidad = CDate(Me.dtfechacaducidad.Value)
                productos1.Observaciones = Me.txtobservaciones.Text
                ProductosMapper.Instance.Save(productos1)
                MsgBox("se actualizo registro")
            End If
        End If

        cargartodos()
    End Sub

    Private Sub todos_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles todos.Click
        cargartodos()
    End Sub

    Private Sub imprimir_datagrid_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles imprimir_datagrid.Click
        ' PrintPreviewDialog1.Document = PrintDocument1
        'PrintPreviewDialog1.ShowDialog()
    End Sub

    Private Sub nuevo_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles nuevo.Click

    End Sub

    Private Sub editar_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles editar.Click
        limpiar()

        If Me.DataGridView1.RowCount = 0 Then
            MsgBox("busque primero el dato a editar")
        Else
            Dim fila As Byte
            Dim i As Integer
            fila = CByte(Me.DataGridView1.CurrentCell.RowIndex())


            Dim productos1 As ProductosObject
            i = CInt(CDec(Me.DataGridView1.Item(0, fila).Value()))
            productos1 = ProductosMapper.Instance.GetOne(i)
            Me.cboproveedor.SelectedValue = CStr(productos1.IdProveedor)
            Me.cbocategoria.SelectedValue = productos1.Categoria
            Me.txtnombre.Text = productos1.Producto
            Me.picimagen.Image = convertimage.ByteArrayToImage(productos1.fotoproducto)
            Me.txtcapacidad.Text = productos1.Capacidad
            Me.cbounidadmedida.Text = productos1.UMedida
            If productos1.estado = "1" Then
                Me.chestado.Checked = True
            Else
                Me.chestado.Checked = False
            End If
            Me.txtpreciocosto.Text = CStr(CDec(productos1.PrecioCosto))
            Me.txtprecioventa.Text = CStr(CDec(productos1.PrecioVenta))
            Me.dtfecharegistro.Value = CDate(productos1.fechaingreso)
            Me.dtfechacaducidad.Value = CDate(productos1.fechadecaducidad)
            Me.txtobservaciones.Text = productos1.Observaciones
            actuali = 1
        End If
    End Sub

End Class