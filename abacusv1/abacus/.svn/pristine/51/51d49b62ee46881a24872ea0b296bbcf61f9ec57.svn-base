
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is KardexEntity.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports abacusRules.Objects


Imports Cooperator.Framework.Core
Imports Cooperator.Framework.Core.LazyLoad
Imports System

Namespace Entities

    Public Partial Class Kardex
        Inherits Objects.KardexObject
        Implements IMappeableKardex
        Implements IEquatable(Of Kardex)
        Implements ICloneable

        #Region "Ctor"

        Public Sub New()
            MyBase.New()
            
        End Sub

        
        Public Sub New (ByVal IdKardexT As System.Int32)
            MyBase.New()

			_IdKardexT = IdKardexT

            
            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdKardexT As System.Int32, _
			ByVal IdSalidasP As System.Nullable(Of System.Int32), _
			ByVal IdIngresos As System.Nullable(Of System.Int32), _
			ByVal IdProducto As System.Nullable(Of System.Int32), _
			ByVal CodProducto As System.String, _
			ByVal Producto As System.String, _
			ByVal Lote As System.String, _
			ByVal FechaK As System.Nullable(Of System.DateTime), _
			ByVal SerieK As System.String, _
			ByVal NumeroK As System.String, _
			ByVal CantidadK As System.Nullable(Of System.Decimal), _
			ByVal CUnitarioK As System.Nullable(Of System.Decimal), _
			ByVal IdSalida As System.Nullable(Of System.Int32), _
			ByVal CliProv As System.Nullable(Of System.Double), _
			ByVal Tienda As System.Nullable(Of System.Int32), _
			ByVal upsize_ts As System.Nullable(Of System.DateTime), _
			ByVal IngresosString As System.String, _
			ByVal ProductosString As System.String, _
			ByVal SalidasString As System.String)
            MyBase.New()

			_IdKardexT = IdKardexT
			_IdSalidasP = IdSalidasP
			_IdIngresos = IdIngresos
			_IdProducto = IdProducto
			_CodProducto = CodProducto
			_Producto = Producto
			_Lote = Lote
			_FechaK = FechaK
			_SerieK = SerieK
			_NumeroK = NumeroK
			_CantidadK = CantidadK
			_CUnitarioK = CUnitarioK
			_IdSalida = IdSalida
			_CliProv = CliProv
			_Tienda = Tienda
			_upsize_ts = upsize_ts
			_IngresosString = IngresosString
			_ProductosString = ProductosString
			_SalidasString = SalidasString

            
            Call Initialized()
        End Sub
        
        #End Region

        #Region "Fields"

        Protected  _IngresosEntity As Objects.IngresosObject
Protected  _ProductosEntity As Objects.ProductosObject
Protected  _SalidasEntity As Objects.SalidasObject

        #End Region

        #Region "Properties"
        
Dim _IngresosEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property IngresosEntity As Objects.IngresosObject
            Get
                If _IngresosEntity Is Nothing  AndAlso Me.IdIngresos.HasValue AndAlso Not _IngresosEntityFetched  Then
_IngresosEntityFetched = True
Dim _IngresosEntityTemp As Objects.IngresosObject = New Objects.IngresosObject(Me.IdIngresos.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.IngresosObject))
 _IngresosEntity = CType(lazyProvider.GetEntity(GetType(Objects.IngresosObject), _IngresosEntityTemp), Objects.IngresosObject)
End If

                Return _IngresosEntity
            End Get
            Set (value As Objects.IngresosObject)
                MyBase.PropertyModified()
                _IngresosEntity = value
                If value IsNot Nothing Then
   _IdIngresos = value.IdIngresos
If value.Serie IsNot Nothing Then 
_IngresosString = value.Serie.ToString() 
Else
    _IngresosString = "" 
End If

Else 
   _IdIngresos = Nothing
_IngresosString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
Dim _ProductosEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property ProductosEntity As Objects.ProductosObject
            Get
                If _ProductosEntity Is Nothing  AndAlso Me.IdProducto.HasValue AndAlso Not _ProductosEntityFetched  Then
_ProductosEntityFetched = True
Dim _ProductosEntityTemp As Objects.ProductosObject = New Objects.ProductosObject(Me.IdProducto.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.ProductosObject))
 _ProductosEntity = CType(lazyProvider.GetEntity(GetType(Objects.ProductosObject), _ProductosEntityTemp), Objects.ProductosObject)
End If

                Return _ProductosEntity
            End Get
            Set (value As Objects.ProductosObject)
                MyBase.PropertyModified()
                _ProductosEntity = value
                If value IsNot Nothing Then
   _IdProducto = value.IdProducto
If value.CodProducto IsNot Nothing Then 
_ProductosString = value.CodProducto.ToString() 
Else
    _ProductosString = "" 
End If

Else 
   _IdProducto = Nothing
_ProductosString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
Dim _SalidasEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property SalidasEntity As Objects.SalidasObject
            Get
                If _SalidasEntity Is Nothing  AndAlso Me.IdSalidasP.HasValue AndAlso Not _SalidasEntityFetched  Then
_SalidasEntityFetched = True
Dim _SalidasEntityTemp As Objects.SalidasObject = New Objects.SalidasObject(Me.IdSalidasP.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.SalidasObject))
 _SalidasEntity = CType(lazyProvider.GetEntity(GetType(Objects.SalidasObject), _SalidasEntityTemp), Objects.SalidasObject)
End If

                Return _SalidasEntity
            End Get
            Set (value As Objects.SalidasObject)
                MyBase.PropertyModified()
                _SalidasEntity = value
                If value IsNot Nothing Then
   _IdSalidasP = value.IdSalidasP
If value.Tipo IsNot Nothing Then 
_SalidasString = value.Tipo.ToString() 
Else
    _SalidasString = "" 
End If

Else 
   _IdSalidasP = Nothing
_SalidasString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
        #End Region

        ''' <summary>
        ''' Returns de original value of entity since was created or restored. 
        ''' </summary>
        Public Shadows Function OriginalValue() As Kardex 
                Return CType(MyBase.OriginalValue, Kardex)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Protected Overrides Function Clone() As Object 
            Dim newObject As Kardex 
            

            newObject = CType(Me.MemberwiseClone(), Kardex)
            ' Entities
                         
            If Me._IngresosEntity IsNot Nothing Then
                newObject._IngresosEntity = CType(CType(Me._IngresosEntity, ICloneable).Clone(),Objects.IngresosObject)
            End If
                         
            If Me._ProductosEntity IsNot Nothing Then
                newObject._ProductosEntity = CType(CType(Me._ProductosEntity, ICloneable).Clone(),Objects.ProductosObject)
            End If
                         
            If Me._SalidasEntity IsNot Nothing Then
                newObject._SalidasEntity = CType(CType(Me._SalidasEntity, ICloneable).Clone(),Objects.SalidasObject)
            End If
            
            ' Colections
            
            ' OriginalValue
            Dim newOriginalValue As Kardex
            If MyBase.InternalOriginalValue IsNot Nothing Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), Kardex)
                ' Entities
                             
                If Me.OriginalValue()._IngresosEntity IsNot Nothing Then
                    newOriginalValue._IngresosEntity = CType(CType(Me.OriginalValue()._IngresosEntity, ICloneable).Clone(), Objects.IngresosObject)
                End If
                             
                If Me.OriginalValue()._ProductosEntity IsNot Nothing Then
                    newOriginalValue._ProductosEntity = CType(CType(Me.OriginalValue()._ProductosEntity, ICloneable).Clone(), Objects.ProductosObject)
                End If
                             
                If Me.OriginalValue()._SalidasEntity IsNot Nothing Then
                    newOriginalValue._SalidasEntity = CType(CType(Me.OriginalValue()._SalidasEntity, ICloneable).Clone(), Objects.SalidasObject)
                End If
                
                ' Colections
                            
                newObject.InternalOriginalValue = newOriginalValue

            End If
            Return newObject
        End Function



        Private Sub CompleteEntity(IngresosEntity As Objects.IngresosObject, ProductosEntity As Objects.ProductosObject, SalidasEntity As Objects.SalidasObject) Implements IMappeableKardex.CompleteEntity
        _IngresosEntity = IngresosEntity
_ProductosEntity = ProductosEntity
_SalidasEntity = SalidasEntity
        End Sub

        
        Private Function IsIngresosEntityNull() As Boolean Implements IMappeableKardex.IsIngresosEntityNull
            Return IsNothing(_IngresosEntity)
        End Function
        
        Private Function IsProductosEntityNull() As Boolean Implements IMappeableKardex.IsProductosEntityNull
            Return IsNothing(_ProductosEntity)
        End Function
        
        Private Function IsSalidasEntityNull() As Boolean Implements IMappeableKardex.IsSalidasEntityNull
            Return IsNothing(_SalidasEntity)
        End Function
        

        Private Sub SetFKValuesForChilds(entity As Kardex) Implements IMappeableKardex.SetFKValuesForChilds
                
        End Sub

        Public Overloads Function Equals(other As Kardex) As Boolean Implements IEquatable(Of Kardex).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function

    End Class

    Public Interface IMappeableKardex
        Sub CompleteEntity(IngresosEntity As Objects.IngresosObject, ProductosEntity As Objects.ProductosObject, SalidasEntity As Objects.SalidasObject)
        
        Function IsIngresosEntityNull() As Boolean
        
        Function IsProductosEntityNull() As Boolean
        
        Function IsSalidasEntityNull() As Boolean
        
        Sub SetFKValuesForChilds(entity As Kardex )
    End Interface

    Public Partial Class KardexList
        Inherits ObjectList(Of Kardex)    
    End Class
End Namespace

Namespace Views
    Partial Public Class KardexListView
        Inherits ObjectListView(Of Entities.Kardex)

        Sub New(ByVal list As Entities.KardexList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


