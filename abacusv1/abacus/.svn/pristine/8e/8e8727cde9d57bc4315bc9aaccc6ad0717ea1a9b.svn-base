Imports abacusRules.Objects
Imports abacusRules.Entities
Imports abacusRules.Mappers
Imports abacusRules.micapadatos
Imports abacusRules

Public Class ProgramacionVisitasaclientes
    Dim actuali, siempreid, e As Integer
    Dim mRow As Integer = 0
    Dim newpage As Boolean = True

    Private Sub cargartodos()
        Me.DataGridView1.DataSource = registrodevisitasMapper.Instance.GetAll
    End Sub
    Public Shared Sub cargarcombonombretrabajador(ByVal cbo As ComboBox)
        Try
            cbo.DataSource = TrabajadoresMapper.cargarnombretrabajador
            cbo.DisplayMember = "nombre"
            cbo.ValueMember = "IdTrabjador"
        Catch ex As Exception
            Throw ex
        End Try
    End Sub


    Public Shared Sub cargarcomborutas(ByVal cbo As ComboBox)
        Try
            cbo.DataSource = rutaMapper.cargarnombreruta()
            cbo.DisplayMember = "nombreruta"
            cbo.ValueMember = "Idruta"

        Catch ex As Exception
            Throw ex
        End Try
    End Sub

    Private Sub ProgramacionVisitasaclientes_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        cargarcombonombretrabajador(Me.cbotrabajador)
        cargarcomborutas(Me.cboruta)
        cargarcombonombretrabajador(Me.cbotrabajador2supervisor)
    End Sub

    Private Sub limpiar()
        Me.txtobservacion.Text = ""
        Me.cboruta.Text = ""
        Me.cbotrabajador.Text = ""
    End Sub
    Private Sub bloquear()
        Me.cboruta.Enabled = False
        Me.txtobservacion.Enabled = False
        Me.cbotrabajador.Enabled = False
    End Sub
    Private Sub habilitar()
        Me.cbotrabajador.Enabled = True
        Me.cboruta.Enabled = True
        Me.txtobservacion.Enabled = True

    End Sub
    Private Sub editar_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles editar.Click

        If Me.DataGridView1.RowCount = 0 Then
            MsgBox("busque primero el datos a editar")
        Else
            Dim fila As Byte
            Dim i As Integer
            fila = CByte(Me.DataGridView1.CurrentCell.RowIndex())


            Dim registrovisita1 As registrodevisitasObject
            i = CInt(CDec(Me.DataGridView1.Item(0, fila).Value()))
            registrovisita1 = registrodevisitasMapper.Instance.GetOne(i)

            Me.cbotrabajador.SelectedValue = registrovisita1.IdTrabjador
            Me.cbotrabajador2supervisor.SelectedValue = registrovisita1.IdTrabjador
            Me.cboruta.SelectedValue = registrovisita1.idruta
            Me.txtobservacion.Text = registrovisita1.observaciones
            Me.datefechavisita.Value = CDate(registrovisita1.fechavisita)
            Me.cboestado.Text = CStr(registrovisita1.estado)
            actuali = 1
        End If
    End Sub
    Private Sub KryptonButton1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        Me.Close()
    End Sub
    Private Sub nuevo_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles nuevo.Click
        limpiar()
        actuali = 0
    End Sub
    Private Sub grabar_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles grabar.Click
        If actuali <> 1 Then
            Dim registrovisita1 As New registrodevisitas
            registrovisita1.IdTrabjador = CType(Me.cbotrabajador.SelectedValue.ToString, Integer?)
            registrovisita1.idruta = CType(Me.cboruta.SelectedValue.ToString, Integer?)
            registrovisita1.idtrabajador2 = CType(Me.cbotrabajador2supervisor.SelectedValue.ToString, Integer?)
            registrovisita1.observaciones = Me.txtobservacion.Text
            registrovisita1.fechavisita = Me.datefechavisita.Value
            registrovisita1.estado = Me.cboestado.Text
            registrodevisitasMapper.Instance.Insert(registrovisita1)
            MsgBox("se agrego el registro")
        Else
            Dim fila As Byte
            Dim i As Integer
            fila = CByte(Me.DataGridView1.CurrentCell.RowIndex())
            i = CInt(CDec(Me.DataGridView1.Item(0, fila).Value()))
            Dim visitas2 As New visita1
            visitas2.Idvisitas = CInt(i)
            visitas2.IdTrabjador = CInt(CType(Me.cbotrabajador.SelectedValue.ToString, Integer?))
            visitas2.idtrabajador2 = CInt(CType(Me.cbotrabajador2supervisor.SelectedValue.ToString, Integer?))
            visitas2.idruta = CInt(CType(Me.cboruta.SelectedValue.ToString, Integer?))
            visitas2.observaciones = Me.txtobservacion.Text
            visitas2.fechavisita = Me.datefechavisita.Value
            visitas2.estado = CStr(Me.cboestado.Text)
            capadevisitas.actualizarvisita(visitas2)
            MsgBox("se actualizo registro")
        End If
        cargartodos()
    End Sub

    Private Sub eliminar_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles eliminar.Click
        If Me.DataGridView1.RowCount = 0 Then
            MsgBox("busque primero el registro a eliminar")
        Else
            Dim fila As Byte
            Dim i As Integer
            fila = CByte(Me.DataGridView1.CurrentCell.RowIndex())
            Dim registrovisita1 As New registrodevisitas
            i = CInt(CDec(Me.DataGridView1.Item(0, fila).Value()))
            registrodevisitasMapper.Instance.Delete(i)
            MsgBox("registro eliminado con exito")
            cargartodos()
        End If

    End Sub

    Private Sub todos_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles todos.Click
        cargartodos()
    End Sub

    Private Sub imprimirdatagrid_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles imprimirdatagrid.Click
        PrintPreviewDialog1.Document = PrintDocument1
        PrintPreviewDialog1.ShowDialog()
    End Sub

    Private Sub PrintDocument1_PrintPage(ByVal sender As System.Object, ByVal e As System.Drawing.Printing.PrintPageEventArgs) Handles PrintDocument1.PrintPage
        With DataGridView1
            Dim fmt As StringFormat = New StringFormat(StringFormatFlags.LineLimit)
            fmt.LineAlignment = StringAlignment.Near
            fmt.Trimming = StringTrimming.None
            Dim y As Single = e.MarginBounds.Top
            Do While mRow < .RowCount
                Dim row As DataGridViewRow = .Rows(mRow)
                Dim x As Single = e.MarginBounds.Left
                Dim h As Single = 0
                For Each cell As DataGridViewCell In row.Cells
                    Dim rc As RectangleF = New RectangleF(x, y, cell.Size.Width, cell.Size.Height)

                    e.Graphics.DrawRectangle(Pens.Black, rc.Left, rc.Top, rc.Width, rc.Height)
                    If (newpage) Then
                        e.Graphics.DrawString(DataGridView1.Columns(cell.ColumnIndex).HeaderText, .Font, Brushes.Black, rc, fmt)
                    Else
                        e.Graphics.DrawString(DataGridView1.Rows(cell.RowIndex).Cells(cell.ColumnIndex).FormattedValue.ToString(), .Font, Brushes.Black, rc, fmt)
                    End If
                    x += rc.Width

                    h = Math.Max(h, rc.Height)
                Next
                newpage = False
                y += h
                mRow += 1
                If y + h > e.MarginBounds.Bottom Then
                    e.HasMorePages = True
                    mRow -= 1
                    newpage = True
                    Exit Sub
                End If
            Loop
            mRow = 0

        End With
    End Sub
End Class