
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:50 p.m.
' This is a Partial class file. The other one is tipousuarioObject.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports Cooperator.Framework.Core
Imports System

Namespace Objects

    Public Partial Class tipousuarioObject
        Inherits BaseObject
        Implements IMappeabletipousuarioObject
        Implements IUniqueIdentifiable
        Implements IEquatable(Of tipousuarioObject)
        Implements ICloneable

#Region "Ctor"

        Public Sub New()
            MyBase.New()


        End Sub

        
        Public Sub New(ByVal idtipousuario As System.Int32)
            MyBase.New()

			_idtipousuario = idtipousuario

            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal idtipousuario As System.Int32, _
			ByVal nombretipousuario As System.String, _
			ByVal descripciontipousuario As System.String)
            MyBase.New()

			_idtipousuario = idtipousuario
			_nombretipousuario = nombretipousuario
			_descripciontipousuario = descripciontipousuario

            Call Initialized()
        End Sub
        

#End Region

#Region "Events"

        
#End Region

#Region "Fields"

        Protected _idtipousuario As System.Int32
Protected _nombretipousuario As System.String
Protected _descripciontipousuario As System.String

#End Region

#Region "Properties"
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property idtipousuario As System.Int32
            Get
                Return _idtipousuario
            End Get
            
            Set
                MyBase.PropertyModified()
                _idtipousuario = value
                
            End Set
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property nombretipousuario As System.String
            Get
                Return _nombretipousuario
            End Get
            
            Set
                MyBase.PropertyModified()
                _nombretipousuario = value
                
            End Set
            
        End Property
        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property descripciontipousuario As System.String
            Get
                Return _descripciontipousuario
            End Get
            
            Set
                MyBase.PropertyModified()
                _descripciontipousuario = value
                
            End Set
            
        End Property
        
        #End Region

        

        Protected Overrides Sub SetOriginalValue()
            MyBase.InternalOriginalValue = CType(Me.MemberwiseClone(), IObject)
        End Sub

        Protected Overridable Function Clone() As Object Implements ICloneable.Clone
            Dim newObject As tipousuarioObject 
            Dim newOriginalValue As tipousuarioObject 

            newObject = CType(Me.MemberwiseClone(), tipousuarioObject) 
            If (MyBase.InternalOriginalValue IsNot Nothing) Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), tipousuarioObject)
                newObject.InternalOriginalValue = newOriginalValue
            End If
            Return newObject
        End Function


        ''' <summary>
        ''' Returns de original value of object since was created or restored.
        ''' </summary>
        Public Shadows Function OriginalValue() As tipousuarioObject 
           Return CType(MyBase.OriginalValue, tipousuarioObject)
        End Function


        Private Sub HydrateFields(ByVal idtipousuario As System.Int32, _
			ByVal nombretipousuario As System.String, _
			ByVal descripciontipousuario As System.String) Implements IMappeabletipousuarioObject.HydrateFields        
        	_idtipousuario = idtipousuario
			_nombretipousuario = nombretipousuario
			_descripciontipousuario = descripciontipousuario
        End Sub

        Private Function GetFieldsForInsert() As Object() Implements IMappeabletipousuarioObject.GetFieldsForInsert
        
        
            Dim _myArray(2) As Object
            _myArray(0) = _idtipousuario
			If (Not System.String.IsNullOrEmpty(_nombretipousuario)) Then _myArray(1) = _nombretipousuario
			If (Not System.String.IsNullOrEmpty(_descripciontipousuario)) Then _myArray(2) = _descripciontipousuario
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForUpdate() As Object() Implements IMappeabletipousuarioObject.GetFieldsForUpdate
        
        
            
            Dim _myArray(3) As Object
            _myArray(0) = _idtipousuario
			If (Not System.String.IsNullOrEmpty(_nombretipousuario)) Then _myArray(1) = _nombretipousuario
			If (Not System.String.IsNullOrEmpty(_descripciontipousuario)) Then _myArray(2) = _descripciontipousuario
			_myArray(3) = Me.OriginalValue()._idtipousuario
			
            Return _myArray
        
        End Function

        Private Function GetFieldsForDelete() As Object() Implements IMappeabletipousuarioObject.GetFieldsForDelete
        
            Dim _myArray(0) As Object
            _myArray(0) = _idtipousuario
			
            Return _myArray
        
        End Function


        Private Sub UpdateObjectFromOutputParams(parameters As Object()) Implements IMappeabletipousuarioObject.UpdateObjectFromOutputParams
            ' Update properties from Output parameters
            
        End Sub

        Private Function Identifier() As Object() Implements IUniqueIdentifiable.Identifier
            Dim o As tipousuarioObject = Nothing
            If ObjectStateHelper.IsModified(Me) Then
                o = Me.OriginalValue()
            Else
                o = Me
            End If

            Return New Object() {o.idtipousuario}
        End Function


        Public Overloads Function Equals(other As tipousuarioObject) As Boolean Implements IEquatable(Of tipousuarioObject).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function


    End Class

    Public Interface IMappeabletipousuarioObject
        Sub HydrateFields( ByVal idtipousuario As System.Int32, _
				 ByVal nombretipousuario As System.String, _
				 ByVal descripciontipousuario As System.String)

        Function GetFieldsForInsert() As Object() 

        Function GetFieldsForUpdate() As Object() 

        Function GetFieldsForDelete() As Object()

        Sub UpdateObjectFromOutputParams(ByVal parameters As Object() )
    End Interface

    Public Partial Class tipousuarioObjectList
        Inherits ObjectList(Of tipousuarioObject)
    End Class
End Namespace

Namespace Views
    Partial Public Class tipousuarioObjectListView
        Inherits ObjectListView(Of Objects.tipousuarioObject)

        Sub New(ByVal list As Objects.tipousuarioObjectList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


