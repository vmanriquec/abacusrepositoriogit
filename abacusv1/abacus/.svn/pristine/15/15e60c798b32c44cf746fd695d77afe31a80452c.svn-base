
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is rutaEntity.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports abacusRules.Objects


Imports Cooperator.Framework.Core
Imports Cooperator.Framework.Core.LazyLoad
Imports System

Namespace Entities

    Public Partial Class ruta
        Inherits Objects.rutaObject
        Implements IMappeableruta
        Implements IEquatable(Of ruta)
        Implements ICloneable

        #Region "Ctor"

        Public Sub New()
            MyBase.New()
            
        End Sub

        
        Public Sub New (ByVal Idruta As System.Int32)
            MyBase.New()

			_Idruta = Idruta

            
            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal Idruta As System.Int32, _
			ByVal codigoruta As System.String, _
			ByVal nombreruta As System.String, _
			ByVal observacionruta As System.String, _
			ByVal iddistrito As System.Nullable(Of System.Int32), _
			ByVal DistritosString As System.String)
            MyBase.New()

			_Idruta = Idruta
			_codigoruta = codigoruta
			_nombreruta = nombreruta
			_observacionruta = observacionruta
			_iddistrito = iddistrito
			_DistritosString = DistritosString

            
            Call Initialized()
        End Sub
        
        #End Region

        #Region "Fields"

        Protected  _DistritosEntity As Objects.DistritosObject

        #End Region

        #Region "Properties"
        
Dim _DistritosEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property DistritosEntity As Objects.DistritosObject
            Get
                If _DistritosEntity Is Nothing  AndAlso Me.iddistrito.HasValue AndAlso Not _DistritosEntityFetched  Then
_DistritosEntityFetched = True
Dim _DistritosEntityTemp As Objects.DistritosObject = New Objects.DistritosObject(Me.iddistrito.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.DistritosObject))
 _DistritosEntity = CType(lazyProvider.GetEntity(GetType(Objects.DistritosObject), _DistritosEntityTemp), Objects.DistritosObject)
End If

                Return _DistritosEntity
            End Get
            Set (value As Objects.DistritosObject)
                MyBase.PropertyModified()
                _DistritosEntity = value
                If value IsNot Nothing Then
   _iddistrito = value.IdDistrito
If value.Distrito IsNot Nothing Then 
_DistritosString = value.Distrito.ToString() 
Else
    _DistritosString = "" 
End If

Else 
   _iddistrito = Nothing
_DistritosString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
        #End Region

        ''' <summary>
        ''' Returns de original value of entity since was created or restored. 
        ''' </summary>
        Public Shadows Function OriginalValue() As ruta 
                Return CType(MyBase.OriginalValue, ruta)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Protected Overrides Function Clone() As Object 
            Dim newObject As ruta 
            

            newObject = CType(Me.MemberwiseClone(), ruta)
            ' Entities
                         
            If Me._DistritosEntity IsNot Nothing Then
                newObject._DistritosEntity = CType(CType(Me._DistritosEntity, ICloneable).Clone(),Objects.DistritosObject)
            End If
            
            ' Colections
            
            ' OriginalValue
            Dim newOriginalValue As ruta
            If MyBase.InternalOriginalValue IsNot Nothing Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), ruta)
                ' Entities
                             
                If Me.OriginalValue()._DistritosEntity IsNot Nothing Then
                    newOriginalValue._DistritosEntity = CType(CType(Me.OriginalValue()._DistritosEntity, ICloneable).Clone(), Objects.DistritosObject)
                End If
                
                ' Colections
                            
                newObject.InternalOriginalValue = newOriginalValue

            End If
            Return newObject
        End Function



        Private Sub CompleteEntity(DistritosEntity As Objects.DistritosObject) Implements IMappeableruta.CompleteEntity
        _DistritosEntity = DistritosEntity
        End Sub

        
        Private Function IsDistritosEntityNull() As Boolean Implements IMappeableruta.IsDistritosEntityNull
            Return IsNothing(_DistritosEntity)
        End Function
        

        Private Sub SetFKValuesForChilds(entity As ruta) Implements IMappeableruta.SetFKValuesForChilds
                
        End Sub

        Public Overloads Function Equals(other As ruta) As Boolean Implements IEquatable(Of ruta).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function

    End Class

    Public Interface IMappeableruta
        Sub CompleteEntity(DistritosEntity As Objects.DistritosObject)
        
        Function IsDistritosEntityNull() As Boolean
        
        Sub SetFKValuesForChilds(entity As ruta )
    End Interface

    Public Partial Class rutaList
        Inherits ObjectList(Of ruta)    
    End Class
End Namespace

Namespace Views
    Partial Public Class rutaListView
        Inherits ObjectListView(Of Entities.ruta)

        Sub New(ByVal list As Entities.rutaList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


