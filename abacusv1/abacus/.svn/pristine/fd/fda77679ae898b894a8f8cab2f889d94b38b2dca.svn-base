
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is usuarioGateway.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web

Namespace Gateways
        
    Public Partial Class usuarioGateway 
        Inherits BaseGateway(Of usuarioObject, usuarioObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As usuarioGateway

        Private Sub New()
        End Sub

        Public Shared Function Instance() As usuarioGateway
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New usuarioGateway()
                Else
                    Dim inst As usuarioGateway = TryCast(HttpContext.Current.Items("abacusRules.usuarioGatewaySingleton"), usuarioGateway)
                    If inst Is Nothing Then
                        inst = New usuarioGateway()
                        HttpContext.Current.Items.Add("abacusRules.usuarioGatewaySingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region

        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String
            Get
                Return "usuario"
            End Get
        End Property

        ''' <summary>
        ''' Return the usuarioGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(usuarioGateway ).FullName
            End Get
        End Property


        
        ''' <summary>
        ''' If this table is read only
        ''' </summary>
        Protected Overrides Function IsReadOnly() As Boolean
                Return True
        End Function
        

        


        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As usuarioObject )
            Dim _nombreusuario As String
If reader.IsDBNull(0) Then 
	 _nombreusuario = ""
Else
	 _nombreusuario = reader.GetString(0)
End If
Dim _claveusuario As String
If reader.IsDBNull(1) Then 
	 _claveusuario = ""
Else
	 _claveusuario = reader.GetString(1)
End If
Dim _descripcion As String
If reader.IsDBNull(2) Then 
	 _descripcion = ""
Else
	 _descripcion = reader.GetString(2)
End If
Dim _estado As String
If reader.IsDBNull(3) Then 
	 _estado = ""
Else
	 _estado = reader.GetString(3)
End If
Dim _idtipousuario As System.Nullable(Of System.Int32) 
If reader.IsDBNull(5) Then 
	 _idtipousuario = New System.Nullable(Of System.Int32)
Else
	 _idtipousuario = reader.GetInt32(5)
End If
Dim _idtrabjador As System.Nullable(Of System.Int32) 
If reader.IsDBNull(6) Then 
	 _idtrabjador = New System.Nullable(Of System.Int32)
Else
	 _idtrabjador = reader.GetInt32(6)
End If
Dim _tipousuarioString As String
If reader.IsDBNull(7) Then 
	 _tipousuarioString = ""
Else
	 _tipousuarioString = reader.GetString(7)
End If
Dim _TrabajadoresString As String
If reader.IsDBNull(8) Then 
	 _TrabajadoresString = ""
Else
	 _TrabajadoresString = reader.GetString(8)
End If

            Dim usuario As IMappeableusuarioObject  = CType(entity, IMappeableusuarioObject)
            usuario.HydrateFields(_nombreusuario, _
_claveusuario, _
_descripcion, _
_estado, _
reader.GetInt32(4), _
_idtipousuario, _
_idtrabjador, _
_tipousuarioString, _
_TrabajadoresString)
            CType(entity, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As usuarioObject) As Object()
            Dim usuario As IMappeableusuarioObject = CType(entity, IMappeableusuarioObject)
            Return usuario.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As usuarioObject) As Object()
            Dim usuario As IMappeableusuarioObject = CType(entity, IMappeableusuarioObject)
            Return usuario.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As usuarioObject) As Object()
            Dim usuario As IMappeableusuarioObject = CType(entity, IMappeableusuarioObject)
            Return usuario.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal row As usuarioObject, parameters As Object())
            ' Update properties from Output parameters
            CType(row, IMappeableusuarioObject).UpdateObjectFromOutputParams(parameters)
            CType(row, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String
            Return "coop_"
        End Function


        ''' <summary>
        ''' Get a usuarioObject by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As usuarioObject 
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a usuarioObjectList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As usuarioObjectList 
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function



        ''' <summary>
        ''' Get a usuarioObject by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal idusuario As System.Int32) As usuarioObject         
            Return MyBase.GetOne(New usuarioObject(idusuario))
        End Function

            


        
        ''' <summary>
        ''' Get a usuarioObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBytipousuario(ByVal transaction As DbTransaction, ByVal idtipousuario As System.Int32) As usuarioObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "usuario_GetBytipousuario", idtipousuario)
        End Function

        ''' <summary>
        ''' Get a usuarioObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBytipousuario(ByVal transaction As DbTransaction, tipousuario As IUniqueIdentifiable) As usuarioObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "usuario_GetBytipousuario", tipousuario.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a usuarioObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction, ByVal idtrabjador As System.Int32) As usuarioObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "usuario_GetByTrabajadores", idtrabjador)
        End Function

        ''' <summary>
        ''' Get a usuarioObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction, Trabajadores As IUniqueIdentifiable) As usuarioObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "usuario_GetByTrabajadores", Trabajadores.Identifier())
        End Function
    


        
        ''' <summary>
        ''' Get a usuarioObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBytipousuario(ByVal idtipousuario As System.Int32) As usuarioObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "usuario_GetBytipousuario", idtipousuario)
        End Function

        ''' <summary>
        ''' Get a usuarioObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetBytipousuario(tipousuario As IUniqueIdentifiable) As usuarioObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "usuario_GetBytipousuario", tipousuario.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a usuarioObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal idtrabjador As System.Int32) As usuarioObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "usuario_GetByTrabajadores", idtrabjador)
        End Function

        ''' <summary>
        ''' Get a usuarioObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(Trabajadores As IUniqueIdentifiable) As usuarioObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "usuario_GetByTrabajadores", Trabajadores.Identifier())
        End Function
    

        


        'Database Queries 
        



        #Region "IGenericGateway"

        Private Function GetOne2(identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GeyByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class
End Namespace




