
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is FamiliasMapper.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Entities
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web


Namespace Mappers
    

    Public Partial Class FamiliasMapper
        Inherits BaseGateway(Of FamiliasObject, FamiliasObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As FamiliasMapper

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As FamiliasMapper
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New FamiliasMapper()
                Else
                    Dim inst As FamiliasMapper = TryCast(HttpContext.Current.Items("abacusRules.FamiliasMapperSingleton"), FamiliasMapper)
                    If inst Is Nothing Then
                        inst = New FamiliasMapper()
                        HttpContext.Current.Items.Add("abacusRules.FamiliasMapperSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function


#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim  s() as String={"IdFamilia"}
            return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return GetType(FamiliasObject)
        End Function


        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String 
            Get
                Return "Familias"
            End Get
        End Property

        ''' <summary>
        ''' Return the FamiliasGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(FamiliasMapper).FullName
            End Get
        End Property


        

        

        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As FamiliasObject)
            Dim _Familia As String
If reader.IsDBNull(1) Then 
	 _Familia = ""
Else
	 _Familia = reader.GetString(1)
End If

            Dim Familias As IMappeableFamiliasObject  = CType(entity, IMappeableFamiliasObject)
            Familias.HydrateFields(reader.GetInt32(0), _
_Familia)
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As FamiliasObject) As Object()
            Dim Familias As IMappeableFamiliasObject = CType(entity, IMappeableFamiliasObject)
            Return Familias.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As FamiliasObject) As Object()
            Dim Familias As IMappeableFamiliasObject = CType(entity, IMappeableFamiliasObject)
            Return Familias.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As FamiliasObject) As Object()
            Dim Familias As IMappeableFamiliasObject = CType(entity, IMappeableFamiliasObject)
            Return Familias.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal entity As FamiliasObject, ByVal parameters As Object())
            ' Update properties from Output parameters
            CType(entity, IMappeableFamiliasObject).UpdateObjectFromOutputParams(parameters)
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function


          



        ''' <summary>
        ''' Get a Familias by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As FamiliasObject
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a FamiliasList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As FamiliasObjectList
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetOne(IdFamilia As System.Int32) As FamiliasObject
            Return MyBase.GetOne(New FamiliasObject(IdFamilia))
        End Function

        

        ' GetOne By Objects and Params
            

        


        

        





        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(IdFamilia As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Familias_Delete", IdFamilia)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(ByVal transaction As DbTransaction ,IdFamilia As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Familias_Delete", IdFamilia)
        End Sub

        ' Delete By Objects and Params
            



        

    

    

    


        'Database Queries 
        






        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace


Namespace Wrappers
    ''' <summary>
    ''' 
    ''' </summary>
    Public Class FamiliasMapperWrapper

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            return Instance().GetPKPropertiesNames()
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return Instance().GetMappingType()
        End Function


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function Instance() As abacusRules.Mappers.FamiliasMapper
            Return abacusRules.Mappers.FamiliasMapper.Instance()
        End Function

        
        ''' <summary>
        ''' Get a Familias Entity by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdFamilia As System.Int32) As Objects.FamiliasObject         
            Return Instance().GetOne( IdFamilia)
        End Function
        

        ' GetBy Objects and Params
            

        

        ''' <summary>
        ''' GetAll Familias 
        ''' </summary>
        Public Function GetAll() As Objects.FamiliasObjectList
            Return Instance().GetAll()
        End Function

        
        


            

        

        ''' <summary>
        ''' Delete Familias 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdFamilia As System.Int32)
            Instance().Delete(IdFamilia)
        End Sub

        ''' <summary>
        ''' Delete Familias 
        ''' </summary>
        Public Overloads Sub Delete(ByVal entity As Objects.FamiliasObject)
            Instance().Delete(entity)
        End Sub

        ''' <summary>
        ''' Save Familias  
        ''' </summary>
        Public Overloads Sub Save(ByVal entity As Objects.FamiliasObject)
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert Familias 
        ''' </summary>
        Public Overloads Sub Insert(ByVal entity As Objects.FamiliasObject)
            Instance().Insert(entity)
        End Sub

        ''' <summary>
        ''' Save Familias 
        ''' </summary>
        Public Overloads Sub Save(ByVal IdFamilia As System.Int32, ByVal Familia As System.String)
            Dim entity As Objects.FamiliasObject = Instance().GetOne(IdFamilia)
            If entity Is Nothing Then
                Throw New ApplicationException(String.Format("Entity not found. IUniqueIdentifiable values: {0} = {1}", "IdFamilia", IdFamilia))
            End If

            entity.Familia = Familia
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert Familias
        ''' </summary>
        Public Overloads Sub Insert(ByVal Familia As System.String)
            Dim entity As Objects.FamiliasObject = New Objects.FamiliasObject

            entity.Familia = Familia
            Instance().Insert(entity)
        End Sub

        

        'Database Queries 
        


    End Class
End Namespace


Namespace Loaders

    ''' <summary>
    ''' 
    ''' </summary>
    Partial Public Class FamiliasLoader(Of T As {FamiliasObject, New})
        Inherits BaseLoader(Of T, FamiliasObject, ObjectList(Of T))
        Implements IGenericGateway



#Region "Singleton"

        Private Shared _instance As FamiliasLoader(Of T)

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As FamiliasLoader(Of T)
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New FamiliasLoader(Of T)
                Else
                    Dim inst As FamiliasLoader(Of T) = TryCast(HttpContext.Current.Items("abacusRules.FamiliasLoaderSingleton"), FamiliasLoader(Of T))
                    If inst Is Nothing Then
                        inst = New FamiliasLoader(Of T)
                        HttpContext.Current.Items.Add("abacusRules.FamiliasLoaderSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim s() as String={"IdFamilia"}
            Return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            Return GetType(FamiliasObject)
        End Function


        Protected Overrides ReadOnly Property TableName As String 
            Get
                Return "Familias"
            End Get
        End Property

        

        


        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As FamiliasObject)
            Dim _Familia As String
If reader.IsDBNull(1) Then 
	 _Familia = ""
Else
	 _Familia = reader.GetString(1)
End If

            Dim Familias As IMappeableFamiliasObject  = CType(entity, IMappeableFamiliasObject)
            Familias.HydrateFields(reader.GetInt32(0), _
_Familia)
        End Sub


        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function

        


        ''' <summary>
        ''' Get a Familias by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As t
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a FamiliasList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As ObjectList(Of T)
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' GetOne By Params
        ''' </summary>
        Public Overloads Function GetOne(IdFamilia As System.Int32) As t
            Return MyBase.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "Familias_GetOne", IdFamilia)
        End Function
        


        ' GetOne By Objects and Params
            

        


        'Database Queries 
        


        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace




