
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is CotizacionMapper.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Entities
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web


Namespace Mappers
    

    Public Partial Class CotizacionMapper
        Inherits BaseGateway(Of Cotizacion, CotizacionList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As CotizacionMapper

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As CotizacionMapper
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New CotizacionMapper()
                Else
                    Dim inst As CotizacionMapper = TryCast(HttpContext.Current.Items("abacusRules.CotizacionMapperSingleton"), CotizacionMapper)
                    If inst Is Nothing Then
                        inst = New CotizacionMapper()
                        HttpContext.Current.Items.Add("abacusRules.CotizacionMapperSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function


#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim  s() as String={"IdCoti"}
            return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return GetType(Cotizacion)
        End Function


        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String 
            Get
                Return "Cotizacion"
            End Get
        End Property

        ''' <summary>
        ''' Return the CotizacionGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(CotizacionMapper).FullName
            End Get
        End Property


        

        

        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As Cotizacion)
            Dim _IdTrabjador As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdTrabjador = New System.Nullable(Of System.Int32)
Else
	 _IdTrabjador = reader.GetInt32(1)
End If
Dim _A単o As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(2) Then 
	 _A単o = New System.Nullable(Of System.DateTime)
Else
	 _A単o = reader.GetDateTime(2)
End If
Dim _Numero As System.Nullable(Of System.Int32) 
If reader.IsDBNull(3) Then 
	 _Numero = New System.Nullable(Of System.Int32)
Else
	 _Numero = reader.GetInt32(3)
End If
Dim _IdCliente As System.Nullable(Of System.Int32) 
If reader.IsDBNull(4) Then 
	 _IdCliente = New System.Nullable(Of System.Int32)
Else
	 _IdCliente = reader.GetInt32(4)
End If
Dim _FPago As System.Nullable(Of System.Int32) 
If reader.IsDBNull(5) Then 
	 _FPago = New System.Nullable(Of System.Int32)
Else
	 _FPago = reader.GetInt32(5)
End If
Dim _FecEmision As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(6) Then 
	 _FecEmision = New System.Nullable(Of System.DateTime)
Else
	 _FecEmision = reader.GetDateTime(6)
End If
Dim _Referencia As String
If reader.IsDBNull(7) Then 
	 _Referencia = ""
Else
	 _Referencia = reader.GetString(7)
End If
Dim _Atencion As String
If reader.IsDBNull(8) Then 
	 _Atencion = ""
Else
	 _Atencion = reader.GetString(8)
End If
Dim _Moneda As String
If reader.IsDBNull(9) Then 
	 _Moneda = ""
Else
	 _Moneda = reader.GetString(9)
End If
Dim _TC As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(10) Then 
	 _TC = New System.Nullable(Of System.Decimal)
Else
	 _TC = reader.GetDecimal(10)
End If
Dim _Garantia As String
If reader.IsDBNull(11) Then 
	 _Garantia = ""
Else
	 _Garantia = reader.GetString(11)
End If
Dim _TiempoEntrega As String
If reader.IsDBNull(12) Then 
	 _TiempoEntrega = ""
Else
	 _TiempoEntrega = reader.GetString(12)
End If
Dim _IdVendedor As System.Nullable(Of System.Int32) 
If reader.IsDBNull(13) Then 
	 _IdVendedor = New System.Nullable(Of System.Int32)
Else
	 _IdVendedor = reader.GetInt32(13)
End If
Dim _Nota As String
If reader.IsDBNull(14) Then 
	 _Nota = ""
Else
	 _Nota = reader.GetString(14)
End If
Dim _upsize_ts As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(15) Then 
	 _upsize_ts = New System.Nullable(Of System.DateTime)
Else
	 _upsize_ts = reader.GetDateTime(15)
End If
Dim _ClientesString As String
If reader.IsDBNull(16) Then 
	 _ClientesString = ""
Else
	 _ClientesString = reader.GetString(16)
End If
Dim _TrabajadoresString As String
If reader.IsDBNull(17) Then 
	 _TrabajadoresString = ""
Else
	 _TrabajadoresString = reader.GetString(17)
End If

            Dim Cotizacion As IMappeableCotizacionObject  = CType(entity, IMappeableCotizacionObject)
            Cotizacion.HydrateFields(reader.GetInt32(0), _
_IdTrabjador, _
_A単o, _
_Numero, _
_IdCliente, _
_FPago, _
_FecEmision, _
_Referencia, _
_Atencion, _
_Moneda, _
_TC, _
_Garantia, _
_TiempoEntrega, _
_IdVendedor, _
_Nota, _
_upsize_ts, _
_ClientesString, _
_TrabajadoresString)
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As Cotizacion) As Object()
            Dim Cotizacion As IMappeableCotizacionObject = CType(entity, IMappeableCotizacionObject)
            Return Cotizacion.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As Cotizacion) As Object()
            Dim Cotizacion As IMappeableCotizacionObject = CType(entity, IMappeableCotizacionObject)
            Return Cotizacion.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As Cotizacion) As Object()
            Dim Cotizacion As IMappeableCotizacionObject = CType(entity, IMappeableCotizacionObject)
            Return Cotizacion.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal entity As Cotizacion, ByVal parameters As Object())
            ' Update properties from Output parameters
            CType(entity, IMappeableCotizacionObject).UpdateObjectFromOutputParams(parameters)
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function


        


        

        ''' <summary>
        ''' Complete the aggregations for this entity. 
        ''' </summary>
        Protected Overrides Sub CompleteEntity(ByVal entity As Cotizacion)
            Dim ClientesEntity As Objects.ClientesObject = Nothing 'Lazy load
Dim TrabajadoresEntity As Objects.TrabajadoresObject = Nothing 'Lazy load
            CType(entity, IMappeableCotizacion).CompleteEntity(ClientesEntity, TrabajadoresEntity)
        End Sub


        # Region "CRUD Operations"
        

        # End Region
        
        ''' <summary>
        ''' Delete children for this entity
        ''' </summary>
        Public Sub DeleteChildren(ByVal transaction As DbTransaction, ByVal entity As IUniqueIdentifiable)
                        
        End Sub


          



        ''' <summary>
        ''' Get a Cotizacion by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As Cotizacion
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a CotizacionList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As CotizacionList
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetOne(IdCoti As System.Int32) As Cotizacion
            Return MyBase.GetOne(New Cotizacion(IdCoti))
        End Function

        

        ' GetOne By Objects and Params
            

        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(IdCliente As System.Int32) As CotizacionList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByClientes", IdCliente)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal Clientes As IUniqueIdentifiable) As CotizacionList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByClientes", Clientes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(IdTrabjador As System.Int32) As CotizacionList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal Trabajadores As IUniqueIdentifiable) As CotizacionList
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByTrabajadores", Trabajadores.Identifier())
        End Function

    


        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal transaction As DbTransaction,IdCliente As System.Int32) As CotizacionList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_GetByClientes", IdCliente)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal transaction As DbTransaction, ByVal Clientes As IUniqueIdentifiable) As CotizacionList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_GetByClientes", Clientes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction,IdTrabjador As System.Int32) As CotizacionList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction, ByVal Trabajadores As IUniqueIdentifiable) As CotizacionList
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_GetByTrabajadores", Trabajadores.Identifier())
        End Function

    

        





        
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(IdCoti As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Cotizacion_Delete", IdCoti)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub Delete(ByVal transaction As DbTransaction ,IdCoti As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_Delete", IdCoti)
        End Sub

        ' Delete By Objects and Params
            



        

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(IdCliente As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Cotizacion_DeleteByClientes", IdCliente)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal transaction As DbTransaction , IdCliente As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_DeleteByClientes", IdCliente)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal Clientes As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Cotizacion_DeleteByClientes", Clientes.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByClientes(ByVal transaction As DbTransaction, ByVal Clientes As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_DeleteByClientes", Clientes.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Cotizacion_DeleteByTrabajadores", IdTrabjador)
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal transaction As DbTransaction , IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_DeleteByTrabajadores", IdTrabjador)
        End Sub


        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal Trabajadores As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Cotizacion_DeleteByTrabajadores", Trabajadores.Identifier())
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal transaction As DbTransaction, ByVal Trabajadores As IUniqueIdentifiable)        
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Cotizacion_DeleteByTrabajadores", Trabajadores.Identifier())
        End Sub

        

    


        'Database Queries 
        






        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace


Namespace Wrappers
    ''' <summary>
    ''' 
    ''' </summary>
    Public Class CotizacionMapperWrapper

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            return Instance().GetPKPropertiesNames()
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            return Instance().GetMappingType()
        End Function


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function Instance() As abacusRules.Mappers.CotizacionMapper
            Return abacusRules.Mappers.CotizacionMapper.Instance()
        End Function

        
        ''' <summary>
        ''' Get a Cotizacion Entity by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdCoti As System.Int32) As Entities.Cotizacion         
            Return Instance().GetOne( IdCoti)
        End Function
        

        ' GetBy Objects and Params
            

        

        ''' <summary>
        ''' Get a CotizacionList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByClientes( ByVal IdCliente As System.Int32) As Entities.CotizacionList 
            Return Instance().GetByClientes(IdCliente)
        End Function

        ''' <summary>
        ''' Get a CotizacionList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByClientes(ByVal  Clientes As IUniqueIdentifiable) As Entities.CotizacionList
            Return Instance().GetByClientes(Clientes)
        End Function

    

        ''' <summary>
        ''' Get a CotizacionList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByTrabajadores( ByVal IdTrabjador As System.Int32) As Entities.CotizacionList 
            Return Instance().GetByTrabajadores(IdTrabjador)
        End Function

        ''' <summary>
        ''' Get a CotizacionList by calling a Stored Procedure
        ''' </summary>
        Public Function GetByTrabajadores(ByVal  Trabajadores As IUniqueIdentifiable) As Entities.CotizacionList
            Return Instance().GetByTrabajadores(Trabajadores)
        End Function

    

        ''' <summary>
        ''' GetAll Cotizacion 
        ''' </summary>
        Public Function GetAll() As Entities.CotizacionList
            Return Instance().GetAll()
        End Function

        
        

        ''' <summary>
        ''' Delete children for Cotizacion
        ''' </summary>
        Public Sub DeleteChildren(ByVal transaction As DbTransaction, ByVal entity As Cotizacion)
            Instance().DeleteChildren(transaction, entity)
        End Sub

        


            

        

        ''' <summary>
        ''' Delete Cotizacion by Clientes
        ''' </summary>
        Public Sub DeleteByClientes( ByVal IdCliente As System.Int32)
            Instance().DeleteByClientes(IdCliente)
        End Sub

        ''' <summary>
        ''' Delete Cotizacion by Clientes
        ''' </summary>
        Public Sub DeleteByClientes(ByVal Clientes As IUniqueIdentifiable )
            Instance().DeleteByClientes(Clientes)
        End Sub

    

        ''' <summary>
        ''' Delete Cotizacion by Trabajadores
        ''' </summary>
        Public Sub DeleteByTrabajadores( ByVal IdTrabjador As System.Int32)
            Instance().DeleteByTrabajadores(IdTrabjador)
        End Sub

        ''' <summary>
        ''' Delete Cotizacion by Trabajadores
        ''' </summary>
        Public Sub DeleteByTrabajadores(ByVal Trabajadores As IUniqueIdentifiable )
            Instance().DeleteByTrabajadores(Trabajadores)
        End Sub

    

        ''' <summary>
        ''' Delete Cotizacion 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdCoti As System.Int32)
            Instance().Delete(IdCoti)
        End Sub

        ''' <summary>
        ''' Delete Cotizacion 
        ''' </summary>
        Public Overloads Sub Delete(ByVal entity As Entities.Cotizacion)
            Instance().Delete(entity)
        End Sub

        ''' <summary>
        ''' Save Cotizacion  
        ''' </summary>
        Public Overloads Sub Save(ByVal entity As Entities.Cotizacion)
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert Cotizacion 
        ''' </summary>
        Public Overloads Sub Insert(ByVal entity As Entities.Cotizacion)
            Instance().Insert(entity)
        End Sub

        ''' <summary>
        ''' Save Cotizacion 
        ''' </summary>
        Public Overloads Sub Save(ByVal IdCoti As System.Int32, ByVal IdTrabjador As System.Int32, ByVal A単o As System.DateTime, ByVal Numero As System.Int32, ByVal IdCliente As System.Int32, ByVal FPago As System.Int32, ByVal FecEmision As System.DateTime, ByVal Referencia As System.String, ByVal Atencion As System.String, ByVal Moneda As System.String, ByVal TC As System.Decimal, ByVal Garantia As System.String, ByVal TiempoEntrega As System.String, ByVal IdVendedor As System.Int32, ByVal Nota As System.String, ByVal upsize_ts As System.DateTime, ByVal ClientesString As System.String, ByVal TrabajadoresString As System.String)
            Dim entity As Entities.Cotizacion = Instance().GetOne(IdCoti)
            If entity Is Nothing Then
                Throw New ApplicationException(String.Format("Entity not found. IUniqueIdentifiable values: {0} = {1}", "IdCoti", IdCoti))
            End If

            entity.IdTrabjador = IdTrabjador
            entity.A単o = A単o
            entity.Numero = Numero
            entity.IdCliente = IdCliente
            entity.FPago = FPago
            entity.FecEmision = FecEmision
            entity.Referencia = Referencia
            entity.Atencion = Atencion
            entity.Moneda = Moneda
            entity.TC = TC
            entity.Garantia = Garantia
            entity.TiempoEntrega = TiempoEntrega
            entity.IdVendedor = IdVendedor
            entity.Nota = Nota
            entity.upsize_ts = upsize_ts
            Instance().Save(entity)
        End Sub

        ''' <summary>
        ''' Insert Cotizacion
        ''' </summary>
        Public Overloads Sub Insert(ByVal IdTrabjador As System.Int32, ByVal A単o As System.DateTime, ByVal Numero As System.Int32, ByVal IdCliente As System.Int32, ByVal FPago As System.Int32, ByVal FecEmision As System.DateTime, ByVal Referencia As System.String, ByVal Atencion As System.String, ByVal Moneda As System.String, ByVal TC As System.Decimal, ByVal Garantia As System.String, ByVal TiempoEntrega As System.String, ByVal IdVendedor As System.Int32, ByVal Nota As System.String, ByVal upsize_ts As System.DateTime)
            Dim entity As Entities.Cotizacion = New Entities.Cotizacion

            entity.IdTrabjador = IdTrabjador
            entity.A単o = A単o
            entity.Numero = Numero
            entity.IdCliente = IdCliente
            entity.FPago = FPago
            entity.FecEmision = FecEmision
            entity.Referencia = Referencia
            entity.Atencion = Atencion
            entity.Moneda = Moneda
            entity.TC = TC
            entity.Garantia = Garantia
            entity.TiempoEntrega = TiempoEntrega
            entity.IdVendedor = IdVendedor
            entity.Nota = Nota
            entity.upsize_ts = upsize_ts
            Instance().Insert(entity)
        End Sub

        

        'Database Queries 
        


    End Class
End Namespace


Namespace Loaders

    ''' <summary>
    ''' 
    ''' </summary>
    Partial Public Class CotizacionLoader(Of T As {Cotizacion, New})
        Inherits BaseLoader(Of T, Cotizacion, ObjectList(Of T))
        Implements IGenericGateway



#Region "Singleton"

        Private Shared _instance As CotizacionLoader(Of T)

        Private Sub New()
        End Sub

        ''' <summary>
        ''' 
        ''' </summary>
        Public Shared Function Instance() As CotizacionLoader(Of T)
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New CotizacionLoader(Of T)
                Else
                    Dim inst As CotizacionLoader(Of T) = TryCast(HttpContext.Current.Items("abacusRules.CotizacionLoaderSingleton"), CotizacionLoader(Of T))
                    If inst Is Nothing Then
                        inst = New CotizacionLoader(Of T)
                        HttpContext.Current.Items.Add("abacusRules.CotizacionLoaderSingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region


        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetPKPropertiesNames() as string()
            
            Dim s() as String={"IdCoti"}
            Return s
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Function GetMappingType() as Type
            Return GetType(Cotizacion)
        End Function


        Protected Overrides ReadOnly Property TableName As String 
            Get
                Return "Cotizacion"
            End Get
        End Property

        

        


        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As Cotizacion)
            Dim _IdTrabjador As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdTrabjador = New System.Nullable(Of System.Int32)
Else
	 _IdTrabjador = reader.GetInt32(1)
End If
Dim _A単o As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(2) Then 
	 _A単o = New System.Nullable(Of System.DateTime)
Else
	 _A単o = reader.GetDateTime(2)
End If
Dim _Numero As System.Nullable(Of System.Int32) 
If reader.IsDBNull(3) Then 
	 _Numero = New System.Nullable(Of System.Int32)
Else
	 _Numero = reader.GetInt32(3)
End If
Dim _IdCliente As System.Nullable(Of System.Int32) 
If reader.IsDBNull(4) Then 
	 _IdCliente = New System.Nullable(Of System.Int32)
Else
	 _IdCliente = reader.GetInt32(4)
End If
Dim _FPago As System.Nullable(Of System.Int32) 
If reader.IsDBNull(5) Then 
	 _FPago = New System.Nullable(Of System.Int32)
Else
	 _FPago = reader.GetInt32(5)
End If
Dim _FecEmision As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(6) Then 
	 _FecEmision = New System.Nullable(Of System.DateTime)
Else
	 _FecEmision = reader.GetDateTime(6)
End If
Dim _Referencia As String
If reader.IsDBNull(7) Then 
	 _Referencia = ""
Else
	 _Referencia = reader.GetString(7)
End If
Dim _Atencion As String
If reader.IsDBNull(8) Then 
	 _Atencion = ""
Else
	 _Atencion = reader.GetString(8)
End If
Dim _Moneda As String
If reader.IsDBNull(9) Then 
	 _Moneda = ""
Else
	 _Moneda = reader.GetString(9)
End If
Dim _TC As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(10) Then 
	 _TC = New System.Nullable(Of System.Decimal)
Else
	 _TC = reader.GetDecimal(10)
End If
Dim _Garantia As String
If reader.IsDBNull(11) Then 
	 _Garantia = ""
Else
	 _Garantia = reader.GetString(11)
End If
Dim _TiempoEntrega As String
If reader.IsDBNull(12) Then 
	 _TiempoEntrega = ""
Else
	 _TiempoEntrega = reader.GetString(12)
End If
Dim _IdVendedor As System.Nullable(Of System.Int32) 
If reader.IsDBNull(13) Then 
	 _IdVendedor = New System.Nullable(Of System.Int32)
Else
	 _IdVendedor = reader.GetInt32(13)
End If
Dim _Nota As String
If reader.IsDBNull(14) Then 
	 _Nota = ""
Else
	 _Nota = reader.GetString(14)
End If
Dim _upsize_ts As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(15) Then 
	 _upsize_ts = New System.Nullable(Of System.DateTime)
Else
	 _upsize_ts = reader.GetDateTime(15)
End If
Dim _ClientesString As String
If reader.IsDBNull(16) Then 
	 _ClientesString = ""
Else
	 _ClientesString = reader.GetString(16)
End If
Dim _TrabajadoresString As String
If reader.IsDBNull(17) Then 
	 _TrabajadoresString = ""
Else
	 _TrabajadoresString = reader.GetString(17)
End If

            Dim Cotizacion As IMappeableCotizacionObject  = CType(entity, IMappeableCotizacionObject)
            Cotizacion.HydrateFields(reader.GetInt32(0), _
_IdTrabjador, _
_A単o, _
_Numero, _
_IdCliente, _
_FPago, _
_FecEmision, _
_Referencia, _
_Atencion, _
_Moneda, _
_TC, _
_Garantia, _
_TiempoEntrega, _
_IdVendedor, _
_Nota, _
_upsize_ts, _
_ClientesString, _
_TrabajadoresString)
        End Sub


        Protected Overrides Function StoredProceduresPrefix() As String 
            Return "coop_"
        End Function

        

        

        ' Complete the aggregations for this entity.         
        Protected Overrides Sub CompleteEntity(ByVal entity As t)
            Dim ClientesEntity As Objects.ClientesObject = Nothing 'Lazy load
Dim TrabajadoresEntity As Objects.TrabajadoresObject = Nothing 'Lazy load
            CType(entity, IMappeableCotizacion).CompleteEntity(ClientesEntity, TrabajadoresEntity)
        End Sub

        


        ''' <summary>
        ''' Get a Cotizacion by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As t
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a CotizacionList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As ObjectList(Of T)
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function

        
        ''' <summary>
        ''' GetOne By Params
        ''' </summary>
        Public Overloads Function GetOne(IdCoti As System.Int32) As t
            Return MyBase.GetObjectByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetOne", IdCoti)
        End Function
        


        ' GetOne By Objects and Params
            

        

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(IdCliente As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByClientes", IdCliente)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByClientes(ByVal Clientes As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByClientes", Clientes.Identifier())
        End Function

    

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(IdTrabjador As System.Int32) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal Trabajadores As IUniqueIdentifiable) As ObjectList(Of T)
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Cotizacion_GetByTrabajadores", Trabajadores.Identifier())
        End Function

    


        'Database Queries 
        


        #Region "IGenericGateway"

        Private Function GetOne2(ByVal identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GetByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class

End Namespace




