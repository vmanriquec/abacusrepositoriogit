
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 15/08/2013 - 05:51 p.m.
' This is a partial class file. The other one is registrodevisitasGateway.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web

Namespace Gateways
        
    Public Partial Class registrodevisitasGateway 
        Inherits BaseGateway(Of registrodevisitasObject, registrodevisitasObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As registrodevisitasGateway

        Private Sub New()
        End Sub

        Public Shared Function Instance() As registrodevisitasGateway
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New registrodevisitasGateway()
                Else
                    Dim inst As registrodevisitasGateway = TryCast(HttpContext.Current.Items("abacusRules.registrodevisitasGatewaySingleton"), registrodevisitasGateway)
                    If inst Is Nothing Then
                        inst = New registrodevisitasGateway()
                        HttpContext.Current.Items.Add("abacusRules.registrodevisitasGatewaySingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region

        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String
            Get
                Return "registrodevisitas"
            End Get
        End Property

        ''' <summary>
        ''' Return the registrodevisitasGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(registrodevisitasGateway ).FullName
            End Get
        End Property


        

        


        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As registrodevisitasObject )
            Dim _IdTrabjador As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdTrabjador = New System.Nullable(Of System.Int32)
Else
	 _IdTrabjador = reader.GetInt32(1)
End If
Dim _idruta As System.Nullable(Of System.Int32) 
If reader.IsDBNull(2) Then 
	 _idruta = New System.Nullable(Of System.Int32)
Else
	 _idruta = reader.GetInt32(2)
End If
Dim _fechavisita As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(3) Then 
	 _fechavisita = New System.Nullable(Of System.DateTime)
Else
	 _fechavisita = reader.GetDateTime(3)
End If
Dim _observaciones As String
If reader.IsDBNull(4) Then 
	 _observaciones = ""
Else
	 _observaciones = reader.GetString(4)
End If
Dim _idtrabajador2 As System.Nullable(Of System.Int32) 
If reader.IsDBNull(5) Then 
	 _idtrabajador2 = New System.Nullable(Of System.Int32)
Else
	 _idtrabajador2 = reader.GetInt32(5)
End If
Dim _rutaString As String
If reader.IsDBNull(6) Then 
	 _rutaString = ""
Else
	 _rutaString = reader.GetString(6)
End If
Dim _TrabajadoresString As String
If reader.IsDBNull(7) Then 
	 _TrabajadoresString = ""
Else
	 _TrabajadoresString = reader.GetString(7)
End If

            Dim registrodevisitas As IMappeableregistrodevisitasObject  = CType(entity, IMappeableregistrodevisitasObject)
            registrodevisitas.HydrateFields(reader.GetInt32(0), _
_IdTrabjador, _
_idruta, _
_fechavisita, _
_observaciones, _
_idtrabajador2, _
_rutaString, _
_TrabajadoresString)
            CType(entity, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As registrodevisitasObject) As Object()
            Dim registrodevisitas As IMappeableregistrodevisitasObject = CType(entity, IMappeableregistrodevisitasObject)
            Return registrodevisitas.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As registrodevisitasObject) As Object()
            Dim registrodevisitas As IMappeableregistrodevisitasObject = CType(entity, IMappeableregistrodevisitasObject)
            Return registrodevisitas.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As registrodevisitasObject) As Object()
            Dim registrodevisitas As IMappeableregistrodevisitasObject = CType(entity, IMappeableregistrodevisitasObject)
            Return registrodevisitas.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal row As registrodevisitasObject, parameters As Object())
            ' Update properties from Output parameters
            CType(row, IMappeableregistrodevisitasObject).UpdateObjectFromOutputParams(parameters)
            CType(row, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String
            Return "coop_"
        End Function


        ''' <summary>
        ''' Get a registrodevisitasObject by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As registrodevisitasObject 
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a registrodevisitasObjectList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As registrodevisitasObjectList 
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function



        ''' <summary>
        ''' Get a registrodevisitasObject by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal Idvisitas As System.Int32) As registrodevisitasObject         
            Return MyBase.GetOne(New registrodevisitasObject(Idvisitas))
        End Function

            


        
        ''' <summary>
        ''' Get a registrodevisitasObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByruta(ByVal transaction As DbTransaction, ByVal idruta As System.Int32) As registrodevisitasObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "registrodevisitas_GetByruta", idruta)
        End Function

        ''' <summary>
        ''' Get a registrodevisitasObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByruta(ByVal transaction As DbTransaction, ruta As IUniqueIdentifiable) As registrodevisitasObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "registrodevisitas_GetByruta", ruta.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a registrodevisitasObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction, ByVal IdTrabjador As System.Int32) As registrodevisitasObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "registrodevisitas_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' Get a registrodevisitasObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction, Trabajadores As IUniqueIdentifiable) As registrodevisitasObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "registrodevisitas_GetByTrabajadores", Trabajadores.Identifier())
        End Function
    


        
        ''' <summary>
        ''' Get a registrodevisitasObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByruta(ByVal idruta As System.Int32) As registrodevisitasObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "registrodevisitas_GetByruta", idruta)
        End Function

        ''' <summary>
        ''' Get a registrodevisitasObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByruta(ruta As IUniqueIdentifiable) As registrodevisitasObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "registrodevisitas_GetByruta", ruta.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a registrodevisitasObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal IdTrabjador As System.Int32) As registrodevisitasObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "registrodevisitas_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' Get a registrodevisitasObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(Trabajadores As IUniqueIdentifiable) As registrodevisitasObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "registrodevisitas_GetByTrabajadores", Trabajadores.Identifier())
        End Function
    

        
        ''' <summary>
        ''' Delete registrodevisitas 
        ''' </summary>
        Public Overloads Sub Delete(ByVal Idvisitas As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "registrodevisitas_Delete", Idvisitas)
        End Sub

        ''' <summary>
        ''' Delete registrodevisitas
        ''' </summary>
        Public Overloads Sub Delete(transaction As DbTransaction , ByVal Idvisitas As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "registrodevisitas_Delete", Idvisitas)
        End Sub

            



        

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' Delete registrodevisitas By ruta
        ''' </summary>
        Public Overloads Sub DeleteByruta(ByVal idruta As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "registrodevisitas_DeleteByruta", idruta)
        End Sub

        ''' <summary>
        ''' Delete registrodevisitas By ruta
        ''' </summary>
        Public Overloads Sub DeleteByruta(ByVal transaction As DbTransaction , ByVal idruta As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "registrodevisitas_DeleteByruta", idruta)
        End Sub

        ''' <summary>
        ''' Delete registrodevisitas By ruta
        ''' </summary>
        Public Overloads Sub DeleteByruta(ByVal ruta As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "registrodevisitas_DeleteByruta", ruta.Identifier())
        End Sub

        ''' <summary>
        ''' Delete registrodevisitas By ruta
        ''' </summary>
        Public Overloads Sub DeleteByruta(ByVal transaction As DbTransaction , ByVal ruta As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "registrodevisitas_DeleteByruta", ruta.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' Delete registrodevisitas By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "registrodevisitas_DeleteByTrabajadores", IdTrabjador)
        End Sub

        ''' <summary>
        ''' Delete registrodevisitas By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal transaction As DbTransaction , ByVal IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "registrodevisitas_DeleteByTrabajadores", IdTrabjador)
        End Sub

        ''' <summary>
        ''' Delete registrodevisitas By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal Trabajadores As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "registrodevisitas_DeleteByTrabajadores", Trabajadores.Identifier())
        End Sub

        ''' <summary>
        ''' Delete registrodevisitas By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal transaction As DbTransaction , ByVal Trabajadores As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "registrodevisitas_DeleteByTrabajadores", Trabajadores.Identifier())
        End Sub

        

    


        'Database Queries 
        



        #Region "IGenericGateway"

        Private Function GetOne2(identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GeyByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class
End Namespace




