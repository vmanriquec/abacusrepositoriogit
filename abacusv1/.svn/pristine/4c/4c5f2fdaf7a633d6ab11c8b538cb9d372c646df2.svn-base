
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:49 p.m.
' This is a partial class file. The other one is ProvContactosEntity.cs
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports abacusRules.Objects


Imports Cooperator.Framework.Core
Imports Cooperator.Framework.Core.LazyLoad
Imports System

Namespace Entities

    Public Partial Class ProvContactos
        Inherits Objects.ProvContactosObject
        Implements IMappeableProvContactos
        Implements IEquatable(Of ProvContactos)
        Implements ICloneable

        #Region "Ctor"

        Public Sub New()
            MyBase.New()
            
        End Sub

        
        Public Sub New (ByVal IdProvContactos As System.Int32)
            MyBase.New()

			_IdProvContactos = IdProvContactos

            
            Call Initialized()
        End Sub
        

        
        Public Sub New(ByVal IdProvContactos As System.Int32, _
			ByVal Contactop As System.String, _
			ByVal Anexop As System.String, _
			ByVal TipMovil1p As System.String, _
			ByVal Movil1p As System.String, _
			ByVal Email1p As System.String, _
			ByVal Email2p As System.String, _
			ByVal TipMovil2p As System.String, _
			ByVal Movil2p As System.String, _
			ByVal IdProveedor As System.Nullable(Of System.Int32), _
			ByVal Trato As System.String, _
			ByVal ProveedoresString As System.String)
            MyBase.New()

			_IdProvContactos = IdProvContactos
			_Contactop = Contactop
			_Anexop = Anexop
			_TipMovil1p = TipMovil1p
			_Movil1p = Movil1p
			_Email1p = Email1p
			_Email2p = Email2p
			_TipMovil2p = TipMovil2p
			_Movil2p = Movil2p
			_IdProveedor = IdProveedor
			_Trato = Trato
			_ProveedoresString = ProveedoresString

            
            Call Initialized()
        End Sub
        
        #End Region

        #Region "Fields"

        Protected  _ProveedoresEntity As Objects.ProveedoresObject

        #End Region

        #Region "Properties"
        
Dim _ProveedoresEntityFetched As Boolean
        ''' <summary>
        ''' 
        ''' </summary>
        Public Overridable Property ProveedoresEntity As Objects.ProveedoresObject
            Get
                If _ProveedoresEntity Is Nothing  AndAlso Me.IdProveedor.HasValue AndAlso Not _ProveedoresEntityFetched  Then
_ProveedoresEntityFetched = True
Dim _ProveedoresEntityTemp As Objects.ProveedoresObject = New Objects.ProveedoresObject(Me.IdProveedor.Value) 
Dim lazyProvider As ILazyProvider = LazyProviderFactory.Get(GetType(Objects.ProveedoresObject))
 _ProveedoresEntity = CType(lazyProvider.GetEntity(GetType(Objects.ProveedoresObject), _ProveedoresEntityTemp), Objects.ProveedoresObject)
End If

                Return _ProveedoresEntity
            End Get
            Set (value As Objects.ProveedoresObject)
                MyBase.PropertyModified()
                _ProveedoresEntity = value
                If value IsNot Nothing Then
   _IdProveedor = value.IdProveedor
If value.Nombre IsNot Nothing Then 
_ProveedoresString = value.Nombre.ToString() 
Else
    _ProveedoresString = "" 
End If

Else 
   _IdProveedor = Nothing
_ProveedoresString = ""
End If

                            CorrectDescriptionField(value)


            End Set
        End Property
        
        #End Region

        ''' <summary>
        ''' Returns de original value of entity since was created or restored. 
        ''' </summary>
        Public Shadows Function OriginalValue() As ProvContactos 
                Return CType(MyBase.OriginalValue, ProvContactos)
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        Protected Overrides Function Clone() As Object 
            Dim newObject As ProvContactos 
            

            newObject = CType(Me.MemberwiseClone(), ProvContactos)
            ' Entities
                         
            If Me._ProveedoresEntity IsNot Nothing Then
                newObject._ProveedoresEntity = CType(CType(Me._ProveedoresEntity, ICloneable).Clone(),Objects.ProveedoresObject)
            End If
            
            ' Colections
            
            ' OriginalValue
            Dim newOriginalValue As ProvContactos
            If MyBase.InternalOriginalValue IsNot Nothing Then
                newOriginalValue = CType(Me.OriginalValue().MemberwiseClone(), ProvContactos)
                ' Entities
                             
                If Me.OriginalValue()._ProveedoresEntity IsNot Nothing Then
                    newOriginalValue._ProveedoresEntity = CType(CType(Me.OriginalValue()._ProveedoresEntity, ICloneable).Clone(), Objects.ProveedoresObject)
                End If
                
                ' Colections
                            
                newObject.InternalOriginalValue = newOriginalValue

            End If
            Return newObject
        End Function



        Private Sub CompleteEntity(ProveedoresEntity As Objects.ProveedoresObject) Implements IMappeableProvContactos.CompleteEntity
        _ProveedoresEntity = ProveedoresEntity
        End Sub

        
        Private Function IsProveedoresEntityNull() As Boolean Implements IMappeableProvContactos.IsProveedoresEntityNull
            Return IsNothing(_ProveedoresEntity)
        End Function
        

        Private Sub SetFKValuesForChilds(entity As ProvContactos) Implements IMappeableProvContactos.SetFKValuesForChilds
                
        End Sub

        Public Overloads Function Equals(other As ProvContactos) As Boolean Implements IEquatable(Of ProvContactos).Equals
            Return UniqueIdentifierHelper.IsSameObject(CType(Me, IUniqueIdentifiable), CType(other, IUniqueIdentifiable))
        End Function

    End Class

    Public Interface IMappeableProvContactos
        Sub CompleteEntity(ProveedoresEntity As Objects.ProveedoresObject)
        
        Function IsProveedoresEntityNull() As Boolean
        
        Sub SetFKValuesForChilds(entity As ProvContactos )
    End Interface

    Public Partial Class ProvContactosList
        Inherits ObjectList(Of ProvContactos)    
    End Class
End Namespace

Namespace Views
    Partial Public Class ProvContactosListView
        Inherits ObjectListView(Of Entities.ProvContactos)

        Sub New(ByVal list As Entities.ProvContactosList)
            MyBase.New(list)
        End Sub
    End Class
End NameSpace


