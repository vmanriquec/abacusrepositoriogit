
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:48 p.m.
' This is a partial class file. The other one is IngresosGateway.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web

Namespace Gateways
        
    Public Partial Class IngresosGateway 
        Inherits BaseGateway(Of IngresosObject, IngresosObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As IngresosGateway

        Private Sub New()
        End Sub

        Public Shared Function Instance() As IngresosGateway
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New IngresosGateway()
                Else
                    Dim inst As IngresosGateway = TryCast(HttpContext.Current.Items("abacusRules.IngresosGatewaySingleton"), IngresosGateway)
                    If inst Is Nothing Then
                        inst = New IngresosGateway()
                        HttpContext.Current.Items.Add("abacusRules.IngresosGatewaySingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region

        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String
            Get
                Return "Ingresos"
            End Get
        End Property

        ''' <summary>
        ''' Return the IngresosGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(IngresosGateway ).FullName
            End Get
        End Property


        

        


        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As IngresosObject )
            Dim _IdAlmacen As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdAlmacen = New System.Nullable(Of System.Int32)
Else
	 _IdAlmacen = reader.GetInt32(1)
End If
Dim _IdTrabjador As System.Nullable(Of System.Int32) 
If reader.IsDBNull(2) Then 
	 _IdTrabjador = New System.Nullable(Of System.Int32)
Else
	 _IdTrabjador = reader.GetInt32(2)
End If
Dim _Fecha As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(3) Then 
	 _Fecha = New System.Nullable(Of System.DateTime)
Else
	 _Fecha = reader.GetDateTime(3)
End If
Dim _Clasificacion As System.Nullable(Of System.Int32) 
If reader.IsDBNull(4) Then 
	 _Clasificacion = New System.Nullable(Of System.Int32)
Else
	 _Clasificacion = reader.GetInt32(4)
End If
Dim _TipDoc As System.Nullable(Of System.Int32) 
If reader.IsDBNull(5) Then 
	 _TipDoc = New System.Nullable(Of System.Int32)
Else
	 _TipDoc = reader.GetInt32(5)
End If
Dim _Serie As String
If reader.IsDBNull(6) Then 
	 _Serie = ""
Else
	 _Serie = reader.GetString(6)
End If
Dim _Numero As String
If reader.IsDBNull(7) Then 
	 _Numero = ""
Else
	 _Numero = reader.GetString(7)
End If
Dim _IdProveedor As System.Nullable(Of System.Int32) 
If reader.IsDBNull(8) Then 
	 _IdProveedor = New System.Nullable(Of System.Int32)
Else
	 _IdProveedor = reader.GetInt32(8)
End If
Dim _Moneda As System.Nullable(Of System.Int32) 
If reader.IsDBNull(9) Then 
	 _Moneda = New System.Nullable(Of System.Int32)
Else
	 _Moneda = reader.GetInt32(9)
End If
Dim _ModoPago As System.Nullable(Of System.Int32) 
If reader.IsDBNull(10) Then 
	 _ModoPago = New System.Nullable(Of System.Int32)
Else
	 _ModoPago = reader.GetInt32(10)
End If
Dim _estado As String
If reader.IsDBNull(11) Then 
	 _estado = ""
Else
	 _estado = reader.GetString(11)
End If
Dim _valortotal As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(12) Then 
	 _valortotal = New System.Nullable(Of System.Decimal)
Else
	 _valortotal = reader.GetDecimal(12)
End If
Dim _lote As String
If reader.IsDBNull(13) Then 
	 _lote = ""
Else
	 _lote = reader.GetString(13)
End If
Dim _AlmacenesString As String
If reader.IsDBNull(14) Then 
	 _AlmacenesString = ""
Else
	 _AlmacenesString = reader.GetString(14)
End If
Dim _ProveedoresString As String
If reader.IsDBNull(15) Then 
	 _ProveedoresString = ""
Else
	 _ProveedoresString = reader.GetString(15)
End If
Dim _TrabajadoresString As String
If reader.IsDBNull(16) Then 
	 _TrabajadoresString = ""
Else
	 _TrabajadoresString = reader.GetString(16)
End If

            Dim Ingresos As IMappeableIngresosObject  = CType(entity, IMappeableIngresosObject)
            Ingresos.HydrateFields(reader.GetInt32(0), _
_IdAlmacen, _
_IdTrabjador, _
_Fecha, _
_Clasificacion, _
_TipDoc, _
_Serie, _
_Numero, _
_IdProveedor, _
_Moneda, _
_ModoPago, _
_estado, _
_valortotal, _
_lote, _
_AlmacenesString, _
_ProveedoresString, _
_TrabajadoresString)
            CType(entity, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As IngresosObject) As Object()
            Dim Ingresos As IMappeableIngresosObject = CType(entity, IMappeableIngresosObject)
            Return Ingresos.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As IngresosObject) As Object()
            Dim Ingresos As IMappeableIngresosObject = CType(entity, IMappeableIngresosObject)
            Return Ingresos.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As IngresosObject) As Object()
            Dim Ingresos As IMappeableIngresosObject = CType(entity, IMappeableIngresosObject)
            Return Ingresos.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal row As IngresosObject, parameters As Object())
            ' Update properties from Output parameters
            CType(row, IMappeableIngresosObject).UpdateObjectFromOutputParams(parameters)
            CType(row, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String
            Return "coop_"
        End Function


        ''' <summary>
        ''' Get a IngresosObject by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As IngresosObject 
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a IngresosObjectList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As IngresosObjectList 
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function



        ''' <summary>
        ''' Get a IngresosObject by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdIngresos As System.Int32) As IngresosObject         
            Return MyBase.GetOne(New IngresosObject(IdIngresos))
        End Function

            


        
        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal transaction As DbTransaction, ByVal IdAlmacen As System.Int32) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_GetByAlmacenes", IdAlmacen)
        End Function

        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal transaction As DbTransaction, Almacenes As IUniqueIdentifiable) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_GetByAlmacenes", Almacenes.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProveedores(ByVal transaction As DbTransaction, ByVal IdProveedor As System.Int32) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_GetByProveedores", IdProveedor)
        End Function

        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProveedores(ByVal transaction As DbTransaction, Proveedores As IUniqueIdentifiable) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_GetByProveedores", Proveedores.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction, ByVal IdTrabjador As System.Int32) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal transaction As DbTransaction, Trabajadores As IUniqueIdentifiable) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_GetByTrabajadores", Trabajadores.Identifier())
        End Function
    


        
        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByAlmacenes(ByVal IdAlmacen As System.Int32) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Ingresos_GetByAlmacenes", IdAlmacen)
        End Function

        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByAlmacenes(Almacenes As IUniqueIdentifiable) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Ingresos_GetByAlmacenes", Almacenes.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProveedores(ByVal IdProveedor As System.Int32) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Ingresos_GetByProveedores", IdProveedor)
        End Function

        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProveedores(Proveedores As IUniqueIdentifiable) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Ingresos_GetByProveedores", Proveedores.Identifier())
        End Function
    
        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(ByVal IdTrabjador As System.Int32) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Ingresos_GetByTrabajadores", IdTrabjador)
        End Function

        ''' <summary>
        ''' Get a IngresosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByTrabajadores(Trabajadores As IUniqueIdentifiable) As IngresosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "Ingresos_GetByTrabajadores", Trabajadores.Identifier())
        End Function
    

        
        ''' <summary>
        ''' Delete Ingresos 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdIngresos As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Ingresos_Delete", IdIngresos)
        End Sub

        ''' <summary>
        ''' Delete Ingresos
        ''' </summary>
        Public Overloads Sub Delete(transaction As DbTransaction , ByVal IdIngresos As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_Delete", IdIngresos)
        End Sub

            



        

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' Delete Ingresos By Almacenes
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal IdAlmacen As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Ingresos_DeleteByAlmacenes", IdAlmacen)
        End Sub

        ''' <summary>
        ''' Delete Ingresos By Almacenes
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal transaction As DbTransaction , ByVal IdAlmacen As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_DeleteByAlmacenes", IdAlmacen)
        End Sub

        ''' <summary>
        ''' Delete Ingresos By Almacenes
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal Almacenes As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Ingresos_DeleteByAlmacenes", Almacenes.Identifier())
        End Sub

        ''' <summary>
        ''' Delete Ingresos By Almacenes
        ''' </summary>
        Public Overloads Sub DeleteByAlmacenes(ByVal transaction As DbTransaction , ByVal Almacenes As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_DeleteByAlmacenes", Almacenes.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' Delete Ingresos By Proveedores
        ''' </summary>
        Public Overloads Sub DeleteByProveedores(ByVal IdProveedor As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Ingresos_DeleteByProveedores", IdProveedor)
        End Sub

        ''' <summary>
        ''' Delete Ingresos By Proveedores
        ''' </summary>
        Public Overloads Sub DeleteByProveedores(ByVal transaction As DbTransaction , ByVal IdProveedor As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_DeleteByProveedores", IdProveedor)
        End Sub

        ''' <summary>
        ''' Delete Ingresos By Proveedores
        ''' </summary>
        Public Overloads Sub DeleteByProveedores(ByVal Proveedores As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Ingresos_DeleteByProveedores", Proveedores.Identifier())
        End Sub

        ''' <summary>
        ''' Delete Ingresos By Proveedores
        ''' </summary>
        Public Overloads Sub DeleteByProveedores(ByVal transaction As DbTransaction , ByVal Proveedores As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_DeleteByProveedores", Proveedores.Identifier())
        End Sub

        

    

        ''' <summary>
        ''' Delete Ingresos By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Ingresos_DeleteByTrabajadores", IdTrabjador)
        End Sub

        ''' <summary>
        ''' Delete Ingresos By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal transaction As DbTransaction , ByVal IdTrabjador As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_DeleteByTrabajadores", IdTrabjador)
        End Sub

        ''' <summary>
        ''' Delete Ingresos By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal Trabajadores As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "Ingresos_DeleteByTrabajadores", Trabajadores.Identifier())
        End Sub

        ''' <summary>
        ''' Delete Ingresos By Trabajadores
        ''' </summary>
        Public Overloads Sub DeleteByTrabajadores(ByVal transaction As DbTransaction , ByVal Trabajadores As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "Ingresos_DeleteByTrabajadores", Trabajadores.Identifier())
        End Sub

        

    


        'Database Queries 
        



        #Region "IGenericGateway"

        Private Function GetOne2(identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GeyByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class
End Namespace




