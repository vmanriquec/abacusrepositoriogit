
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:48 p.m.
' This is a partial class file. The other one is ProvContactosGateway.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web

Namespace Gateways
        
    Public Partial Class ProvContactosGateway 
        Inherits BaseGateway(Of ProvContactosObject, ProvContactosObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As ProvContactosGateway

        Private Sub New()
        End Sub

        Public Shared Function Instance() As ProvContactosGateway
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New ProvContactosGateway()
                Else
                    Dim inst As ProvContactosGateway = TryCast(HttpContext.Current.Items("abacusRules.ProvContactosGatewaySingleton"), ProvContactosGateway)
                    If inst Is Nothing Then
                        inst = New ProvContactosGateway()
                        HttpContext.Current.Items.Add("abacusRules.ProvContactosGatewaySingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region

        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String
            Get
                Return "ProvContactos"
            End Get
        End Property

        ''' <summary>
        ''' Return the ProvContactosGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(ProvContactosGateway ).FullName
            End Get
        End Property


        

        


        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As ProvContactosObject )
            Dim _Contactop As String
If reader.IsDBNull(1) Then 
	 _Contactop = ""
Else
	 _Contactop = reader.GetString(1)
End If
Dim _Anexop As String
If reader.IsDBNull(2) Then 
	 _Anexop = ""
Else
	 _Anexop = reader.GetString(2)
End If
Dim _TipMovil1p As String
If reader.IsDBNull(3) Then 
	 _TipMovil1p = ""
Else
	 _TipMovil1p = reader.GetString(3)
End If
Dim _Movil1p As String
If reader.IsDBNull(4) Then 
	 _Movil1p = ""
Else
	 _Movil1p = reader.GetString(4)
End If
Dim _Email1p As String
If reader.IsDBNull(5) Then 
	 _Email1p = ""
Else
	 _Email1p = reader.GetString(5)
End If
Dim _Email2p As String
If reader.IsDBNull(6) Then 
	 _Email2p = ""
Else
	 _Email2p = reader.GetString(6)
End If
Dim _TipMovil2p As String
If reader.IsDBNull(7) Then 
	 _TipMovil2p = ""
Else
	 _TipMovil2p = reader.GetString(7)
End If
Dim _Movil2p As String
If reader.IsDBNull(8) Then 
	 _Movil2p = ""
Else
	 _Movil2p = reader.GetString(8)
End If
Dim _IdProveedor As System.Nullable(Of System.Int32) 
If reader.IsDBNull(9) Then 
	 _IdProveedor = New System.Nullable(Of System.Int32)
Else
	 _IdProveedor = reader.GetInt32(9)
End If
Dim _Trato As String
If reader.IsDBNull(10) Then 
	 _Trato = ""
Else
	 _Trato = reader.GetString(10)
End If
Dim _ProveedoresString As String
If reader.IsDBNull(11) Then 
	 _ProveedoresString = ""
Else
	 _ProveedoresString = reader.GetString(11)
End If

            Dim ProvContactos As IMappeableProvContactosObject  = CType(entity, IMappeableProvContactosObject)
            ProvContactos.HydrateFields(reader.GetInt32(0), _
_Contactop, _
_Anexop, _
_TipMovil1p, _
_Movil1p, _
_Email1p, _
_Email2p, _
_TipMovil2p, _
_Movil2p, _
_IdProveedor, _
_Trato, _
_ProveedoresString)
            CType(entity, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As ProvContactosObject) As Object()
            Dim ProvContactos As IMappeableProvContactosObject = CType(entity, IMappeableProvContactosObject)
            Return ProvContactos.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As ProvContactosObject) As Object()
            Dim ProvContactos As IMappeableProvContactosObject = CType(entity, IMappeableProvContactosObject)
            Return ProvContactos.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As ProvContactosObject) As Object()
            Dim ProvContactos As IMappeableProvContactosObject = CType(entity, IMappeableProvContactosObject)
            Return ProvContactos.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal row As ProvContactosObject, parameters As Object())
            ' Update properties from Output parameters
            CType(row, IMappeableProvContactosObject).UpdateObjectFromOutputParams(parameters)
            CType(row, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String
            Return "coop_"
        End Function


        ''' <summary>
        ''' Get a ProvContactosObject by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As ProvContactosObject 
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a ProvContactosObjectList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As ProvContactosObjectList 
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function



        ''' <summary>
        ''' Get a ProvContactosObject by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdProvContactos As System.Int32) As ProvContactosObject         
            Return MyBase.GetOne(New ProvContactosObject(IdProvContactos))
        End Function

            


        
        ''' <summary>
        ''' Get a ProvContactosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProveedores(ByVal transaction As DbTransaction, ByVal IdProveedor As System.Int32) As ProvContactosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ProvContactos_GetByProveedores", IdProveedor)
        End Function

        ''' <summary>
        ''' Get a ProvContactosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProveedores(ByVal transaction As DbTransaction, Proveedores As IUniqueIdentifiable) As ProvContactosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ProvContactos_GetByProveedores", Proveedores.Identifier())
        End Function
    


        
        ''' <summary>
        ''' Get a ProvContactosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProveedores(ByVal IdProveedor As System.Int32) As ProvContactosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ProvContactos_GetByProveedores", IdProveedor)
        End Function

        ''' <summary>
        ''' Get a ProvContactosObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByProveedores(Proveedores As IUniqueIdentifiable) As ProvContactosObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ProvContactos_GetByProveedores", Proveedores.Identifier())
        End Function
    

        
        ''' <summary>
        ''' Delete ProvContactos 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdProvContactos As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ProvContactos_Delete", IdProvContactos)
        End Sub

        ''' <summary>
        ''' Delete ProvContactos
        ''' </summary>
        Public Overloads Sub Delete(transaction As DbTransaction , ByVal IdProvContactos As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ProvContactos_Delete", IdProvContactos)
        End Sub

            



        

    

    

    

    

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' Delete ProvContactos By Proveedores
        ''' </summary>
        Public Overloads Sub DeleteByProveedores(ByVal IdProveedor As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ProvContactos_DeleteByProveedores", IdProveedor)
        End Sub

        ''' <summary>
        ''' Delete ProvContactos By Proveedores
        ''' </summary>
        Public Overloads Sub DeleteByProveedores(ByVal transaction As DbTransaction , ByVal IdProveedor As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ProvContactos_DeleteByProveedores", IdProveedor)
        End Sub

        ''' <summary>
        ''' Delete ProvContactos By Proveedores
        ''' </summary>
        Public Overloads Sub DeleteByProveedores(ByVal Proveedores As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ProvContactos_DeleteByProveedores", Proveedores.Identifier())
        End Sub

        ''' <summary>
        ''' Delete ProvContactos By Proveedores
        ''' </summary>
        Public Overloads Sub DeleteByProveedores(ByVal transaction As DbTransaction , ByVal Proveedores As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ProvContactos_DeleteByProveedores", Proveedores.Identifier())
        End Sub

        

    


        'Database Queries 
        



        #Region "IGenericGateway"

        Private Function GetOne2(identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GeyByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class
End Namespace




