
'------------------------------------------------------------------------------
' This file was generated by Cooperator Modeler, version 1.3.3.0
' Created: 20/08/2013 - 01:48 p.m.
' This is a partial class file. The other one is FacturaDetGateway.vb
' You should not modifiy this file, please edit the other partial class file.
'------------------------------------------------------------------------------

Imports System
Imports abacusRules.Objects
Imports Cooperator.Framework.Data
Imports Cooperator.Framework.Data.Exceptions
Imports Cooperator.Framework.Core
Imports System.Data.Common
Imports System.Reflection
Imports System.Web

Namespace Gateways
        
    Public Partial Class FacturaDetGateway 
        Inherits BaseGateway(Of FacturaDetObject, FacturaDetObjectList)
        Implements IGenericGateway

#Region "Singleton"

        Private Shared _instance As FacturaDetGateway

        Private Sub New()
        End Sub

        Public Shared Function Instance() As FacturaDetGateway
            If _instance Is Nothing Then
                If HttpContext.Current Is Nothing Then
                    _instance = New FacturaDetGateway()
                Else
                    Dim inst As FacturaDetGateway = TryCast(HttpContext.Current.Items("abacusRules.FacturaDetGatewaySingleton"), FacturaDetGateway)
                    If inst Is Nothing Then
                        inst = New FacturaDetGateway()
                        HttpContext.Current.Items.Add("abacusRules.FacturaDetGatewaySingleton", inst)
                    End If
                    Return inst
                End If
            End If
            Return _instance
        End Function

#End Region

        ''' <summary>
        ''' Return the mapped table name
        ''' </summary>
        Protected Overrides ReadOnly Property TableName() As String
            Get
                Return "FacturaDet"
            End Get
        End Property

        ''' <summary>
        ''' Return the FacturaDetGateway type FullName
        ''' </summary>
        Protected Overrides ReadOnly Property RuleName() As String
            Get
                Return GetType(FacturaDetGateway ).FullName
            End Get
        End Property


        

        


        ''' <summary>
        ''' Assign properties values based on DataReader
        ''' </summary>
        Protected Overrides Sub HydrateFields(ByVal reader As DbDataReader, ByVal entity As FacturaDetObject )
            Dim _IdFactura As System.Nullable(Of System.Int32) 
If reader.IsDBNull(1) Then 
	 _IdFactura = New System.Nullable(Of System.Int32)
Else
	 _IdFactura = reader.GetInt32(1)
End If
Dim _Codigo As System.Nullable(Of System.Int32) 
If reader.IsDBNull(2) Then 
	 _Codigo = New System.Nullable(Of System.Int32)
Else
	 _Codigo = reader.GetInt32(2)
End If
Dim _Producto As System.Nullable(Of System.Int32) 
If reader.IsDBNull(3) Then 
	 _Producto = New System.Nullable(Of System.Int32)
Else
	 _Producto = reader.GetInt32(3)
End If
Dim _Cantidad As System.Nullable(Of System.Int32) 
If reader.IsDBNull(4) Then 
	 _Cantidad = New System.Nullable(Of System.Int32)
Else
	 _Cantidad = reader.GetInt32(4)
End If
Dim _PUnitario As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(5) Then 
	 _PUnitario = New System.Nullable(Of System.Decimal)
Else
	 _PUnitario = reader.GetDecimal(5)
End If
Dim _Dscto As System.Nullable(Of System.Decimal) 
If reader.IsDBNull(6) Then 
	 _Dscto = New System.Nullable(Of System.Decimal)
Else
	 _Dscto = reader.GetDecimal(6)
End If
Dim _upsize_ts As System.Nullable(Of System.DateTime) 
If reader.IsDBNull(7) Then 
	 _upsize_ts = New System.Nullable(Of System.DateTime)
Else
	 _upsize_ts = reader.GetDateTime(7)
End If
Dim _FacturaString As String
If reader.IsDBNull(8) Then 
	 _FacturaString = ""
Else
	 _FacturaString = reader.GetString(8)
End If

            Dim FacturaDet As IMappeableFacturaDetObject  = CType(entity, IMappeableFacturaDetObject)
            FacturaDet.HydrateFields(reader.GetInt32(0), _
_IdFactura, _
_Codigo, _
_Producto, _
_Cantidad, _
_PUnitario, _
_Dscto, _
_upsize_ts, _
_FacturaString)
            CType(entity, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' Get field values to call insertion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForInsert(ByVal entity As FacturaDetObject) As Object()
            Dim FacturaDet As IMappeableFacturaDetObject = CType(entity, IMappeableFacturaDetObject)
            Return FacturaDet.GetFieldsForInsert()
        End Function

        ''' <summary>
        ''' Get field values to call update stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForUpdate(ByVal entity As FacturaDetObject) As Object()
            Dim FacturaDet As IMappeableFacturaDetObject = CType(entity, IMappeableFacturaDetObject)
            Return FacturaDet.GetFieldsForUpdate()
        End Function

        ''' <summary>
        ''' Get field values to call deletion stored procedure
        ''' </summary>
        Protected Overrides Function GetFieldsForDelete(ByVal entity As FacturaDetObject) As Object()
            Dim FacturaDet As IMappeableFacturaDetObject = CType(entity, IMappeableFacturaDetObject)
            Return FacturaDet.GetFieldsForDelete()
        End Function

        ''' <summary>
        ''' Raised after insert and update. Update properties from Output parameters
        ''' </summary>
        Protected Overrides Sub UpdateObjectFromOutputParams(ByVal row As FacturaDetObject, parameters As Object())
            ' Update properties from Output parameters
            CType(row, IMappeableFacturaDetObject).UpdateObjectFromOutputParams(parameters)
            CType(row, IObject).State = ObjectState.Restored
        End Sub

        ''' <summary>
        ''' StoredProceduresPrefix, for example: coop_
        ''' </summary>
        Protected Overrides Function StoredProceduresPrefix() As String
            Return "coop_"
        End Function


        ''' <summary>
        ''' Get a FacturaDetObject by execute a SQL Query Text
        ''' </summary>
        Public Function GetOneBySQLQuery(sqlQueryText As String) As FacturaDetObject 
            Return MyBase.GetObjectBySQLText(sqlQueryText)
        End Function

        ''' <summary>
        ''' Get a FacturaDetObjectList by execute a SQL Query Text
        ''' </summary>
        Public Function GetBySQLQuery(sqlQueryText As String) As FacturaDetObjectList 
            Return MyBase.GetObjectListBySQLText(sqlQueryText)
        End Function



        ''' <summary>
        ''' Get a FacturaDetObject by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetOne(ByVal IdFactDet As System.Int32) As FacturaDetObject         
            Return MyBase.GetOne(New FacturaDetObject(IdFactDet))
        End Function

            


        
        ''' <summary>
        ''' Get a FacturaDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByFactura(ByVal transaction As DbTransaction, ByVal IdFactura As System.Int32) As FacturaDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "FacturaDet_GetByFactura", IdFactura)
        End Function

        ''' <summary>
        ''' Get a FacturaDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByFactura(ByVal transaction As DbTransaction, Factura As IUniqueIdentifiable) As FacturaDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "FacturaDet_GetByFactura", Factura.Identifier())
        End Function
    


        
        ''' <summary>
        ''' Get a FacturaDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByFactura(ByVal IdFactura As System.Int32) As FacturaDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "FacturaDet_GetByFactura", IdFactura)
        End Function

        ''' <summary>
        ''' Get a FacturaDetObjectList by calling a Stored Procedure
        ''' </summary>
        Public Overloads Function GetByFactura(Factura As IUniqueIdentifiable) As FacturaDetObjectList 
            Return MyBase.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "FacturaDet_GetByFactura", Factura.Identifier())
        End Function
    

        
        ''' <summary>
        ''' Delete FacturaDet 
        ''' </summary>
        Public Overloads Sub Delete(ByVal IdFactDet As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "FacturaDet_Delete", IdFactDet)
        End Sub

        ''' <summary>
        ''' Delete FacturaDet
        ''' </summary>
        Public Overloads Sub Delete(transaction As DbTransaction , ByVal IdFactDet As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "FacturaDet_Delete", IdFactDet)
        End Sub

            



        

    

    

    

    

    

    

    

    

    

        ''' <summary>
        ''' Delete FacturaDet By Factura
        ''' </summary>
        Public Overloads Sub DeleteByFactura(ByVal IdFactura As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "FacturaDet_DeleteByFactura", IdFactura)
        End Sub

        ''' <summary>
        ''' Delete FacturaDet By Factura
        ''' </summary>
        Public Overloads Sub DeleteByFactura(ByVal transaction As DbTransaction , ByVal IdFactura As System.Int32)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "FacturaDet_DeleteByFactura", IdFactura)
        End Sub

        ''' <summary>
        ''' Delete FacturaDet By Factura
        ''' </summary>
        Public Overloads Sub DeleteByFactura(ByVal Factura As IUniqueIdentifiable )
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "FacturaDet_DeleteByFactura", Factura.Identifier())
        End Sub

        ''' <summary>
        ''' Delete FacturaDet By Factura
        ''' </summary>
        Public Overloads Sub DeleteByFactura(ByVal transaction As DbTransaction , ByVal Factura As IUniqueIdentifiable)
            MyBase.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "FacturaDet_DeleteByFactura", Factura.Identifier())
        End Sub

        

    


        'Database Queries 
        



        #Region "IGenericGateway"

        Private Function GetOne2(identifier As IUniqueIdentifiable) As Object Implements IGenericGateway.GetOne
            Return MyBase.GetOne(identifier)
        End Function

        Private Function GetAll2() As Object Implements IGenericGateway.GetAll
            Return MyBase.GetAll()
        End Function

        Private Function GeyByParent2(parentEntity As IUniqueIdentifiable) As Object Implements IGenericGateway.GetByParent
            Return MyBase.GetByParent(parentEntity)
        End Function

        #End Region

    End Class
End Namespace




